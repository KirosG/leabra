// ta_Dump File v3.0 -- code v8.1.1.0 rev11060
LeabraProject .projects[0] { 
 Doc_Group @.docs = [2] {
  taDoc @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
   };
  };
  taDoc @[1] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
   };
  };
 };

 Wizard_Group @.wizards = [1] {
  LeabraWizard @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
   };
  };
 };

 ControlPanel_Group @.ctrl_panels = [2] {
  ControlPanel @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
   };

   ControlPanelMember_Group @.mbrs = [7] {
    ControlPanelMember @[0] { };
    ControlPanelMember @[1] { };
    ControlPanelMember @[2] { };
    ControlPanelMember @[3] { };
    ControlPanelMember @[4] { };
    ControlPanelMember @[5] { };
    ControlPanelMember @[6] { };
    ControlPanelMember_Group @.gp[0] = [3] { 
     ControlPanelMember @[0] { };
     ControlPanelMember @[1] { };
     ControlPanelMember @[2] { };
    };
   };

   ControlPanelMethod_Group @.mths = [8] {
    ControlPanelMethod @[0] { };
    ControlPanelMethod @[1] { };
    ControlPanelMethod @[2] { };
    ControlPanelMethod @[3] { };
    ControlPanelMethod @[4] { };
    ControlPanelMethod @[5] { };
    ControlPanelMethod @[6] { };
    ControlPanelMethod @[7] { };
   };
  };
  ClusterRun @[1] { 
   ControlPanelMember_Group @.mbrs = [0] {
   };

   ControlPanelMethod_Group @.mths = [0] {
   };

   ParamSearchAlgo_List @.search_algos = [0] {
   };
  };
 };

 ParamSet_Group @.active_params = [0] {
 };

 ArchivedParams_Group @.archived_params = [0] {
 };

 DataTable_Group @.data = [0] {
  DataTable_Group @.gp[0] = [3] { 
   DataTable @[0] { 
    DataTableCols @.data = [3] {
     String_Data @[0] { };
     float_Data @[1] { };
     float_Data @[2] { };
    };

    DataOpList @.last_sort_spec.ops = [0] {
    };
   };
   DataTable @[1] { 
    DataTableCols @.data = [3] {
     String_Data @[0] { };
     float_Data @[1] { };
     float_Data @[2] { };
    };

    DataOpList @.last_sort_spec.ops = [0] {
    };
   };
   DataTable @[2] { 
    DataTableCols @.data = [3] {
     String_Data @[0] { };
     float_Data @[1] { };
     float_Data @[2] { };
    };

    DataOpList @.last_sort_spec.ops = [0] {
    };
   };
  };
  DataTable_Group @.gp[1] = [4] { 
   DataTable @[0] { 
    DataTableCols @.data = [5] {
     String_Data @[0] { };
     float_Data @[1] { };
     float_Data @[2] { };
     float_Data @[3] { };
     Variant_Data @[4] { };
    };

    DataOpList @.last_sort_spec.ops = [0] {
    };
   };
   DataTable @[1] { 
    DataTableCols @.data = [8] {
     int_Data @[0] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     int_Data @[1] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     float_Data @[2] { };
     float_Data @[3] { };
     float_Data @[4] { };
     float_Data @[5] { };
     float_Data @[6] { };
     float_Data @[7] { };
    };

    DataOpList @.last_sort_spec.ops = [0] {
    };
   };
   DataTable @[2] { 
    DataTableCols @.data = [0] {
    };

    DataOpList @.last_sort_spec.ops = [0] {
    };
   };
   DataTable @[3] { 
    DataTableCols @.data = [18] {
     int_Data @[0] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     float_Data @[1] { };
     float_Data @[2] { };
     float_Data @[3] { };
     float_Data @[4] { };
     float_Data @[5] { };
     float_Data @[6] { };
     float_Data @[7] { };
     float_Data @[8] { };
     float_Data @[9] { };
     float_Data @[10] { };
     float_Data @[11] { };
     float_Data @[12] { };
     float_Data @[13] { };
     float_Data @[14] { };
     float_Data @[15] { };
     float_Data @[16] { };
     float_Data @[17] { };
    };

    DataOpList @.last_sort_spec.ops = [0] {
    };
   };
  };
  DataTable_Group @.gp[2] { 
  };
 };

 Program_TopGroup @.programs = [4] {
  Program @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserData_DocLink @[0] { };
   };

   ProgObjList @.objs = [0] {
   };

   ProgVar_List @.objs_vars = [0] {
   };

   ProgType_List @.types = [2] {
    DynEnumType @[0] { 
     DynEnumItem_List @.enums = [3] {
      DynEnumItem @[0] { };
      DynEnumItem @[1] { };
      DynEnumItem @[2] { };
     };
    };
    DynEnumType @[1] { 
     DynEnumItem_List @.enums = [2] {
      DynEnumItem @[0] { };
      DynEnumItem @[1] { };
     };
    };
   };

   ProgVar_List @.args = [0] {
   };

   ProgVar_List @.vars = [10] {
    ProgVar @[0] { };
    ProgVar @[1] { };
    ProgVar @[2] { };
    ProgVar @[3] { };
    ProgVar @[4] { };
    ProgVar @[5] { };
    ProgVar @[6] { };
    ProgVar @[7] { };
    ProgVar @[8] { };
    ProgVar @[9] { };
   };

   Function_List @.functions = [0] {
   };

   ProgEl_List @.init_code = [0] {
   };

   ProgEl_List @.prog_code = [8] {
    MethodCall @[0] { 
     ProgArg_List @.meth_args = [2] {
      ProgArg @[0] { };
      ProgArg @[1] { };
     };
    };
    MemberAssign @[1] { };
    MemberAssign @[2] { };
    MethodCall @[3] { 
     ProgArg_List @.meth_args = [2] {
      ProgArg @[0] { };
      ProgArg @[1] { };
     };
    };
    MethodCall @[4] { 
     ProgArg_List @.meth_args = [2] {
      ProgArg @[0] { };
      ProgArg @[1] { };
     };
    };
    MethodCall @[5] { 
     ProgArg_List @.meth_args = [2] {
      ProgArg @[0] { };
      ProgArg @[1] { };
     };
    };
    MethodCall @[6] { 
     ProgArg_List @.meth_args = [0] {
     };
    };
    ProgramCall @[7] { 
     ProgArg_List @.prog_args = [3] {
      ProgArg @[0] { };
      ProgArg @[1] { };
      ProgArg @[2] { };
     };
    };
   };
  };
  Program @[1] { 
   UserDataItem_List @*(.user_data_) {
    UserData_DocLink @[0] { };
   };

   ProgObjList @.objs = [0] {
   };

   ProgVar_List @.objs_vars = [0] {
   };

   ProgType_List @.types = [1] {
    DynEnumType @[0] { 
     DynEnumItem_List @.enums = [2] {
      DynEnumItem @[0] { };
      DynEnumItem @[1] { };
     };
    };
   };

   ProgVar_List @.args = [3] {
    ProgVar @[0] { };
    ProgVar @[1] { };
    ProgVar @[2] { };
   };

   ProgVar_List @.vars = [2] {
    ProgVar @[0] { };
    ProgVar @[1] { };
   };

   Function_List @.functions = [0] {
   };

   ProgEl_List @.init_code = [0] {
   };

   ProgEl_List @.prog_code = [4] {
    AssignExpr @[0] { };
    Switch @[1] { 
     ProgEl_List @.cases = [2] {
      CaseBlock @[0] { 
       ProgEl_List @.prog_code = [4] {
	MemberAssign @[0] { };
	MemberAssign @[1] { };
	MemberAssign @[2] { };
	MemberAssign @[3] { };
       };
      };
      CaseBlock @[1] { 
       ProgEl_List @.prog_code = [4] {
	MemberAssign @[0] { };
	MemberAssign @[1] { };
	MemberAssign @[2] { };
	MemberAssign @[3] { };
       };
      };
     };
    };
    MethodCall @[2] { 
     ProgArg_List @.meth_args = [1] {
      ProgArg @[0] { };
     };
    };
    MethodCall @[3] { 
     ProgArg_List @.meth_args = [0] {
     };
    };
   };
  };
  Program @[2] { 
   UserDataItem_List @*(.user_data_) {
    UserData_DocLink @[0] { };
   };

   ProgObjList @.objs = [0] {
   };

   ProgVar_List @.objs_vars = [0] {
   };

   ProgType_List @.types = [0] {
   };

   ProgVar_List @.args = [0] {
   };

   ProgVar_List @.vars = [4] {
    ProgVar @[0] { };
    ProgVar @[1] { };
    ProgVar @[2] { };
    ProgVar @[3] { };
   };

   Function_List @.functions = [0] {
   };

   ProgEl_List @.init_code = [0] {
   };

   ProgEl_List @.prog_code = [5] {
    LocalVars @[0] { 
     ProgVar_List @.local_vars = [0] {
     };
    };
    MethodCall @[1] { 
     ProgArg_List @.meth_args = [4] {
      ProgArg @[0] { };
      ProgArg @[1] { };
      ProgArg @[2] { };
      ProgArg @[3] { };
     };
    };
    MethodCall @[2] { 
     ProgArg_List @.meth_args = [1] {
      ProgArg @[0] { };
     };
    };
    MethodCall @[3] { 
     ProgArg_List @.meth_args = [1] {
      ProgArg @[0] { };
     };
    };
    MethodCall @[4] { 
     ProgArg_List @.meth_args = [4] {
      ProgArg @[0] { };
      ProgArg @[1] { };
      ProgArg @[2] { };
      ProgArg @[3] { };
     };
    };
   };
  };
  Program @[3] { 
   UserDataItem_List @*(.user_data_) {
    UserData_DocLink @[0] { };
   };

   ProgObjList @.objs = [0] {
   };

   ProgVar_List @.objs_vars = [0] {
   };

   ProgType_List @.types = [0] {
   };

   ProgVar_List @.args = [0] {
   };

   ProgVar_List @.vars = [3] {
    ProgVar @[0] { };
    ProgVar @[1] { };
    ProgVar @[2] { };
   };

   Function_List @.functions = [0] {
   };

   ProgEl_List @.init_code = [0] {
   };

   ProgEl_List @.prog_code = [3] {
    LocalVars @[0] { 
     ProgVar_List @.local_vars = [0] {
     };
    };
    MemberAssign @[1] { };
    MemberAssign @[2] { };
   };
  };
  Program_Group @.gp[0] = [11] { 
   Program @[0] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgVar_List @.objs_vars = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    ProgVar_List @.vars = [3] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [1] {
     NetCounterInit @[0] { };
    };

    ProgEl_List @.prog_code = [4] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [1] {
       ProgVar @[0] { };
      };
     };
     AssignExpr @[1] { };
     MemberAssign @[2] { };
     ForLoop @[3] { 
      ProgEl_List @.loop_code = [2] {
       ProgramCall @[0] { 
	ProgArg_List @.prog_args = [3] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	 ProgArg @[2] { };
	};
       };
       NetCounterIncr @[1] { };
      };
     };
    };
   };
   Program @[1] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [2] {
     RndSeed_List @[0] { 
      taList @.seeds = [25] {
       RndSeed @[0] { };
       RndSeed @[1] { };
       RndSeed @[2] { };
       RndSeed @[3] { };
       RndSeed @[4] { };
       RndSeed @[5] { };
       RndSeed @[6] { };
       RndSeed @[7] { };
       RndSeed @[8] { };
       RndSeed @[9] { };
       RndSeed @[10] { };
       RndSeed @[11] { };
       RndSeed @[12] { };
       RndSeed @[13] { };
       RndSeed @[14] { };
       RndSeed @[15] { };
       RndSeed @[16] { };
       RndSeed @[17] { };
       RndSeed @[18] { };
       RndSeed @[19] { };
       RndSeed @[20] { };
       RndSeed @[21] { };
       RndSeed @[22] { };
       RndSeed @[23] { };
       RndSeed @[24] { };
      };
     };
     RndSeed @[1] { };
    };

    ProgVar_List @.objs_vars = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    ProgType_List @.types = [2] {
     DynEnumType @[0] { 
      DynEnumItem_List @.enums = [3] {
       DynEnumItem @[0] { };
       DynEnumItem @[1] { };
       DynEnumItem @[2] { };
      };
     };
     DynEnumType @[1] { 
      DynEnumItem_List @.enums = [3] {
       DynEnumItem @[0] { };
       DynEnumItem @[1] { };
       DynEnumItem @[2] { };
      };
     };
    };

    ProgVar_List @.args = [3] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
    };

    ProgVar_List @.vars = [12] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
     ProgVar @[3] { };
     ProgVar @[4] { };
     ProgVar @[5] { };
     ProgVar @[6] { };
     ProgVar @[7] { };
     ProgVar @[8] { };
     ProgVar @[9] { };
     ProgVar @[10] { };
     ProgVar @[11] { };
    };

    Function_List @.functions = [1] {
     Function @[0] { 
      ProgVar_List @.args = [0] {
      };

      ProgEl_List @.fun_code = [2] {
       LocalVars @[0] { 
	ProgVar_List @.local_vars = [0] {
	};
       };
       Switch @[1] { 
	ProgEl_List @.cases = [3] {
	 CaseBlock @[0] { 
	  ProgEl_List @.prog_code = [1] {
	   MethodCall @[0] { 
	    ProgArg_List @.meth_args = [0] {
	    };
	   };
	  };
	 };
	 CaseBlock @[1] { 
	  ProgEl_List @.prog_code = [1] {
	   MethodCall @[0] { 
	    ProgArg_List @.meth_args = [0] {
	    };
	   };
	  };
	 };
	 CaseBlock @[2] { 
	  ProgEl_List @.prog_code = [1] {
	   MethodCall @[0] { 
	    ProgArg_List @.meth_args = [1] {
	     ProgArg @[0] { };
	    };
	   };
	  };
	 };
	};
       };
      };
     };
    };

    ProgEl_List @.init_code = [8] {
     AssignExpr @[0] { };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     AssignExpr @[2] { };
     AssignExpr @[3] { };
     FunctionCall @[4] { 
      ProgArg_List @.fun_args = [0] {
      };
     };
     WtInitPrompt @[5] { 
      ProgEl_List @.yes_code = [3] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
       MethodCall @[1] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
       PrintExpr @[2] { };
      };
     };
     AssignExpr @[6] { };
     MemberMethodCall @[7] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
    };

    ProgEl_List @.prog_code = [11] {
     Switch @[0] { 
      ProgEl_List @.cases = [3] {
       CaseBlock @[0] { 
	ProgEl_List @.prog_code = [1] {
	 AssignExpr @[0] { };
	};
       };
       CaseBlock @[1] { 
	ProgEl_List @.prog_code = [1] {
	 AssignExpr @[0] { };
	};
       };
       CaseBlock @[2] { 
	ProgEl_List @.prog_code = [1] {
	 AssignExpr @[0] { };
	};
       };
      };
     };
     AssignExpr @[1] { };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     AssignExpr @[3] { };
     MemberAssign @[4] { };
     FunctionCall @[5] { 
      ProgArg_List @.fun_args = [0] {
      };
     };
     If @[6] { 
      ProgEl_List @.true_code = [2] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
       PrintExpr @[1] { };
      };
     };
     AssignExpr @[7] { };
     WhileLoop @[8] { 
      ProgEl_List @.loop_code = [5] {
       ProgramCall @[0] { 
	ProgArg_List @.prog_args = [2] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	};
       };
       NetCounterIncr @[1] { };
       If @[2] { 
	ProgEl_List @.true_code = [2] {
	 VarIncr @[0] { };
	 IfBreak @[1] { };
	};
       };
       Else @[3] { 
	ProgEl_List @.true_code = [1] {
	 AssignExpr @[0] { };
	};
       };
       If @[4] { 
	ProgEl_List @.true_code = [1] {
	 If @[0] { 
	  ProgEl_List @.true_code = [1] {
	   ProgramCall @[0] { 
	    ProgArg_List @.prog_args = [1] {
	     ProgArg @[0] { };
	    };
	   };
	  };
	 };
	};
       };
      };
     };
     If @[9] { 
      ProgEl_List @.true_code = [1] {
       ProgramCall @[0] { 
	ProgArg_List @.prog_args = [1] {
	 ProgArg @[0] { };
	};
       };
      };
     };
     MethodCall @[10] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
    };
   };
   Program @[2] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgVar_List @.objs_vars = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    ProgVar_List @.vars = [6] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
     ProgVar @[3] { };
     ProgVar @[4] { };
     ProgVar @[5] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [2] {
     NetCounterInit @[0] { };
     AssignExpr @[1] { };
    };

    ProgEl_List @.prog_code = [12] {
     NetCounterInit @[0] { };
     AssignExpr @[1] { };
     MemberAssign @[2] { };
     MemberAssign @[3] { };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[5] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[6] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     NetDataLoop @[7] { 
      ProgEl_List @.loop_code = [2] {
       ProgramCall @[0] { 
	ProgArg_List @.prog_args = [2] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	};
       };
       If @[1] { 
	ProgEl_List @.true_code = [1] {
	 StopStepPoint @[0] { };
	};
       };
      };
     };
     If @[8] { 
      ProgEl_List @.true_code = [1] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
      };
     };
     MethodCall @[9] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[10] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     ProgramCall @[11] { 
      ProgArg_List @.prog_args = [1] {
       ProgArg @[0] { };
      };
     };
    };
   };
   Program @[3] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgVar_List @.objs_vars = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    ProgVar_List @.vars = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [10] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [1] {
       ProgVar @[0] { };
      };
     };
     If @[1] { 
      ProgEl_List @.true_code = [1] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     Comment @[3] { };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     ProgramCall @[5] { 
      ProgArg_List @.prog_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     ForLoop @[6] { 
      ProgEl_List @.loop_code = [1] {
       ProgramCall @[0] { 
	ProgArg_List @.prog_args = [2] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	};
       };
      };
     };
     MethodCall @[7] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     ProgramCall @[8] { 
      ProgArg_List @.prog_args = [1] {
       ProgArg @[0] { };
      };
     };
     NetUpdateView @[9] { };
    };
   };
   Program @[4] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgVar_List @.objs_vars = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    ProgVar_List @.vars = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [1] {
     NetCounterInit @[0] { };
    };

    ProgEl_List @.prog_code = [10] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [2] {
       ProgVar @[0] { };
       ProgVar @[1] { };
      };
     };
     Comment @[1] { };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     ProgramCall @[3] { 
      ProgArg_List @.prog_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[5] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     ForLoop @[6] { 
      ProgEl_List @.loop_code = [3] {
       ProgramCall @[0] { 
	ProgArg_List @.prog_args = [1] {
	 ProgArg @[0] { };
	};
       };
       ProgramCall @[1] { 
	ProgArg_List @.prog_args = [1] {
	 ProgArg @[0] { };
	};
       };
       AssignExpr @[2] { };
      };
     };
     MethodCall @[7] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[8] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     NetUpdateView @[9] { };
    };
   };
   Program @[5] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgVar_List @.objs_vars = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [1] {
     ProgVar @[0] { };
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [2] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     NetUpdateView @[1] { };
    };
   };
   Program @[6] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [1] {
     LayerWriter @[0] { 
      LayerDataEl_List @.layer_data = [3] {
       LayerWriterEl @[0] { };
       LayerWriterEl @[1] { };
       LayerWriterEl @[2] { };
      };
     };
    };

    ProgVar_List @.objs_vars = [1] {
     ProgVar @[0] { };
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    ProgVar_List @.vars = [0] {
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [3] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };

    ProgEl_List @.prog_code = [2] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
    };
   };
   Program @[7] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [1] {
     NetMonitor @[0] { 
      NetMonItem_List @.items = [4] {
       NetMonItem @[0] { };
       NetMonItem @[1] { };
       NetMonItem @[2] { };
       NetMonItem @[3] { };
      };
     };
    };

    ProgVar_List @.objs_vars = [1] {
     ProgVar @[0] { };
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [1] {
     ProgVar @[0] { };
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [3] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };

    ProgEl_List @.prog_code = [6] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [2] {
       ProgVar @[0] { };
       ProgVar @[1] { };
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     ForLoop @[3] { 
      ProgEl_List @.loop_code = [2] {
       ForLoop @[0] { 
	ProgEl_List @.loop_code = [2] {
	 MemberMethodCall @[0] { 
	  ProgArg_List @.meth_args = [3] {
	   ProgArg @[0] { };
	   ProgArg @[1] { };
	   ProgArg @[2] { };
	  };
	 };
	 MemberAssign @[1] { };
	};
       };
       BlankLineEl @[1] { };
      };
     };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[5] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
   Program @[8] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [1] {
     NetMonitor @[0] { 
      NetMonItem_List @.items = [8] {
       NetMonItem @[0] { };
       NetMonItem @[1] { };
       NetMonItem @[2] { };
       NetMonItem @[3] { };
       NetMonItem @[4] { };
       NetMonItem @[5] { };
       NetMonItem @[6] { };
       NetMonItem @[7] { };
      };
     };
    };

    ProgVar_List @.objs_vars = [1] {
     ProgVar @[0] { };
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [1] {
     ProgVar @[0] { };
    };

    ProgVar_List @.vars = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [4] {
     AssignExpr @[0] { };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };

    ProgEl_List @.prog_code = [6] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     AssignExpr @[2] { };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [4] {
       ProgArg @[0] { };
       ProgArg @[1] { };
       ProgArg @[2] { };
       ProgArg @[3] { };
      };
     };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [4] {
       ProgArg @[0] { };
       ProgArg @[1] { };
       ProgArg @[2] { };
       ProgArg @[3] { };
      };
     };
     MethodCall @[5] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
    };
   };
   Program @[9] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgVar_List @.objs_vars = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [1] {
     ProgVar @[0] { };
    };

    ProgVar_List @.vars = [6] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
     ProgVar @[3] { };
     ProgVar @[4] { };
     ProgVar @[5] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [6] {
     If @[0] { 
      ProgEl_List @.true_code = [1] {
       ReturnExpr @[0] { };
      };
     };
     MiscCall @[1] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MiscCall @[2] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     AssignExpr @[3] { };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [4] {
       ProgArg @[0] { };
       ProgArg @[1] { };
       ProgArg @[2] { };
       ProgArg @[3] { };
      };
     };
     MethodCall @[5] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
   Program @[10] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [1] {
     NetMonitor @[0] { 
      NetMonItem_List @.items = [18] {
       NetMonItem @[0] { };
       NetMonItem @[1] { };
       NetMonItem @[2] { };
       NetMonItem @[3] { };
       NetMonItem @[4] { };
       NetMonItem @[5] { };
       NetMonItem @[6] { };
       NetMonItem @[7] { };
       NetMonItem @[8] { };
       NetMonItem @[9] { };
       NetMonItem @[10] { };
       NetMonItem @[11] { };
       NetMonItem @[12] { };
       NetMonItem @[13] { };
       NetMonItem @[14] { };
       NetMonItem @[15] { };
       NetMonItem @[16] { };
       NetMonItem @[17] { };
      };
     };
    };

    ProgVar_List @.objs_vars = [1] {
     ProgVar @[0] { };
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [1] {
     ProgVar @[0] { };
    };

    ProgVar_List @.vars = [3] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [3] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };

    ProgEl_List @.prog_code = [9] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     DataVarProg @[3] { };
     AssignExpr @[4] { };
     DataVarProg @[5] { };
     MethodCall @[6] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[7] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[8] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
  };
  Program_Group @.gp[1] = [7] { 
   Program @[0] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgVar_List @.objs_vars = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [1] {
     ProgVar @[0] { };
    };

    ProgVar_List @.vars = [6] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
     ProgVar @[3] { };
     ProgVar @[4] { };
     ProgVar @[5] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [2] {
     NetCounterInit @[0] { };
     AssignExpr @[1] { };
    };

    ProgEl_List @.prog_code = [13] {
     NetCounterInit @[0] { };
     MemberAssign @[1] { };
     MemberAssign @[2] { };
     AssignExpr @[3] { };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[5] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     NetDataLoop @[6] { 
      ProgEl_List @.loop_code = [1] {
       ProgramCall @[0] { 
	ProgArg_List @.prog_args = [2] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	};
       };
      };
     };
     If @[7] { 
      ProgEl_List @.true_code = [1] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
      };
     };
     MethodCall @[8] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[9] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     ProgramCall @[10] { 
      ProgArg_List @.prog_args = [1] {
       ProgArg @[0] { };
      };
     };
     MemberAssign @[11] { };
     MemberAssign @[12] { };
    };
   };
   Program @[1] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgVar_List @.objs_vars = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [10] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [1] {
       ProgVar @[0] { };
      };
     };
     If @[1] { 
      ProgEl_List @.true_code = [1] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     Comment @[3] { };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     ProgramCall @[5] { 
      ProgArg_List @.prog_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     ForLoop @[6] { 
      ProgEl_List @.loop_code = [1] {
       ProgramCall @[0] { 
	ProgArg_List @.prog_args = [2] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	};
       };
      };
     };
     MethodCall @[7] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     ProgramCall @[8] { 
      ProgArg_List @.prog_args = [1] {
       ProgArg @[0] { };
      };
     };
     NetUpdateView @[9] { };
    };
   };
   Program @[2] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgVar_List @.objs_vars = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    ProgVar_List @.vars = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [1] {
     NetCounterInit @[0] { };
    };

    ProgEl_List @.prog_code = [10] {
     LocalVars @[0] { 
      ProgVar_List @.local_vars = [2] {
       ProgVar @[0] { };
       ProgVar @[1] { };
      };
     };
     Comment @[1] { };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     ProgramCall @[3] { 
      ProgArg_List @.prog_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[5] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     ForLoop @[6] { 
      ProgEl_List @.loop_code = [2] {
       ProgramCall @[0] { 
	ProgArg_List @.prog_args = [1] {
	 ProgArg @[0] { };
	};
       };
       AssignExpr @[1] { };
      };
     };
     MethodCall @[7] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[8] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     NetUpdateView @[9] { };
    };
   };
   Program @[3] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [0] {
    };

    ProgVar_List @.objs_vars = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [1] {
     ProgVar @[0] { };
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [2] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     NetUpdateView @[1] { };
    };
   };
   Program @[4] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [1] {
     LayerWriter @[0] { 
      LayerDataEl_List @.layer_data = [3] {
       LayerWriterEl @[0] { };
       LayerWriterEl @[1] { };
       LayerWriterEl @[2] { };
      };
     };
    };

    ProgVar_List @.objs_vars = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [3] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };

    ProgEl_List @.prog_code = [2] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
    };
   };
   Program @[5] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [1] {
     NetMonitor @[0] { 
      NetMonItem_List @.items = [3] {
       NetMonItem @[0] { };
       NetMonItem @[1] { };
       NetMonItem @[2] { };
      };
     };
    };

    ProgVar_List @.objs_vars = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [1] {
     ProgVar @[0] { };
    };

    ProgVar_List @.vars = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [3] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };

    ProgEl_List @.prog_code = [4] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
   Program @[6] { 
    UserDataItem_List @*(.user_data_) {
     UserData_DocLink @[0] { };
    };

    ProgObjList @.objs = [1] {
     NetMonitor @[0] { 
      NetMonItem_List @.items = [8] {
       NetMonItem @[0] { };
       NetMonItem @[1] { };
       NetMonItem @[2] { };
       NetMonItem @[3] { };
       NetMonItem @[4] { };
       NetMonItem @[5] { };
       NetMonItem @[6] { };
       NetMonItem @[7] { };
      };
     };
    };

    ProgVar_List @.objs_vars = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [1] {
     ProgVar @[0] { };
    };

    ProgVar_List @.vars = [3] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [4] {
     AssignExpr @[0] { };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };

    ProgEl_List @.prog_code = [6] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     AssignExpr @[2] { };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [4] {
       ProgArg @[0] { };
       ProgArg @[1] { };
       ProgArg @[2] { };
       ProgArg @[3] { };
      };
     };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [4] {
       ProgArg @[0] { };
       ProgArg @[1] { };
       ProgArg @[2] { };
       ProgArg @[3] { };
      };
     };
     MethodCall @[5] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
    };
   };
  };
 };

 taViewer_List @.viewers = [1] {
  MainWindowViewer @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
    UserDataItem @[1] { };
    UserDataItem @[2] { };
    UserDataItem @[3] { };
    UserDataItem @[4] { };
    UserDataItem @[5] { };
   };

   ToolBar_List @.toolbars = [1] {
    ToolBar @[0] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
   };

   FrameViewer_List @.frames = [3] {
    BrowseViewerTaBase @[0] { };
    PanelViewer @[1] { };
    T3PanelViewer @[2] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };

     T3Panel_List @.panels = [6] {
      T3Panel @[0] { 
       T3DataView_List @.root_view.children = [2] {
	NetView @[0] { 
	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };

	 ScaleRange_List @.scale_ranges = [28] {
	  ScaleRange @[0] { };
	  ScaleRange @[1] { };
	  ScaleRange @[2] { };
	  ScaleRange @[3] { };
	  ScaleRange @[4] { };
	  ScaleRange @[5] { };
	  ScaleRange @[6] { };
	  ScaleRange @[7] { };
	  ScaleRange @[8] { };
	  ScaleRange @[9] { };
	  ScaleRange @[10] { };
	  ScaleRange @[11] { };
	  ScaleRange @[12] { };
	  ScaleRange @[13] { };
	  ScaleRange @[14] { };
	  ScaleRange @[15] { };
	  ScaleRange @[16] { };
	  ScaleRange @[17] { };
	  ScaleRange @[18] { };
	  ScaleRange @[19] { };
	  ScaleRange @[20] { };
	  ScaleRange @[21] { };
	  ScaleRange @[22] { };
	  ScaleRange @[23] { };
	  ScaleRange @[24] { };
	  ScaleRange @[25] { };
	  ScaleRange @[26] { };
	  ScaleRange @[27] { };
	 };
	};
	GraphTableView @[1] { 
	 T3DataView_List @.children = [8] {
	  GraphColView @[0] { };
	  GraphColView @[1] { };
	  GraphColView @[2] { };
	  GraphColView @[3] { };
	  GraphColView @[4] { };
	  GraphColView @[5] { };
	  GraphColView @[6] { };
	  GraphColView @[7] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };

	 GraphPlotView_List @.plots = [16] {
	  GraphPlotView @[0] { };
	  GraphPlotView @[1] { };
	  GraphPlotView @[2] { };
	  GraphPlotView @[3] { };
	  GraphPlotView @[4] { };
	  GraphPlotView @[5] { };
	  GraphPlotView @[6] { };
	  GraphPlotView @[7] { };
	  GraphPlotView @[8] { };
	  GraphPlotView @[9] { };
	  GraphPlotView @[10] { };
	  GraphPlotView @[11] { };
	  GraphPlotView @[12] { };
	  GraphPlotView @[13] { };
	  GraphPlotView @[14] { };
	  GraphPlotView @[15] { };
	 };

	 GraphPlotView_List @.errbars = [16] {
	  GraphPlotView @[0] { };
	  GraphPlotView @[1] { };
	  GraphPlotView @[2] { };
	  GraphPlotView @[3] { };
	  GraphPlotView @[4] { };
	  GraphPlotView @[5] { };
	  GraphPlotView @[6] { };
	  GraphPlotView @[7] { };
	  GraphPlotView @[8] { };
	  GraphPlotView @[9] { };
	  GraphPlotView @[10] { };
	  GraphPlotView @[11] { };
	  GraphPlotView @[12] { };
	  GraphPlotView @[13] { };
	  GraphPlotView @[14] { };
	  GraphPlotView @[15] { };
	 };
	};
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @[0] { };
	T3SavedView @[1] { };
	T3SavedView @[2] { };
	T3SavedView @[3] { };
	T3SavedView @[4] { };
	T3SavedView @[5] { };
	T3SavedView @[6] { };
	T3SavedView @[7] { };
	T3SavedView @[8] { };
	T3SavedView @[9] { };
       };
      };
      T3Panel @[1] { 
       T3DataView_List @.root_view.children = [1] {
	GridTableView @[0] { 
	 T3DataView_List @.children = [3] {
	  GridColView @[0] { };
	  GridColView @[1] { };
	  GridColView @[2] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };
	};
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @[0] { };
	T3SavedView @[1] { };
	T3SavedView @[2] { };
	T3SavedView @[3] { };
	T3SavedView @[4] { };
	T3SavedView @[5] { };
	T3SavedView @[6] { };
	T3SavedView @[7] { };
	T3SavedView @[8] { };
	T3SavedView @[9] { };
       };
      };
      T3Panel @[2] { 
       T3DataView_List @.root_view.children = [1] {
	GridTableView @[0] { 
	 T3DataView_List @.children = [3] {
	  GridColView @[0] { };
	  GridColView @[1] { };
	  GridColView @[2] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };
	};
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @[0] { };
	T3SavedView @[1] { };
	T3SavedView @[2] { };
	T3SavedView @[3] { };
	T3SavedView @[4] { };
	T3SavedView @[5] { };
	T3SavedView @[6] { };
	T3SavedView @[7] { };
	T3SavedView @[8] { };
	T3SavedView @[9] { };
       };
      };
      T3Panel @[3] { 
       T3DataView_List @.root_view.children = [1] {
	GridTableView @[0] { 
	 T3DataView_List @.children = [3] {
	  GridColView @[0] { };
	  GridColView @[1] { };
	  GridColView @[2] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };
	};
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @[0] { };
	T3SavedView @[1] { };
	T3SavedView @[2] { };
	T3SavedView @[3] { };
	T3SavedView @[4] { };
	T3SavedView @[5] { };
	T3SavedView @[6] { };
	T3SavedView @[7] { };
	T3SavedView @[8] { };
	T3SavedView @[9] { };
       };
      };
      T3Panel @[4] { 
       T3DataView_List @.root_view.children = [1] {
	GridTableView @[0] { 
	 T3DataView_List @.children = [5] {
	  GridColView @[0] { };
	  GridColView @[1] { };
	  GridColView @[2] { };
	  GridColView @[3] { };
	  GridColView @[4] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };
	};
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @[0] { };
	T3SavedView @[1] { };
	T3SavedView @[2] { };
	T3SavedView @[3] { };
	T3SavedView @[4] { };
	T3SavedView @[5] { };
	T3SavedView @[6] { };
	T3SavedView @[7] { };
	T3SavedView @[8] { };
	T3SavedView @[9] { };
       };
      };
      T3Panel @[5] { 
       T3DataView_List @.root_view.children = [1] {
	GraphTableView @[0] { 
	 T3DataView_List @.children = [8] {
	  GraphColView @[0] { };
	  GraphColView @[1] { };
	  GraphColView @[2] { };
	  GraphColView @[3] { };
	  GraphColView @[4] { };
	  GraphColView @[5] { };
	  GraphColView @[6] { };
	  GraphColView @[7] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };

	 GraphPlotView_List @.plots = [16] {
	  GraphPlotView @[0] { };
	  GraphPlotView @[1] { };
	  GraphPlotView @[2] { };
	  GraphPlotView @[3] { };
	  GraphPlotView @[4] { };
	  GraphPlotView @[5] { };
	  GraphPlotView @[6] { };
	  GraphPlotView @[7] { };
	  GraphPlotView @[8] { };
	  GraphPlotView @[9] { };
	  GraphPlotView @[10] { };
	  GraphPlotView @[11] { };
	  GraphPlotView @[12] { };
	  GraphPlotView @[13] { };
	  GraphPlotView @[14] { };
	  GraphPlotView @[15] { };
	 };

	 GraphPlotView_List @.errbars = [16] {
	  GraphPlotView @[0] { };
	  GraphPlotView @[1] { };
	  GraphPlotView @[2] { };
	  GraphPlotView @[3] { };
	  GraphPlotView @[4] { };
	  GraphPlotView @[5] { };
	  GraphPlotView @[6] { };
	  GraphPlotView @[7] { };
	  GraphPlotView @[8] { };
	  GraphPlotView @[9] { };
	  GraphPlotView @[10] { };
	  GraphPlotView @[11] { };
	  GraphPlotView @[12] { };
	  GraphPlotView @[13] { };
	  GraphPlotView @[14] { };
	  GraphPlotView @[15] { };
	 };
	};
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @[0] { };
	T3SavedView @[1] { };
	T3SavedView @[2] { };
	T3SavedView @[3] { };
	T3SavedView @[4] { };
	T3SavedView @[5] { };
	T3SavedView @[6] { };
	T3SavedView @[7] { };
	T3SavedView @[8] { };
	T3SavedView @[9] { };
       };
      };
     };
    };
   };

   DockViewer_List @.docks = [1] {
    ToolBoxDockViewer @[0] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
      UserDataItem @[2] { };
      UserDataItem @[3] { };
      UserDataItem @[4] { };
      UserDataItem @[5] { };
     };
    };
   };
  };
 };

 Network_Group @.networks = [1] {
  LeabraNetwork @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
    UserDataItem @[1] { };
    UserDataItem @[2] { };
    UserDataItem @[3] { };
    UserDataItem @[4] { };
    UserDataItem @[5] { };
    UserDataItem @[6] { };
    UserDataItem @[7] { };
    UserDataItem @[8] { };
    UserDataItem @[9] { };
    UserDataItem @[10] { };
    UserDataItem @[11] { };
    UserDataItem @[12] { };
    UserDataItem @[13] { };
    UserDataItem @[14] { };
    UserDataItem @[15] { };
    UserDataItem @[16] { };
    UserDataItem @[17] { };
    UserDataItem @[18] { };
    UserDataItem @[19] { };
    UserDataItem @[20] { };
    UserDataItem @[21] { };
    UserDataItem @[22] { };
    UserDataItem @[23] { };
    UserDataItem @[24] { };
    UserDataItem @[25] { };
    UserDataItem @[26] { };
   };

   BaseSpec_Group @.specs = [4] {
    LeabraUnitSpec @[0] { 
     BaseSpec_Group @.children = [0] {
     };

     Schedule @.noise_sched = [0] {
     };
    };
    LeabraConSpec @[1] { 
     BaseSpec_Group @.children = [1] {
      LeabraBiasSpec @[0] { 
       BaseSpec_Group @.children = [0] {
       };

       Schedule @.lrate_sched = [0] {
       };
      };
     };

     Schedule @.lrate_sched = [0] {
     };
    };
    LeabraLayerSpec @[2] { 
     BaseSpec_Group @.children = [1] {
      LeabraLayerSpec @[0] { 
       BaseSpec_Group @.children = [0] {
       };
      };
     };
    };
    FullPrjnSpec @[3] { 
     BaseSpec_Group @.children = [0] {
     };
    };
   };

   ParamSeq_Group @.param_seqs = [0] {
   };

   Layer_Group @.layers = [2] {
    LeabraLayer @[0] { 
     Projection_Group @.projections = [0] {
     };

     Unit_Group @.units = [1] {
     };
    };
    LeabraLayer @[1] { 
     Projection_Group @.projections = [1] {
      LeabraPrjn @[0] { };
     };

     Unit_Group @.units = [1] {
     };
    };
   };

   Weights_List @.weights = [0] {
   };
  };
 };
};
LeabraProject .projects[0] {
 name="neuron_pair";
 desc="Network learns to associate input and output patterns -- Hebbian learning can learn easy mappings, but not more difficult ones -- Error-driven learning is necessary for those.";
 tags="Learning, Pattern Association, Hebbian, Error-Driven";
 version {
  major=8;
  minor=0;
  step=2;
 };
 author="Randall C. O'Reilly";
 email="emergent-users@grey.colorado.edu";
 license {
  license=GPLv2;
  owner_name="Regents of the University of Colorado";
  org="CCNLab at the University of Colorado Boulder";
  year="2016";
  custom=;
 };
 pub_cite="OReillyMunakataFrankEtAl12";
 wiki {wiki="CCN": page_name="CCNBook/Sims/Learning/Pattern_Associator": };
 docs {
  name="docs";
  el_typ=taDoc;
  el_def=0;
  taDoc @[0] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {name="user_pinned": value=1: val_type_fixed=0: };
   };
   name="ProjectDocs";
   desc=;
   web_doc=1;
   wiki="CCN";
   url="CCNBook/Sims/Learning/Pattern_Associator";
   full_url="https://grey.colorado.edu/CompCogNeuro/index.php/CCNBook/Sims/Learning/Pattern_Associator";
   text_size=1;
   text="<html>
<head></head>
<body>

</body>
</html>
";
   html_text="<!DOCTYPE html><html lang=\"en\" dir=\"ltr\" class=\"client-js\"><head>
<meta charset=\"UTF-8\"><title>CCNBook/Sims/Learning/Pattern Associator - Computational Cognitive Neuroscience Wiki</title>
<meta name=\"generator\" content=\"MediaWiki 1.22.5\">
<link rel=\"shortcut icon\" href=\"/emergent/favicon.ico\">
<link rel=\"search\" type=\"application/opensearchdescription+xml\" href=\"/CompCogNeuro/opensearch_desc.php\" title=\"Computational Cognitive Neuroscience Wiki (en)\">
<link rel=\"EditURI\" type=\"application/rsd+xml\" href=\"https://grey.colorado.edu/CompCogNeuro/api.php?action=rsd\">
<link rel=\"alternate\" type=\"application/atom+xml\" title=\"Computational Cognitive Neuroscience Wiki Atom feed\" href=\"/CompCogNeuro/index.php?title=Special:RecentChanges&amp;feed=atom\">
<link rel=\"stylesheet\" href=\"https://grey.colorado.edu/CompCogNeuro/load.php?debug=false&amp;lang=en&amp;modules=ext.rtlcite%7Cmediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;skin=vector&amp;*\">
<link rel=\"stylesheet\" href=\"/CompCogNeuro/extensions/HeaderTabs/skins-jquery/ext.headertabs.jquery-large.css\"><meta name=\"ResourceLoaderDynamicStyles\" content=\"\">
<link rel=\"stylesheet\" href=\"https://grey.colorado.edu/CompCogNeuro/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*\">
<style>a:lang(ar),a:lang(ckb),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}.mw-editsection{display:none}
/* cache key: compcogneuro:resourceloader:filter:minify-css:7:e574a44ae23fd78ac104b2dd7100973a */</style>

<script src=\"https://grey.colorado.edu/CompCogNeuro/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*\"></script><script src=\"/CompCogNeuro/load.php?debug=false&amp;lang=en&amp;modules=jquery%2Cmediawiki&amp;only=scripts&amp;skin=vector&amp;version=20140401T185136Z\"></script>
<script>if(window.mw){
mw.config.set({\"wgCanonicalNamespace\":\"\",\"wgCanonicalSpecialPageName\":false,\"wgNamespaceNumber\":0,\"wgPageName\":\"CCNBook/Sims/Learning/Pattern_Associator\",\"wgTitle\":\"CCNBook/Sims/Learning/Pattern Associator\",\"wgCurRevisionId\":4548,\"wgRevisionId\":4548,\"wgArticleId\":655,\"wgIsArticle\":true,\"wgIsRedirect\":false,\"wgAction\":\"view\",\"wgUserName\":null,\"wgUserGroups\":[\"*\"],\"wgCategories\":[],\"wgBreakFrames\":false,\"wgPageContentLanguage\":\"en\",\"wgPageContentModel\":\"wikitext\",\"wgSeparatorTransformTable\":[\"\",\"\"],\"wgDigitTransformTable\":[\"\",\"\"],\"wgDefaultDateFormat\":\"dmy\",\"wgMonthNames\":[\"\",\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"wgMonthNamesShort\":[\"\",\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"wgRelevantPageName\":\"CCNBook/Sims/Learning/Pattern_Associator\",\"wgIsProbablyEditable\":false,\"wgRestrictionEdit\":[],\"wgRestrictionMove\":[],\"htTabIndexes\":[],\"wgSVGEditEditor\":\"http://svg-edit.googlecode.com/svn/trunk/editor/svg-editor.html\",\"wgWikiEditorEnabledModules\":{\"toolbar\":true,\"dialogs\":true,\"hidesig\":true,\"templateEditor\":false,\"templates\":false,\"preview\":true,\"previewDialog\":false,\"publish\":false,\"toc\":false}});
}</script><script>if(window.mw){
mw.loader.implement(\"user.options\",function(){mw.user.options.set({\"ccmeonemails\":0,\"cols\":80,\"date\":\"default\",\"diffonly\":0,\"disablemail\":0,\"disablesuggest\":0,\"editfont\":\"default\",\"editondblclick\":0,\"editsection\":false,\"editsectiononrightclick\":0,\"enotifminoredits\":0,\"enotifrevealaddr\":0,\"enotifusertalkpages\":1,\"enotifwatchlistpages\":0,\"extendwatchlist\":0,\"fancysig\":0,\"forceeditsummary\":0,\"gender\":\"unknown\",\"hideminor\":0,\"hidepatrolled\":0,\"imagesize\":2,\"justify\":0,\"math\":0,\"minordefault\":0,\"newpageshidepatrolled\":0,\"nocache\":0,\"noconvertlink\":0,\"norollbackdiff\":0,\"numberheadings\":0,\"previewonfirst\":0,\"previewontop\":1,\"rcdays\":7,\"rclimit\":50,\"rememberpassword\":0,\"rows\":25,\"searchlimit\":20,\"showhiddencats\":0,\"shownumberswatching\":1,\"showtoc\":1,\"showtoolbar\":1,\"skin\":\"vector\",\"stubthreshold\":0,\"thumbsize\":2,\"underline\":2,\"uselivepreview\":0,\"usenewrc\":0,\"vector-simplesearch\":1,\"watchcreations\":0,\"watchdefault\":0,\"watchdeletion\":0,\"watchlistdays\":3,\"watchlisthideanons\":0,\"watchlisthidebots\"
:0,\"watchlisthideliu\":0,\"watchlisthideminor\":0,\"watchlisthideown\":0,\"watchlisthidepatrolled\":0,\"watchmoves\":0,\"wllimit\":250,\"useeditwarning\":1,\"prefershttps\":1,\"vector-collapsiblenav\":1,\"vector-collapsibletabs\":1,\"vector-editwarning\":1,\"vector-expandablesearch\":1,\"vector-footercleanup\":1,\"usebetatoolbar\":1,\"usebetatoolbar-cgd\":1,\"wikieditor-preview\":1,\"upwiz_deflicense\":\"default\",\"upwiz_def3rdparty\":\"default\",\"upwiz_deflicensetype\":\"default\",\"language\":\"en\",\"variant-gan\":\"gan\",\"variant-iu\":\"iu\",\"variant-kk\":\"kk\",\"variant-ku\":\"ku\",\"variant-shi\":\"shi\",\"variant-sr\":\"sr\",\"variant-tg\":\"tg\",\"variant-uz\":\"uz\",\"variant-zh\":\"zh\",\"searchNs0\":true,\"searchNs1\":false,\"searchNs2\":false,\"searchNs3\":false,\"searchNs4\":false,\"searchNs5\":false,\"searchNs6\":false,\"searchNs7\":false,\"searchNs8\":false,\"searchNs9\":false,\"searchNs10\":false,\"searchNs11\":false,\"searchNs12\":false,\"searchNs13\":false,\"searchNs14\":false,\"searchNs15\":false,\"searchNs100\":false,\"extensionDrafts_enable\":true,\"variant\":\"en\"});},{},{});mw.
loader.implement(\"user.tokens\",function(){mw.user.tokens.set({\"editToken\":\"+\\\\\",\"patrolToken\":false,\"watchToken\":false});},{},{});
/* cache key: compcogneuro:resourceloader:filter:minify-js:7:373a684c2f44f4aba59ed1a79b242767 */
}</script>
<script>if(window.mw){
mw.loader.load([\"mediawiki.page.startup\",\"mediawiki.legacy.wikibits\",\"mediawiki.legacy.ajax\",\"skins.vector.js\"]);
}</script><script src=\"/CompCogNeuro/load.php?debug=false&amp;lang=en&amp;modules=jquery.client%2Ccookie%2CdelayedBind%2CmwExtension%7Cmediawiki.legacy.ajax%2Cwikibits%7Cmediawiki.notify%2Cutil%7Cmediawiki.page.startup%7Cskins.vector.js&amp;skin=vector&amp;version=20140816T222957Z&amp;*\"></script>
<!--[if lt IE 7]><style type=\"text/css\">body{behavior:url(\"/CompCogNeuro/skins/vector/csshover.min.htc\")}</style><![endif]--><script async=\"\" src=\"/CompCogNeuro/load.php?debug=false&amp;lang=en&amp;modules=ext.Drafts%2Ccite%2Cheadertabs%7Cjquery.autoEllipsis%2CcheckboxShiftClick%2Chidpi%2ChighlightText%2CmakeCollapsible%2Cmw-jump%2Cplaceholder%2Csuggestions%2CtabIndex%7Cmediawiki.action.view.postEdit%7Cmediawiki.api%2Ccldr%2Chidpi%2CjqueryMsg%2Clanguage%2CsearchSuggest%2Cuser%7Cmediawiki.language.data%2Cinit%7Cmediawiki.libs.pluralruleparser%7Cmediawiki.page.ready%7Cskins.vector.collapsibleNav&amp;skin=vector&amp;version=20140816T222958Z&amp;*\"></script><script async=\"\" src=\"/CompCogNeuro/load.php?debug=false&amp;lang=en&amp;modules=jquery.ui.core%2Ctabs%2Cwidget&amp;skin=vector&amp;version=20140816T222246Z&amp;*\"></script></head>
<body class=\"mediawiki ltr sitedir-ltr ns-0 ns-subject page-CCNBook_Sims_Learning_Pattern_Associator skin-vector action-view vector-animateLayout\">
		<div id=\"mw-page-base\" class=\"noprint\"></div>
		<div id=\"mw-head-base\" class=\"noprint\"></div>
		<div id=\"content\" class=\"mw-body\" role=\"main\">
			<a id=\"top\"></a>
			<div id=\"mw-js-message\" style=\"display:none;\"></div>
						<h1 id=\"firstHeading\" class=\"firstHeading\" lang=\"en\"><span dir=\"auto\">CCNBook/Sims/Learning/Pattern Associator</span></h1>
			<div id=\"bodyContent\">
								<div id=\"siteSub\">From Computational Cognitive Neuroscience Wiki</div>
								<div id=\"contentSub\"></div>
												<div id=\"jump-to-nav\" class=\"mw-jump\">
					Jump to:					<a href=\"#mw-navigation\">navigation</a>, 					<a href=\"#p-search\">search</a>
				</div>
				<div id=\"mw-content-text\" lang=\"en\" dir=\"ltr\" class=\"mw-content-ltr\"><div id=\"toc\" class=\"toc\"><div id=\"toctitle\"><h2>Contents</h2><span class=\"toctoggle\">&nbsp;[<a href=\"#\" class=\"internal\" id=\"togglelink\">hide</a>]&nbsp;</span></div>
<ul>
<li class=\"toclevel-1 tocsection-1\"><a href=\"#Pattern_Associator\"><span class=\"tocnumber\">1</span> <span class=\"toctext\">Pattern Associator</span></a></li>
<li class=\"toclevel-1 tocsection-2\"><a href=\"#Project_Documentation\"><span class=\"tocnumber\">2</span> <span class=\"toctext\">Project Documentation</span></a>
<ul>
<li class=\"toclevel-2 tocsection-3\"><a href=\"#The_Hard_Task\"><span class=\"tocnumber\">2.1</span> <span class=\"toctext\">The Hard Task</span></a></li>
<li class=\"toclevel-2 tocsection-4\"><a href=\"#Exploration_of_Error-Driven_Task_Learning\"><span class=\"tocnumber\">2.2</span> <span class=\"toctext\">Exploration of Error-Driven Task Learning</span></a></li>
</ul>
</li>
</ul>
</div>

<h1><span class=\"mw-headline\" id=\"Pattern_Associator\">Pattern Associator</span></h1>
<ul>
<li> The project file: <a href=\"/mediawiki/sites/CompCogNeuro/images/e/eb/pat_assoc.proj\" class=\"internal\" title=\"pat assoc.proj\">pat_assoc.proj</a> (click and Save As to download, then open in <a href=\"/CompCogNeuro/index.php/Emergent\" title=\"Emergent\" class=\"mw-redirect\">Emergent</a>)
</li>
</ul>
<p>Back to <a href=\"/CompCogNeuro/index.php/CCNBook/Sims/All\" title=\"CCNBook/Sims/All\">CCNBook/Sims/All</a> or <a href=\"/CompCogNeuro/index.php/CCNBook/Learning\" title=\"CCNBook/Learning\">Learning Chapter</a>.
</p>
<h1><span class=\"mw-headline\" id=\"Project_Documentation\">Project Documentation</span></h1>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#FFE0E0\"> <b>?</b> It is recommended that you <a href=\"/CompCogNeuro/index.php?title=.docs.ProjectDocs.EditDialog()&amp;action=edit&amp;redlink=1\" class=\"new\" title=\".docs.ProjectDocs.EditDialog() (page does not exist)\"><span style=\"color:#000000;background-color:#C0C0C0;font-weight:bold; border:1px solid black; padding:0 3px 0 3px\">click here to undock</span></a> this document from the main project window. Use the Window menu to find this window if you lose it, and you can always return to this document by browsing to this document from the <span style=\"background:#FFFFD0\"><tt><b>docs</b></tt></span> section in the left browser panel of the project's main window. <br>
</td></tr>
</tbody></table>
<p>This simulation illustrates how error-driven and hebbian learning can operate within a simple task-driven learning context, with no hidden layers.  The situation is reduced to the simplest case, where a set of 4 input units project to 2 output units.  The \"task\" is specified in terms of the relationships between patterns of activation over the input units, and the corresponding desired or <b>target</b> values of the output units.  This type of network is often called a <b>pattern associator</b> because the objective is to associate patterns of activity on the input with those on the output.
</p><p>You should see the network in the <span style=\"background:#FFFFD0\"><tt><b>PatAssocNet</b></tt></span> tab in the far right 3d view frame. Note that there are 2 output units receiving inputs from 4 input units through a set of feedforward weights.
</p>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#FFE0E0\"> <b>?</b> Click the <a href=\"/CompCogNeuro/index.php?title=.T3Tab.EasyEnv&amp;action=edit&amp;redlink=1\" class=\"new\" title=\".T3Tab.EasyEnv (page does not exist)\"><span style=\"color:#000000;background-color:#C0C0C0;font-weight:bold; border:1px solid black; padding:0 3px 0 3px\">EasyEnv</span></a> tab at the top of 3D view panel (far right) to view the events in the environment.  <br>
</td></tr>
</tbody></table>
<p>As you can see, the input-output relationships to be learned in this \"task\" are simply that the leftmost two input units should make the left output unit active, while the rightmost units should make the right output unit active.  This can be thought of as categorizing the first two inputs as \"left\" with the left output unit, and the next two as \"right\" with the right output unit.
</p><p>This is a relatively easy task to learn because the left output unit just has to develop strong weights to the leftmost input units and ignore the ones to the right, while the right output unit does the opposite.  Note that we are using FFFB inhibition, which tends to result in one active output unit (though not strictly).
</p><p>The network is trained on this task by simply clamping both the input and output units to their corresponding values from the events in the environment, and performing pure BCM learning.
</p>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#FFE0E0\"> <b>?</b> First, press the <a href=\"/CompCogNeuro/index.php?title=.T3Tab.PatAssocNet&amp;action=edit&amp;redlink=1\" class=\"new\" title=\".T3Tab.PatAssocNet (page does not exist)\"><span style=\"color:#000000;background-color:#C0C0C0;font-weight:bold; border:1px solid black; padding:0 3px 0 3px\">PatAssocNet</span></a> tab to reactivate it, then press the master <a href=\"/CompCogNeuro/index.php?title=.PanelTab.ControlPanel&amp;action=edit&amp;redlink=1\" class=\"new\" title=\".PanelTab.ControlPanel (page does not exist)\"><span style=\"color:#000000;background-color:#C0C0C0;font-weight:bold; border:1px solid black; padding:0 3px 0 3px\">ControlPanel</span></a> tab in the middle panel. Now press the <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Init</tt></span> button there (bottom), then <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Step:Trial</tt></span> 4 times while you watch the network. <i>NOTE: For this exploration, you should always answer \"Yes\" to \"Initialize Network Weights?\" after <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Init</tt></span>.</i> <br>
</td></tr>
</tbody></table>
<p>You should see all 4 events from the environment presented in a random order.  
</p>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#FFE0E0\"> <b>?</b> Now press <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Step:TrlTst</tt></span> (Testing Trials) 4 times. <br>
</td></tr>
</tbody></table>
<p>You will see the activations in the output units are different this time. This is because it was the testing phase, which is run after every epoch of training.  During this testing phase, all 4 events are presented to the network, except this time the output units are not clamped to the correct answer, but are instead updated solely according to their current weights from the input units (which are clamped as before).  Thus, the testing phase records the current <i>actual</i> performance of the network on this task, when it is not being \"coached\" (that is why it's a test).  This is equivalent to the minus phase activations during training.
</p>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#FFE0E0\"> <b>?</b> Now click on the <a href=\"/CompCogNeuro/index.php?title=.T3Tab.TrialOutputGrid&amp;action=edit&amp;redlink=1\" class=\"new\" title=\".T3Tab.TrialOutputGrid (page does not exist)\"><span style=\"color:#000000;background-color:#C0C0C0;font-weight:bold; border:1px solid black; padding:0 3px 0 3px\">TrialOutputGrid</span></a> tab in the far right 3D view panel. <br>
</td></tr>
</tbody></table>
<p>The results of the test run you just ran are displayed. Each row represents one of the four events, with the input pattern and the actual output activations shown on the right. The <span style=\"background:#FFFFD0\"><tt><b>sse</b></tt></span> column reports the <b>summed squared error</b> (SSE), which is simply the summed difference between the actual output activation during testing (<i>o_k</i>) and the <i>target</i> value (<i>t_k</i>) that was clamped during training: 
</p>
<ul>
<li> <img class=\"tex\" alt=\" SSE = \\sum_k (t_k - o_k)^2 \" src=\"/mediawiki/sites/CompCogNeuro/images/math/3/3/2/33293e9d03332a6aaa2e1c034627a36d.png\">
</li>
</ul>
<p>where the sum is over the 2 output units.  We are actually computing the <i>thresholded</i> SSE, where absolute differences of less than 0.5 are treated as zero, so the unit just has to get the activation on the correct side of 0.5 to get zero error.  We thus treat the units as representing underlying binary quantities (i.e., whether the pattern that the unit detects is present or not), with the graded activation value expressing something like the likelihood of the underlying binary hypothesis being true.  All of our tasks specify binary input/output patterns.
</p><p>With only a single training epoch, the output unit is likely making some errors.  
</p>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#FFE0E0\"> <b>?</b> Click on the <a href=\"/CompCogNeuro/index.php?title=.T3Tab.TrialOutputGrid&amp;action=edit&amp;redlink=1\" class=\"new\" title=\".T3Tab.TrialOutputGrid (page does not exist)\"><span style=\"color:#000000;background-color:#C0C0C0;font-weight:bold; border:1px solid black; padding:0 3px 0 3px\">TrialOutputGrid</span></a> tab in the far right panel if its not already active and then the master <a href=\"/CompCogNeuro/index.php?title=.PanelTab.ControlPanel&amp;action=edit&amp;redlink=1\" class=\"new\" title=\".PanelTab.ControlPanel (page does not exist)\"><span style=\"color:#000000;background-color:#C0C0C0;font-weight:bold; border:1px solid black; padding:0 3px 0 3px\">ControlPanel</span></a> tab in the middle panel.  Press the <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Init</tt></span> and <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Run</tt></span> buttons while you watch the grid in the right frame. <br>
</td></tr>
</tbody></table>
<p>You will see the grid view update after each epoch of training, showing the pattern of outputs and the individual sse errors.  
</p>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#FFE0E0\"> <b>?</b> Next, click on the <a href=\"/CompCogNeuro/index.php?title=.T3Tab.EpochOutputGraph&amp;action=edit&amp;redlink=1\" class=\"new\" title=\".T3Tab.EpochOutputGraph (page does not exist)\"><span style=\"color:#000000;background-color:#C0C0C0;font-weight:bold; border:1px solid black; padding:0 3px 0 3px\">EpochOutputGraph</span></a> tab in the far right panel. <br>
</td></tr>
</tbody></table>
<p>Now you will see a summary plot across epochs of the sum of the thresholded SSE measure across all the events in the epoch.  This shows what is often referred to as the <b>learning curve</b> for the network, and it should have decreased steadily down to zero, indicating that the network has learned the task.  Training will stop automatically after the network has exhibited 5 correct epochs in a row (just to make sure it has really learned the problem), or it stops after 30 epochs if it fails to learn.
</p><p>Let's see what the network has learned.
</p>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#FFE0E0\"> <b>?</b> Click the <a href=\"/CompCogNeuro/index.php?title=.T3Tab.PatAssocNet&amp;action=edit&amp;redlink=1\" class=\"new\" title=\".T3Tab.PatAssocNet (page does not exist)\"><span style=\"color:#000000;background-color:#C0C0C0;font-weight:bold; border:1px solid black; padding:0 3px 0 3px\">PatAssocNet</span></a> tab in the (far right) panel to display the network.  Press the <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Step: TrlTst</tt></span> button in the master <a href=\"/CompCogNeuro/index.php?title=.PanelTab.ControlPanel&amp;action=edit&amp;redlink=1\" class=\"new\" title=\".PanelTab.ControlPanel (page does not exist)\"><span style=\"color:#000000;background-color:#C0C0C0;font-weight:bold; border:1px solid black; padding:0 3px 0 3px\">ControlPanel</span></a> 4 times. <br>
</td></tr>
</tbody></table>
<p>This will step through each of the training patterns -- you should see that it is producing the correct output units for each input pattern.  This also updated the <a href=\"/CompCogNeuro/index.php?title=.T3Tab.TrialOutputGrid&amp;action=edit&amp;redlink=1\" class=\"new\" title=\".T3Tab.TrialOutputGrid (page does not exist)\"><span style=\"color:#000000;background-color:#C0C0C0;font-weight:bold; border:1px solid black; padding:0 3px 0 3px\">TrialOutputGrid</span></a>, which you can click on it to display the entire behavior of the network across all four trials, all at once. You should see that the network has learned this easy task, turning on the left output for the first two patterns, and the right one for the next two.  Now, let's take a look at the weights for the output unit to see exactly how this happened.
</p>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#FFE0E0\"> <b>?</b> Click on the <a href=\"/CompCogNeuro/index.php?title=.T3Tab.PatAssocNet&amp;action=edit&amp;redlink=1\" class=\"new\" title=\".T3Tab.PatAssocNet (page does not exist)\"><span style=\"color:#000000;background-color:#C0C0C0;font-weight:bold; border:1px solid black; padding:0 3px 0 3px\">PatAssocNet</span></a> tab in the right frame and then on the <span style=\"background:#FFFFD0\"><tt><b>r.wt</b></tt></span> button along the top left margin. Now select the left output unit in the network (it should be in the \"red arrow\" select mode). <br>
</td></tr>
</tbody></table>
<hr>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#90FF90;font-size:small\"><b>Question 4.3:</b> Describe the pattern of weights in qualitative terms for each of the two output units (e.g., left output has strong weights from the&nbsp;?? input units, and weaker weights from the&nbsp;?? input units).<br>
</td></tr>
</tbody></table>
<hr>
<hr>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#90FF90;font-size:small\"><b>Question 4.4:</b> Why would a Hebbian-style learning mechanism, which increases weights for units that are active together at the same time, produce the pattern of weights you just observed?  This should be simple qualitative answer, referring to the specific patterns of activity in the input and output of the EasyEnv patterns.<br>
</td></tr>
</tbody></table>
<hr>
<h2><span class=\"mw-headline\" id=\"The_Hard_Task\">The Hard Task</span></h2>
<p>Now, let's try a more difficult task.  
</p>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#FFE0E0\"> <b>?</b> Set <span style=\"background:#FFFFD0\"><tt><b>env_type</b></tt></span> on the master <a href=\"/CompCogNeuro/index.php?title=.PanelTab.ControlPanel&amp;action=edit&amp;redlink=1\" class=\"new\" title=\".PanelTab.ControlPanel (page does not exist)\"><span style=\"color:#000000;background-color:#C0C0C0;font-weight:bold; border:1px solid black; padding:0 3px 0 3px\">ControlPanel</span></a> tab to <span style=\"background:#FFFFD0\"><tt><b>HARD</b></tt></span>, and <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Apply</tt></span>.  Click the <a href=\"/CompCogNeuro/index.php?title=.T3Tab.HardEnv&amp;action=edit&amp;redlink=1\" class=\"new\" title=\".T3Tab.HardEnv (page does not exist)\"><span style=\"color:#000000;background-color:#C0C0C0;font-weight:bold; border:1px solid black; padding:0 3px 0 3px\">HardEnv</span></a> tab at the top of the far right panel to view the events in the HARD environment. <br>
</td></tr>
</tbody></table>
<p>In this harder environment, there is overlap among the input patterns for cases where the left output should be on, and where it should be off (and the right output on). This overlap makes the task hard because the unit has to somehow figure out what the most distinguishing or <i>task relevant</i> input units are, and set its weights accordingly.
</p><p>This task reveals a problem with Hebbian learning: it is only driven by the correlation between the output and input units, so it cannot learn to be sensitive to which inputs are more task relevant than others (unless this happens to be the same as the input-output correlations, as in the easy task).  This hard task has a complicated pattern of overlap among the different input patterns.  For the two cases where the left output should be on, the middle two input units are very strongly correlated with the output activity, while the outside two inputs are half-correlated.  The two cases where the left output should be off (and the right one on) overlap considerably with those where it should be on, with the last event containing both of the highly correlated inputs.  Thus, if the network just pays attention to correlations, it will tend to respond incorrectly to this last case.
</p><p>Let's see what happens when we run the network on this task.
</p>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#FFE0E0\"> <b>?</b> After making sure you are still viewing the <span style=\"background:#FFFFD0\"><tt><b>r.wt</b></tt></span> receiving weights of the left output unit in the <a href=\"/CompCogNeuro/index.php?title=.T3Tab.PatAssocNet&amp;action=edit&amp;redlink=1\" class=\"new\" title=\".T3Tab.PatAssocNet (page does not exist)\"><span style=\"color:#000000;background-color:#C0C0C0;font-weight:bold; border:1px solid black; padding:0 3px 0 3px\">PatAssocNet</span></a> view, press the <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Init</tt></span> (\"Yes\" to \"Initialize Network Weights?\") and then <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Run</tt></span> buttons.  After training (or even during), click back and forth between the left and right output units.  Try multiple Runs to see what generally tends to happen. <br>
</td></tr>
</tbody></table>
<p>You should see that the weights into the left output unit increase, often with the two middle ones being more strongly increasing due to the higher correlation.  The right output tends to have a strong weight from the 2nd input unit, and then somewhat weaker weights to the right two inputs, again reflecting the input correlations.  Note that in contrast to a purely Hebbian learning mechanism, the BCM learning does not strictly follow the input correlations, as it depends significantly on the output unit activations over time as well, which determine the floating threshold for weight increase vs. decrease.
</p>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#FFE0E0\"> <b>?</b> Return to viewing the <span style=\"background:#FFFFD0\"><tt><b>act</b></tt></span> variable in <a href=\"/CompCogNeuro/index.php?title=.T3Tab.PatAssocNet&amp;action=edit&amp;redlink=1\" class=\"new\" title=\".T3Tab.PatAssocNet (page does not exist)\"><span style=\"color:#000000;background-color:#C0C0C0;font-weight:bold; border:1px solid black; padding:0 3px 0 3px\">PatAssocNet</span></a> and then do <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Step: TrlTst</tt></span> 4 times. <br>
</td></tr>
</tbody></table>
<p>You should see that the network is not getting all the right answers (you can also look at the <a href=\"/CompCogNeuro/index.php?title=.T3Tab.TrialOutputGrid&amp;action=edit&amp;redlink=1\" class=\"new\" title=\".T3Tab.TrialOutputGrid (page does not exist)\"><span style=\"color:#000000;background-color:#C0C0C0;font-weight:bold; border:1px solid black; padding:0 3px 0 3px\">TrialOutputGrid</span></a> to see all events at once.)   This is also evident in the training sse shown in the network view.
</p>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#FFE0E0\"> <b>?</b> Do several more <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Run</tt></span>s on this HARD task. You can try increasing the <span style=\"background:#FFFFD0\"><tt><b>max_epochs</b></tt></span> parameter to 50, or even 100, in the master <a href=\"/CompCogNeuro/index.php?title=.PanelTab.ControlPanel&amp;action=edit&amp;redlink=1\" class=\"new\" title=\".PanelTab.ControlPanel (page does not exist)\"><span style=\"color:#000000;background-color:#C0C0C0;font-weight:bold; border:1px solid black; padding:0 3px 0 3px\">ControlPanel</span></a> if you wish. <br>
</td></tr>
</tbody></table>
<hr>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#90FF90;font-size:small\"><b>Question 4.5:</b> Does the network ever solve the task? Run the network several times, setting the max epochs parameter to 30 (the default value), 50 and 100. Report the final <span style=\"background:#FFFFD0\"><tt><b>sse</b></tt></span> at the end of training for each run.<br>
</td></tr>
</tbody></table>
<hr>
<p>Hebbian learning does not seem to be able to solve tasks where the correlations do not provide the appropriate weight values.  In the broad space of tasks that people learn (e.g., naming objects, reading words, etc) it seems unlikely that there will always be a coincidence between correlational structure and the task solution. Thus, we must conclude that Hebbian learning by itself is of limited use for task learning.  In contrast, we will see in the next section that error-driven learning, which specifically adapts the weights precisely to solve input/output mappings, can handle this HARD task without much difficulty.
</p>
<h2><span class=\"mw-headline\" id=\"Exploration_of_Error-Driven_Task_Learning\">Exploration of Error-Driven Task Learning</span></h2>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#FFE0E0\"> <b>?</b> First, reset the parameters to their default values using the <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Defaults</tt></span> button in the master <a href=\"/CompCogNeuro/index.php?title=.PanelTab.ControlPanel&amp;action=edit&amp;redlink=1\" class=\"new\" title=\".PanelTab.ControlPanel (page does not exist)\"><span style=\"color:#000000;background-color:#C0C0C0;font-weight:bold; border:1px solid black; padding:0 3px 0 3px\">Control Panel</span></a> -- this also resets the <span style=\"background:#FFFFD0\"><tt><b>env_type</b></tt></span> back to EASY.  <br>
</td></tr>
</tbody></table>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#FFE0E0\"> <b>?</b> Select <span style=\"background:#FFFFD0\"><tt><b>ERR_DRIVEN</b></tt></span> instead of <span style=\"background:#FFFFD0\"><tt><b>HEBB</b></tt></span> for the <span style=\"background:#FFFFD0\"><tt><b>learn_rule</b></tt></span> value in the ControlPanel, and click <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Apply</tt></span>, and then, while watching the <span style=\"background:#FFFFD0\"><tt><b>Learning Parameters</b></tt></span> fields, click <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>SetLearnRule</tt></span>.  <br>
</td></tr>
</tbody></table>
<p>This will switch weight updating from the purely Hebbian (BCM) form of XCAL learning, to the form that is purely error driven, in terms of the contrast between plus (short term average) and minus (medium term) phases of activation.  In this simple two-layer network, this form of learning is effectively equivalent to the Delta rule error-driven learning algorithm.  The effects of this switch can be seen in the <span style=\"background:#FFFFD0\"><tt><b>Learning Parameters</b></tt></span> group, which shows the learning rate for the weights (<span style=\"background:#FFFFD0\"><tt><b>lrate</b></tt></span>, always .02) and for the bias weights (<span style=\"background:#FFFFD0\"><tt><b>bias_lrate</b></tt></span>, which is 0 for Hebbian learning because it has no way of training the bias weights, and is equal to lrate for error driven), and the proportion of Hebbian (BCM) learning, which amounts to the proportion of the floating threshold that is determined by the long-term activation average (<span style=\"background:#FFFFD0\"><tt><b>xcal.thr_l_mix</b></tt></span>, 1 or 0). <b>IMPORTANT: Note that you have to hit the <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>SetLearnRule</tt></span> button to actually set these Learning Parameters values according to the learn_rule setting.</b>
</p><p>Before training the network, we will explore how the minus-plus activation phases work in the simulator.   
</p>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#FFE0E0\"> <b>?</b> Make sure that you are monitoring <i>activations</i> in the network by selecting the <span style=\"background:#FFFFD0\"><tt><b>act</b></tt></span> button along the top left margin. Also make sure the <span style=\"background:#FFFFD0\"><tt><b>Display</b></tt></span> checkbox in checked. Then, hit <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Step: Settle</tt></span> in the ControlPanel to present the first minus phase of training. <br>
</td></tr>
</tbody></table>
<p>You will see in the network the actual activation produced in response to the input pattern (also known as the <i>expectation</i> or <i>minus phase</i> activation).
</p>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#FFE0E0\"> <b>?</b> Hit <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Step: Settle</tt></span> again. <br>
</td></tr>
</tbody></table>
<p>You will see the target (also known as the <i>outcome</i> or <i>plus phase</i>) activation.  Learning occurs after this second, plus phase of activation.  You can recognize targets, like all external inputs, because their activations are exactly .95 or 0 -- note that we are clamping activations to .95 (not 1.0) because units cannot easily produce activations above .95 with typical net input values due to the saturating nonlinearity of the rate code activation function.  You can also switch to viewing the <span style=\"background:#FFFFD0\"><tt><b>targ</b></tt></span> value, which will show you the target inputs prior to the activation clamping.  In addition, the minus phase activation is always viewable as <span style=\"background:#FFFFD0\"><tt><b>act_m</b></tt></span> and the plus phase as <span style=\"background:#FFFFD0\"><tt><b>act_p</b></tt></span>.
</p>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#FFE0E0\"> <b>?</b> Go ahead and <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Run</tt></span> the network to complete the training on the EASY task. <br>
</td></tr>
</tbody></table>
<p>The network has no trouble learning this task, as you can see in the EpochOutputData graph shown in the network window (or by itself in the <a href=\"/CompCogNeuro/index.php?title=.T3Tab.EpochOutputGraph&amp;action=edit&amp;redlink=1\" class=\"new\" title=\".T3Tab.EpochOutputGraph (page does not exist)\"><span style=\"color:#000000;background-color:#C0C0C0;font-weight:bold; border:1px solid black; padding:0 3px 0 3px\">EpochOutputGraph</span></a> tab).  You can run multiple <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Run</tt></span>s to see how reliably and rapidly it learns this problem.  But the real challenge is whether it can learn the HARD task.
</p>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#FFE0E0\"> <b>?</b> Set <span style=\"background:#FFFFD0\"><tt><b>env_type</b></tt></span> to <span style=\"background:#FFFFD0\"><tt><b>HARD</b></tt></span> in the ControlPanel, press <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Init</tt></span> and <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Run</tt></span>.  Do multiple repeated <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Run</tt></span>s, to see how reliably and quickly it learns overall.  To make things run faster (if they are slow on your computer), you can switch to the <a href=\"/CompCogNeuro/index.php?title=.T3Tab.EpochOutputGraph&amp;action=edit&amp;redlink=1\" class=\"new\" title=\".T3Tab.EpochOutputGraph (page does not exist)\"><span style=\"color:#000000;background-color:#C0C0C0;font-weight:bold; border:1px solid black; padding:0 3px 0 3px\">EpochOutputGraph</span></a> tab in the far right frame to watch the learning curve. <br>
</td></tr>
</tbody></table>
<p>You should see that the network learns this task without much difficulty, because error-driven learning is directly a function of how well the network is actually doing, driving the weights specifically to solve the task, instead of doing something else like encoding correlational structure.  Now we'll push the limits of even this powerful error-driven learning.
</p>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#FFE0E0\"> <b>?</b> Set <span style=\"background:#FFFFD0\"><tt><b>env_type</b></tt></span> to <span style=\"background:#FFFFD0\"><tt><b>IMPOSSIBLE</b></tt></span>.  Then, click on the <a href=\"/CompCogNeuro/index.php?title=.T3Tab.ImpossibleEnv&amp;action=edit&amp;redlink=1\" class=\"new\" title=\".T3Tab.ImpossibleEnv (page does not exist)\"><span style=\"color:#000000;background-color:#C0C0C0;font-weight:bold; border:1px solid black; padding:0 3px 0 3px\">ImpossibleEnv</span></a> tab in the far right panel. <br>
</td></tr>
</tbody></table>
<p>Notice that each input unit in this environment is active equally often when the output is active as when it is inactive. That is, there is complete overlap among the patterns that activate the different output units. These kinds of problems are called <i>ambiguous cue</i> problems, or <i>nonlinear discrimination</i> problems (Sutherland &amp; Rudy, 1989; O'Reilly &amp; Rudy, 2000). This kind of problem might prove difficult, because every input unit will end up being equivocal about what the output should do.  Nevertheless, the input patterns are not all the same -- people could learn to solve this task fairly trivially by just paying attention to the overall patterns of activation.  Let's see if the network can do this.
</p>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#FFE0E0\"> <b>?</b> Press <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Init</tt></span> and <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Run</tt></span> on the ControlPanel.  Do it again, and again..  Increase the <span style=\"background:#FFFFD0\"><tt><b>max_epochs</b></tt></span> to 100 or even higher. <br>
</td></tr>
</tbody></table>
<hr>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#90FF90;font-size:small\"><b>Question 4.6:</b> Does the network ever learn to solve this \"Impossible\" problem?  Report the final sse values for your runs.<br>
</td></tr>
</tbody></table>
<hr>
<p>Because error-driven learning cannot learn what appears to be a relatively simple task, we conclude that something is missing. Unfortunately, that is not the conclusion that Minsky &amp; Papert (1969) reached in their highly influential book, <i>Perceptrons</i>.  Instead, they concluded that neural networks were hopelessly inadequate because they could not solve problems like the one we just explored.  This conclusion played a large role in the waning of the early interest in neural network models of the 1960s.  As we'll see, all that was required was the addition of a hidden layer interposed between the input and output layers (and the necessary math to make learning work with this hidden layer, which is really just an extension of the chain rule used to derive the delta rule for two layers in the first place).
</p>
<table cellpadding=\"10\">
<tbody><tr><td style=\"background-color:#FFE0E0\"> <b>?</b> You may now close the project (use the window manager close button on the project window or <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>File/Close Project</tt></span> menu item) and then open a new one, or just quit emergent entirely by doing <span style=\"background:#E0E0E0;border:1px solid black;\"><tt>Quit emergent</tt></span> menu option or clicking the close button on the root window. <br>
</td></tr>
</tbody></table>

<!-- 
NewPP limit report
CPU time usage: 0.324 seconds
Real time usage: 0.343 seconds
Preprocessor visited node count: 665/1000000
Preprocessor generated node count: 2431/1000000
Post?expand include size: 21724/2097152 bytes
Template argument size: 11374/2097152 bytes
Highest expansion depth: 5/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key compcogneuro:pcache:idhash:655-0!0!0!!en!*!* and timestamp 20140820081250
 -->
</div>								<div class=\"printfooter\">
				Retrieved from \"<a href=\"https://grey.colorado.edu/CompCogNeuro/index.php?title=CCNBook/Sims/Learning/Pattern_Associator&amp;oldid=4548\">https://grey.colorado.edu/CompCogNeuro/index.php?title=CCNBook/Sims/Learning/Pattern_Associator&amp;oldid=4548</a>\"				</div>
												<div id=\"catlinks\" class=\"catlinks catlinks-allhidden\"></div>												<div class=\"visualClear\"></div>
							</div>
		</div>
		<div id=\"mw-navigation\">
			<h2>Navigation menu</h2>
			<div id=\"mw-head\">
				<div id=\"p-personal\" role=\"navigation\" class=\"\" aria-labelledby=\"p-personal-label\">
	<h3 id=\"p-personal-label\">Personal tools</h3>
	<ul>
<li id=\"pt-createaccount\"><a href=\"/CompCogNeuro/index.php?title=Special:UserLogin&amp;returnto=CCNBook%2FSims%2FLearning%2FPattern+Associator&amp;type=signup\">Create account</a></li><li id=\"pt-login\"><a href=\"/CompCogNeuro/index.php?title=Special:UserLogin&amp;returnto=CCNBook%2FSims%2FLearning%2FPattern+Associator\" title=\"You are encouraged to log in; however, it is not mandatory [o]\" accesskey=\"o\">Log in</a></li>	</ul>
</div>
				<div id=\"left-navigation\">
					<div id=\"p-namespaces\" role=\"navigation\" class=\"vectorTabs\" aria-labelledby=\"p-namespaces-label\">
	<h3 id=\"p-namespaces-label\">Namespaces</h3>
	<ul>
					<li id=\"ca-nstab-main\" class=\"selected\"><span><a href=\"/CompCogNeuro/index.php/CCNBook/Sims/Learning/Pattern_Associator\" title=\"View the content page [c]\" accesskey=\"c\">Page</a></span></li>
					<li id=\"ca-talk\" class=\"new\"><span><a href=\"/CompCogNeuro/index.php?title=Talk:CCNBook/Sims/Learning/Pattern_Associator&amp;action=edit&amp;redlink=1\" title=\"Discussion about the content page [t]\" accesskey=\"t\">Discussion</a></span></li>
			</ul>
</div>
<div id=\"p-variants\" role=\"navigation\" class=\"vectorMenu emptyPortlet\" aria-labelledby=\"p-variants-label\">
	<h3 id=\"mw-vector-current-variant\">
		</h3>
	<h3 id=\"p-variants-label\" tabindex=\"0\"><span>Variants</span><a href=\"#\" tabindex=\"-1\"></a></h3>
	<div class=\"menu\">
		<ul>
					</ul>
	</div>
</div>
				</div>
				<div id=\"right-navigation\">
					<div id=\"p-views\" role=\"navigation\" class=\"vectorTabs\" aria-labelledby=\"p-views-label\">
	<h3 id=\"p-views-label\">Views</h3>
	<ul>
					<li id=\"ca-view\" class=\"selected\"><span><a href=\"/CompCogNeuro/index.php/CCNBook/Sims/Learning/Pattern_Associator\">Read</a></span></li>
					<li id=\"ca-viewsource\"><span><a href=\"/CompCogNeuro/index.php?title=CCNBook/Sims/Learning/Pattern_Associator&amp;action=edit\" title=\"This page is protected.
You can view its source [e]\" accesskey=\"e\">View source</a></span></li>
					<li id=\"ca-history\" class=\"collapsible\"><span><a href=\"/CompCogNeuro/index.php?title=CCNBook/Sims/Learning/Pattern_Associator&amp;action=history\" title=\"Past revisions of this page [h]\" accesskey=\"h\">View history</a></span></li>
			</ul>
</div>
<div id=\"p-cactions\" role=\"navigation\" class=\"vectorMenu emptyPortlet\" aria-labelledby=\"p-cactions-label\">
	<h3 id=\"p-cactions-label\" tabindex=\"0\"><span>Actions</span><a href=\"#\" tabindex=\"-1\"></a></h3>
	<div class=\"menu\">
		<ul>
					</ul>
	</div>
</div>
<div id=\"p-search\" role=\"search\">
	<h3><label for=\"searchInput\">Search</label></h3>
	<form action=\"/CompCogNeuro/index.php\" id=\"searchform\">
				<div id=\"simpleSearch\">
						<input name=\"search\" placeholder=\"Search\" title=\"Search Computational Cognitive Neuroscience Wiki [f]\" accesskey=\"f\" id=\"searchInput\">						<button type=\"submit\" name=\"button\" title=\"Search the pages for this text\" id=\"searchButton\"><img src=\"/CompCogNeuro/skins/vector/images/search-ltr.png?303\" alt=\"Search\" width=\"12\" height=\"13\"></button>								<input type=\"hidden\" name=\"title\" value=\"Special:Search\">
		</div>
	</form>
</div>
				</div>
			</div>
			<div id=\"mw-panel\">
					<div id=\"p-logo\" role=\"banner\"><a style=\"background-image: url(/mediawiki/sites//CompCogNeuro/logo.png);\" href=\"/CompCogNeuro/index.php/Main_Page\" title=\"Visit the main page\"></a></div>
				<div class=\"portal\" role=\"navigation\" id=\"p-navigation\" aria-labelledby=\"p-navigation-label\">
	<h3 id=\"p-navigation-label\">Navigation</h3>
	<div class=\"body\">
		<ul>
			<li id=\"n-mainpage-description\"><a href=\"/CompCogNeuro/index.php/Main_Page\" title=\"Visit the main page [z]\" accesskey=\"z\">Main page</a></li>
			<li id=\"n-CCN-Book\"><a href=\"/CompCogNeuro/index.php/CCNBook/Main\">CCN Book</a></li>
			<li id=\"n-recentchanges\"><a href=\"/CompCogNeuro/index.php/Special:RecentChanges\" title=\"A list of recent changes in the wiki [r]\" accesskey=\"r\">Recent changes</a></li>
			<li id=\"n-randompage\"><a href=\"/CompCogNeuro/index.php/Special:Random\" title=\"Load a random page [x]\" accesskey=\"x\">Random page</a></li>
			<li id=\"n-help\"><a href=\"https://www.mediawiki.org/wiki/Special:MyLanguage/Help:Contents\" rel=\"nofollow\" title=\"The place to find out\">Help</a></li>
		</ul>
	</div>
</div>
<div class=\"portal\" role=\"navigation\" id=\"p-tb\" aria-labelledby=\"p-tb-label\">
	<h3 id=\"p-tb-label\">Tools</h3>
	<div class=\"body\">
		<ul>
			<li id=\"t-whatlinkshere\"><a href=\"/CompCogNeuro/index.php/Special:WhatLinksHere/CCNBook/Sims/Learning/Pattern_Associator\" title=\"A list of all wiki pages that link here [j]\" accesskey=\"j\">What links here</a></li>
			<li id=\"t-recentchangeslinked\"><a href=\"/CompCogNeuro/index.php/Special:RecentChangesLinked/CCNBook/Sims/Learning/Pattern_Associator\" title=\"Recent changes in pages linked from this page [k]\" accesskey=\"k\">Related changes</a></li>
			<li id=\"t-specialpages\"><a href=\"/CompCogNeuro/index.php/Special:SpecialPages\" title=\"A list of all special pages [q]\" accesskey=\"q\">Special pages</a></li>
			<li id=\"t-permalink\"><a href=\"/CompCogNeuro/index.php?title=CCNBook/Sims/Learning/Pattern_Associator&amp;oldid=4548\" title=\"Permanent link to this revision of the page\">Permanent link</a></li>
			<li id=\"t-info\"><a href=\"/CompCogNeuro/index.php?title=CCNBook/Sims/Learning/Pattern_Associator&amp;action=info\">Page information</a></li>
		</ul>
	</div>
</div>
<div class=\"portal\" role=\"navigation\" id=\"p-coll-print_export\" aria-labelledby=\"p-coll-print_export-label\">
	<h3 id=\"p-coll-print_export-label\">Print/export</h3>
	<div class=\"body\">
		<ul>
			<li id=\"coll-create_a_book\"><a href=\"/CompCogNeuro/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=CCNBook%2FSims%2FLearning%2FPattern+Associator\">Create a book</a></li>
			<li id=\"coll-download-as-rl\"><a href=\"/CompCogNeuro/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=CCNBook%2FSims%2FLearning%2FPattern+Associator&amp;oldid=4548&amp;writer=rl\">Download as PDF</a></li>
			<li id=\"t-print\"><a href=\"/CompCogNeuro/index.php?title=CCNBook/Sims/Learning/Pattern_Associator&amp;printable=yes\" title=\"Printable version of this page [p]\" accesskey=\"p\">Printable version</a></li>
		</ul>
	</div>
</div>
			</div>
		</div>
		<div id=\"footer\" role=\"contentinfo\">
							<ul id=\"footer-info\">
											<li id=\"footer-info-lastmod\"> This page was last modified on 20 August 2014, at 02:07.</li>
											<li id=\"footer-info-viewcount\">This page has been accessed 3,960 times.</li>
									</ul>
							<ul id=\"footer-places\">
											<li id=\"footer-places-privacy\"><a href=\"/CompCogNeuro/index.php/Project:Privacy_policy\" title=\"Project:Privacy policy\">Privacy policy</a></li>
											<li id=\"footer-places-about\"><a href=\"/CompCogNeuro/index.php/Project:About\" title=\"Project:About\">About Computational Cognitive Neuroscience Wiki</a></li>
											<li id=\"footer-places-disclaimer\"><a href=\"/CompCogNeuro/index.php/Project:General_disclaimer\" title=\"Project:General disclaimer\">Disclaimers</a></li>
									</ul>
										<ul id=\"footer-icons\" class=\"noprint\">
					<li id=\"footer-copyrightico\">
						<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/3.0/\"><img alt=\"Creative Commons License\" style=\"border-width:0\" src=\"http://i.creativecommons.org/l/by-sa/3.0/88x31.png\"></a><br>This work is licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/3.0/\">Creative Commons Attribution-ShareAlike 3.0 Unported License</a>.
					</li>
					<li id=\"footer-poweredbyico\">
						<a href=\"//www.mediawiki.org/\"><img src=\"/CompCogNeuro/skins/common/images/poweredby_mediawiki_88x31.png\" alt=\"Powered by MediaWiki\" width=\"88\" height=\"31\"></a>
					</li>
				</ul>
						<div style=\"clear:both\"></div>
		</div>
		<script>/*<![CDATA[*/window.jQuery && jQuery.ready();/*]]>*/</script><script>if(window.mw){
mw.loader.state({\"site\":\"loading\",\"user\":\"ready\",\"user.groups\":\"ready\"});
}</script>
<script>if(window.mw){
mw.loader.load([\"mediawiki.action.view.postEdit\",\"mediawiki.user\",\"mediawiki.hidpi\",\"mediawiki.page.ready\",\"mediawiki.searchSuggest\",\"ext.headertabs\",\"ext.Drafts\",\"ext.cite\",\"skins.vector.collapsibleNav\"],null,true);
}</script>
<script src=\"https://grey.colorado.edu/CompCogNeuro/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*\"></script>
<!-- Served in 0.308 secs. -->
	

</body></html>";
  };
  taDoc @[1] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {name="user_pinned": value=0: val_type_fixed=0: };
   };
   name="ChangeLog";
   desc=;
   web_doc=0;
   wiki=;
   url="local";
   full_url="local";
   text_size=1;
   text="<html>
<head>ChangeLog</head>
<body>
<h1>ChangeLog</h1>
<ul>


<li>Tue Sep  6 03:19:25 2016 version: 8.0.2 user: oreilly file_name: <code>pat_assoc.proj</code> <br>
Project updated on wiki: CCN changes: updt to current



<li>Mon Aug 15 23:55:05 2016 version: 8.0.1 user: oreilly file_name: <code>pat_assoc.proj</code> <br>
Updated to 8.0 specs and programs.  No major changes -- way that Hebbian vs. Error-driven is enaged is different in 8.0 vs. 7.0 -- params are shown in Control Panel and Set Learn Rule function handles everything..


<li>Wed Jan 16 20:47:30 2008 thazy <code>pat_assoc.proj</code><br>

<li>Wed Jan 16 20:39:57 2008 thazy <code>pat_assoc.proj</code><br>

<li>Wed Jan 16 20:39:34 2008 thazy <code>pat_assoc.proj</code><br>
</ul>
</body>
</html>
";
   html_text="<html>
<head>ChangeLog</head>
<body>
<h1>ChangeLog</h1>
<ul>
<P>
<P>
<li>Tue Sep  6 03:19:25 2016 version: 8.0.2 user: oreilly file_name: <code>pat_assoc.proj</code> <br>
Project updated on wiki: CCN changes: updt to current
<P>
<P>
<P>
<li>Mon Aug 15 23:55:05 2016 version: 8.0.1 user: oreilly file_name: <code>pat_assoc.proj</code> <br>
Updated to 8.0 specs and programs.  No major changes -- way that Hebbian vs. Error-driven is enaged is different in 8.0 vs. 7.0 -- params are shown in Control Panel and Set Learn Rule function handles everything..
<P>
<P>
<li>Wed Jan 16 20:47:30 2008 thazy <code>pat_assoc.proj</code><br>
<P>
<li>Wed Jan 16 20:39:57 2008 thazy <code>pat_assoc.proj</code><br>
<P>
<li>Wed Jan 16 20:39:34 2008 thazy <code>pat_assoc.proj</code><br>
</ul>
</body>
</html>
";
  };
 };
 wizards {
  name="wizards";
  el_typ=LeabraWizard;
  el_def=0;
  LeabraWizard @[0] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItemBase;
    el_def=0;
    UserDataItem @[0] {name="NO_CLIP": value=1: val_type_fixed=0: };
   };
   name="LeabraWizard_1";
  };
 };
 ctrl_panels {
  name="ctrl_panels";
  el_typ=ControlPanel;
  el_def=0;
  master_and_clones=0;
  ControlPanel @[0] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {name="user_pinned": value=1: val_type_fixed=0: };
   };
   name="ControlPanel";
   cp_state=REGULAR;
   updt_while_running=0;
   desc="master control panel";
   mbrs {
    name="mbrs";
    el_typ=ControlPanelMember;
    el_def=0;
    ControlPanelMember @[0] {
     label="learn_rule";
     short_label=1;
     cust_label=0;
     desc=;
     cust_desc=0;
     base=.programs[1].args[2].dyn_enum_val$$;
     mbr=DynEnum::value;
     data {ctrl_type=CONTROL: is_numeric=0: is_single=1: state=EXPLORE: saved_value="": range="0:1:0.1": notes="": };
    };
    ControlPanelMember @[1] {
     label="env_type";
     short_label=1;
     cust_label=0;
     desc=;
     cust_desc=0;
     base=.programs.gp[0][1].vars[10].dyn_enum_val$$;
     mbr=DynEnum::value;
     data {ctrl_type=CONTROL: is_numeric=0: is_single=1: state=EXPLORE: saved_value="": range="": notes="": };
    };
    ControlPanelMember @[2] {
     label="max_epochs";
     short_label=0;
     cust_label=1;
     desc=;
     cust_desc=0;
     base=.programs.gp[0][1].vars[0]$$;
     mbr=ProgVar::int_val;
     data {ctrl_type=CONTROL: is_numeric=1: is_single=1: state=EXPLORE: saved_value="": range="0:1:0.1": notes="30 default, 100 for HARD env": };
    };
    ControlPanelMember @[3] {
     label="quarter_update_net_view";
     short_label=0;
     cust_label=1;
     desc="if true, will update network views at end of settling";
     cust_desc=0;
     base=.programs.gp[0][4].vars[1]$$;
     mbr=ProgVar::bool_val;
     data {ctrl_type=CONTROL: is_numeric=0: is_single=1: state=EXPLORE: saved_value="": range="": notes="turn off to speed up training -- network will not update": };
    };
    ControlPanelMember @[4] {
     label="cycle_update_net_view";
     short_label=0;
     cust_label=1;
     desc="determines whether network views will be updated on a cycle-by-cycle basis (slow, but often quite useful for seeing how processing is proceeding)";
     cust_desc=0;
     base=.programs.gp[0][5].vars[0]$$;
     mbr=ProgVar::bool_val;
     data {ctrl_type=CONTROL: is_numeric=0: is_single=1: state=EXPLORE: saved_value="": range="": notes="turn on to see cycle-level updates": };
    };
    ControlPanelMember @[5] {
     label="cycle_qtr";
     short_label=1;
     cust_label=0;
     desc="[Default: true]  one CycleRun runs for a full quarter number of actual cycles -- this greatly speeds up processing by reducing threading overhead, but prevents e.g., interactive viewing at the individual cycle level -- this is not saved -- have to re-engage it when needed, to prevent unintentionally slowing everything down";
     cust_desc=0;
     base=.networks[0].times$$;
     mbr=LeabraTimes::cycle_qtr;
     data {ctrl_type=CONTROL: is_numeric=0: is_single=1: state=EXPLORE: saved_value="": range="": notes="turn off to cycle at 1 msec, else quarter (faster)": };
    };
    ControlPanelMember @[6] {
     label="input_layer_lay_inhib";
     short_label=0;
     cust_label=0;
     desc=" how to compute layer-wide inhibition -- uses feedforward (FF) and feedback (FB) inhibition (FFFB) based on average netinput (FF) and activation (FB) -- net inhibition is MAX of all operative inhibition -- any inhibitory unit inhibition is just added on top of this computed inhibition";
     cust_desc=0;
     base=.networks[0].specs[2]$$;
     mbr=LeabraLayerSpec::lay_inhib;
     data {ctrl_type=CONTROL: is_numeric=0: is_single=0: state=EXPLORE: saved_value="": range="": notes="": };
    };
    ControlPanelMember_Group @.gp[0] {
     name="Learning_Parameters";
     el_typ=ControlPanelMember;
     el_def=0;
     ControlPanelMember @[0] {
      label="lrate";
      short_label=1;
      cust_label=0;
      desc="[Default: 0.04]  learning rate -- how fast the weights change per experience -- since version 7.8.5, a hidden factor of 2 has been removed, so this should be 2x what you used to use previously (e.g., default used to be .02, now is .04) -- this governs the rate of change for the fastest adapting weights -- see slow_wts for a more slowly adapting factor";
      cust_desc=0;
      base=.networks[0].specs[1]$$;
      mbr=LeabraConSpec::lrate;
      data {ctrl_type=CONTROL: is_numeric=1: is_single=1: state=EXPLORE: saved_value="": range="0:1:0.1": notes=".04 default": };
     };
     ControlPanelMember @[1] {
      label="bias_lrate";
      short_label=0;
      cust_label=1;
      desc="[Default: 0.04]  learning rate -- how fast the weights change per experience -- since version 7.8.5, a hidden factor of 2 has been removed, so this should be 2x what you used to use previously (e.g., default used to be .02, now is .04) -- this governs the rate of change for the fastest adapting weights -- see slow_wts for a more slowly adapting factor";
      cust_desc=0;
      base=.networks[0].specs[1].children[0]$$;
      mbr=LeabraConSpec::lrate;
      data {ctrl_type=CONTROL: is_numeric=1: is_single=1: state=EXPLORE: saved_value="": range="0:1:0.1": notes="0 for HEBB, .04 for ERR": };
     };
     ControlPanelMember @[2] {
      label="xcal";
      short_label=1;
      cust_label=0;
      desc=" XCAL (eXtended Contrastive Attractor Learning) learning parameters";
      cust_desc=0;
      base=$.networks[0].specs[1]$;
      mbr=LeabraConSpec::xcal;
      data {ctrl_type=CONTROL: is_numeric=0: is_single=0: state=EXPLORE: saved_value="": range="0:1:0.1": notes="HEBB: m_lrn=0, l_lrn=1, ERR: m_lrn=1, l_lrn=0": };
     };
    };
   };
   mths {
    name="mths";
    el_typ=ControlPanelMethod;
    el_def=0;
    group_type=GT_BUTTONS;
    ControlPanelMethod @[0] {
     label="Init";
     short_label=0;
     cust_label=0;
     desc=" run init_code, global variables retain current values unless reset in the init_code";
     cust_desc=0;
     base=.programs.gp[0][1]$$;
     mth=Program::Init;
    };
    ControlPanelMethod @[1] {
     label="Run";
     short_label=0;
     cust_label=0;
     desc=" run the program -- if not yet Init, will run Init first";
     cust_desc=0;
     base=$.programs.gp[0][1]$;
     mth=Program::Run_Gui;
    };
    ControlPanelMethod @[2] {
     label="Step";
     short_label=0;
     cust_label=0;
     desc=" step the program at the level of the given program -- if NULL then step_prog default value will be used";
     cust_desc=0;
     base=$.programs.gp[0][1]$;
     mth=Program::Step_Gui;
    };
    ControlPanelMethod @[3] {
     label="Stop";
     short_label=0;
     cust_label=0;
     desc=" stop the current program at its next natural stopping point (i.e., cleanly stopping when appropriate chunks of computation have completed)";
     cust_desc=0;
     base=$.programs.gp[0][1]$;
     mth=Program::Stop;
    };
    ControlPanelMethod @[4] {
     label="Test_Init";
     short_label=0;
     cust_label=1;
     desc=" run init_code, global variables retain current values unless reset in the init_code";
     cust_desc=0;
     base=.programs.gp[1][0]$$;
     mth=Program::Init;
    };
    ControlPanelMethod @[5] {
     label="Test_Step";
     short_label=0;
     cust_label=1;
     desc=" step the program at the level of the given program -- if NULL then step_prog default value will be used";
     cust_desc=0;
     base=$.programs.gp[1][0]$;
     mth=Program::Step_Gui;
    };
    ControlPanelMethod @[6] {
     label="SetLearnRule";
     short_label=0;
     cust_label=1;
     desc=" run the program -- if not yet Init, will run Init first";
     cust_desc=0;
     base=.programs[1]$$;
     mth=Program::Run_Gui;
    };
    ControlPanelMethod @[7] {
     label="Defaults";
     short_label=0;
     cust_label=1;
     desc=" run the program -- if not yet Init, will run Init first";
     cust_desc=0;
     base=.programs[0]$$;
     mth=Program::Run_Gui;
    };
   };
  };
  ClusterRun @[1] {
   name="ClusterRun";
   cp_state=REGULAR;
   updt_while_running=0;
   desc=;
   mbrs {
    name="mbrs";
    el_typ=ControlPanelMember;
    el_def=0;
   };
   mths {
    name="mths";
    el_typ=ControlPanelMethod;
    el_def=0;
    group_type=GT_BUTTONS;
   };
   search_algos {
    name="search_algos";
    el_typ=ParamSearchAlgo;
    el_def=0;
   };
   use_search_algo=0;
   cur_search_algo=NULL;
   set_proj_name=0;
   proj_name=;
   auto_updt_interval=10;
   auto_updt_timeout=30;
   cluster=;
   clusters=;
   users=;
   last_submit_time=;
   notes=;
   label=;
   extra_files=;
   svn_repo=;
   repo_url=;
   queue=;
   run_time=;
   exe_cmd="emergent";
   ram_gb=0;
   n_threads=1;
   use_cuda=0;
   use_mpi=0;
   mpi_nodes=10;
   mpi_per_node=1;
   parallel_batch=0;
   pb_batches=10;
   pb_n_batches_per=1;
   nowin_x=0;
   enable_kill=0;
   enable_load=0;
   enable_notes=0;
  };
 };
 active_params {
  name="active_params";
  el_typ=ParamSet;
  el_def=0;
  master_and_clones=0;
 };
 archived_params {
  name="archived_params";
  el_typ=ParamSet;
  el_def=0;
  master_and_clones=0;
 };
 data {
  name="data";
  el_typ=DataTable;
  el_def=0;
  save_tables=1;
  DataTable_Group @.gp[0] {
   name="InputData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
   DataTable @[0] {
    name="EasyEnv";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      name="Name";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
      ar {
       name="ar";
      [4] "Event_0";;;;      };
     };
     float_Data @[1] {
      name="Input";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=1;
      cell_geom{ 1;1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [2] ;;      };
      width=5;
      matrix_col_width=10;
      ar {
       name="ar";
      [1 1 4] 1;0;0;0;      };
     };
     float_Data @[2] {
      name="Output";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=1;
      cell_geom{ 1;1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [2] ;;      };
      width=6;
      matrix_col_width=10;
      ar {
       name="ar";
      [1 1 4] 1;0;0;0;      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=1;
    max_col_width=50;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [1] 0;    };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    row_with_hilite=-1;
   };
   DataTable @[1] {
    name="HardEnv";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      name="Name";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
      ar {
       name="ar";
      [4] "Event_0";"Event_1";"Event_2";"Event_3";      };
     };
     float_Data @[1] {
      name="Input";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=1;
      cell_geom{ 4;1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [2] ;;      };
      width=5;
      matrix_col_width=10;
      ar {
       name="ar";
      [4 1 4] 1;1;1;0;0;1;1;1;0;1;
0;1;0;1;1;0;      };
     };
     float_Data @[2] {
      name="Output";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=1;
      cell_geom{ 2;1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [2] ;;      };
      width=6;
      matrix_col_width=10;
      ar {
       name="ar";
      [2 1 4] 1;0;1;0;0;1;0;1;      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=1;
    max_col_width=50;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [4] 0;1;2;3;    };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    row_with_hilite=-1;
   };
   DataTable @[2] {
    name="ImpossibleEnv";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      name="Name";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
      ar {
       name="ar";
      [4] "Event_0";"Event_1";"Event_2";"Event_3";      };
     };
     float_Data @[1] {
      name="Input";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=1;
      cell_geom{ 4;1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [2] ;;      };
      width=5;
      matrix_col_width=10;
      ar {
       name="ar";
      [4 1 4] 1;0;1;0;0;1;0;1;1;1;
0;0;0;0;1;1;      };
     };
     float_Data @[2] {
      name="Output";
      col_flags=SAVE_DATA|AUTO_WIDTH;
      is_matrix=1;
      cell_geom{ 2;1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [2] ;;      };
      width=6;
      matrix_col_width=10;
      ar {
       name="ar";
      [2 1 4] 1;0;1;0;0;1;0;1;      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=1;
    max_col_width=50;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [4] 0;1;2;3;    };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    row_with_hilite=-1;
   };
  };
  DataTable_Group @.gp[1] {
   name="OutputData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
   DataTable @[0] {
    name="TrialOutputData";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      name="trial_name";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=16;
      matrix_col_width=10;
      ar {
       name="ar";
      [50] "Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";
"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";
"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";
"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";
"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";"Event_0";
      };
     };
     float_Data @[1] {
      name="sse";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [50] 0.008994217;0.0043499107;0.0030530817;0.0026772302;0.0027688136;0.0033762041;0.0049861912;0.0094546732;0.023904208;0.068298392;
0.1646421;0.27628139;0.40899053;0.75579715;0.87803453;0.91093183;0.9997983;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
      };
     };
     float_Data @[2] {
      name="Input_act_m";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=1;
      cell_geom{ 1;1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [2] ;;      };
      width=11;
      matrix_col_width=10;
      ar {
       name="ar";
      [1 1 50] 0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
      };
     };
     float_Data @[3] {
      name="Output_act_m";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=1;
      cell_geom{ 1;1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [2] ;;      };
      width=12;
      matrix_col_width=10;
      ar {
       name="ar";
      [1 1 50] 0.90516216;0.93404615;0.9447453;0.94825804;0.94738048;0.94189489;0.92938703;0.90276486;0.84539014;0.7386604;
0.59423888;0.47437522;0.36047632;0.13063404;0.062965013;0.045572504;0.00010082536;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
      };
     };
     Variant_Data @[4] {
      name="wts";
      col_flags=PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=1;
      cell_geom{ 2;4;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [2] ;;      };
      width=0;
      matrix_col_width=10;
      ar {
       name="ar";
      [2 4 50]  6 0 0.5; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 6 0 0.5599708557128906; 0 1;
 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 6 0 0.5950835943222046; 0 1; 0 1; 0 1;
 0 1; 0 1; 0 1; 0 1; 6 0 0.6093999743461609; 0 1; 0 1; 0 1; 0 1; 0 1;
 0 1; 0 1; 6 0 0.6056615710258484; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1;
 6 0 0.5846173167228699; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 6 0 0.5476073622703552; 0 1;
 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 6 0 0.4963182210922241; 0 1; 0 1; 0 1;
 0 1; 0 1; 0 1; 0 1; 6 0 0.4335744678974152; 0 1; 0 1; 0 1; 0 1; 0 1;
 0 1; 0 1; 6 0 0.3637872934341431; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1;
 6 0 0.2926409244537354; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 6 0 0.2259505540132523; 0 1;
 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 6 0 0.1681476086378098; 0 1; 0 1; 0 1;
 0 1; 0 1; 0 1; 0 1; 6 0 0.1213724836707115; 0 1; 0 1; 0 1; 0 1; 0 1;
 0 1; 0 1; 6 0 0.08556412160396576; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1;
 6 0 0.05930274352431297; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 6 0 0.04062982648611069; 0 1;
 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 6 0 0.02763815969228745; 0 1; 0 1; 0 1;
 0 1; 0 1; 0 1; 0 1; 6 0 0.01872861757874489; 0 1; 0 1; 0 1; 0 1; 0 1;
 0 1; 0 1; 6 0 0.01266789808869362; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1;
 6 0 0.008565080352127552; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 6 0 0.005794683936983347; 0 1;
 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 6 0 0.003925648052245378; 0 1; 0 1; 0 1;
 0 1; 0 1; 0 1; 0 1; 6 0 0.002664347877725959; 0 1; 0 1; 0 1; 0 1; 0 1;
 0 1; 0 1; 6 0 0.001812233007512987; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1;
 6 0 0.001235589268617332; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 6 0 0.0008445569546893239; 0 1;
 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 6 0 0.0005787748377770185; 0 1; 0 1; 0 1;
 0 1; 0 1; 0 1; 0 1; 6 0 0.0003976745065301657; 0 1; 0 1; 0 1; 0 1; 0 1;
 0 1; 0 1; 6 0 0.0002739550836849958; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1;
 6 0 0.0001892139698611572; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 6 0 0.0001310170628130436; 0 1;
 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 6 0 9.094455890590325e-05; 0 1; 0 1; 0 1;
 0 1; 0 1; 0 1; 0 1; 6 0 6.328037125058472e-05; 0 1; 0 1; 0 1; 0 1; 0 1;
 0 1; 0 1; 6 0 4.41341326222755e-05; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1;
 6 0 3.085011485381983e-05; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 6 0 2.161130396416411e-05; 0 1;
 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 6 0 1.517090822744649e-05; 0 1; 0 1; 0 1;
 0 1; 0 1; 0 1; 0 1; 6 0 1.067115317709977e-05; 0 1; 0 1; 0 1; 0 1; 0 1;
 0 1; 0 1; 6 0 7.520508006564341e-06; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1;
 6 0 5.309856533131097e-06; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 6 0 3.755639227165375e-06; 0 1;
 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 6 0 2.660819973243633e-06; 0 1; 0 1; 0 1;
 0 1; 0 1; 0 1; 0 1; 6 0 1.888199449240346e-06; 0 1; 0 1; 0 1; 0 1; 0 1;
 0 1; 0 1; 6 0 1.341982397207175e-06; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1;
 6 0 9.551736184221227e-07; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 6 0 6.808112971157243e-07; 0 1;
 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 6 0 4.859032856074919e-07; 0 1; 0 1; 0 1;
 0 1; 0 1; 0 1; 0 1; 6 0 3.472361527201429e-07; 0 1; 0 1; 0 1; 0 1; 0 1;
 0 1; 0 1; 6 0 2.48442319161768e-07; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1; 0 1;
      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=1;
    max_col_width=50;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [50] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;19;
20;21;22;23;24;25;26;27;28;29;
30;31;32;33;34;35;36;37;38;39;
40;41;42;43;44;45;46;47;48;49;
    };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    row_with_hilite=-1;
   };
   DataTable @[1] {
    name="EpochOutputData";
    desc=;
    data {
     name="data";
     el_typ=int_Data;
     el_def=0;
     int_Data @[0] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_22";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {name="NARROW": value=1: val_type_fixed=0: };
      };
      name="batch";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [50] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
      };
     };
     int_Data @[1] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_23";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {name="NARROW": value=1: val_type_fixed=0: };
      };
      name="epoch";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [50] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;19;
20;21;22;23;24;25;26;27;28;29;
30;31;32;33;34;35;36;37;38;39;
40;41;42;43;44;45;46;47;48;49;
      };
     };
     float_Data @[2] {
      name="avg_sse";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [50] 0.008994217;0.0043499107;0.0030530817;0.0026772302;0.0027688136;0.0033762041;0.0049861912;0.0094546732;0.023904208;0.068298392;
0.1646421;0.27628139;0.40899053;0.75579715;0.87803453;0.91093183;0.9997983;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
      };
     };
     float_Data @[3] {
      name="cnt_err";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [50] 1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
      };
     };
     float_Data @[4] {
      name="avg_ext_rew";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=11;
      matrix_col_width=10;
      ar {
       name="ar";
      [50] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
      };
     };
     float_Data @[5] {
      name="avg_cycles";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=10;
      matrix_col_width=10;
      ar {
       name="ar";
      [50] 2;2;2;2;2;2;2;3;4;4;
5;6;75;75;75;75;75;75;75;75;
75;75;75;75;75;75;75;75;75;75;
75;75;75;75;75;75;75;75;75;75;
75;75;75;75;75;75;75;75;75;75;
      };
     };
     float_Data @[6] {
      name="epoch_time_tot";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=14;
      matrix_col_width=10;
      ar {
       name="ar";
      [50] 0.28;0.54000002;0.69999999;0.68000001;0.67000002;0.68000001;0.68000001;0.68000001;0.68000001;0.70999998;
0.68000001;0.69999999;0.68000001;0.69999999;0.69;0.68000001;0.69999999;0.69999999;0.70999998;0.67000002;
0.68000001;0.68000001;0.68000001;0.67000002;0.69;0.69;0.69;0.69;0.68000001;0.69;
0.75;0.74000001;0.79000002;0.69999999;0.69;0.69;0.70999998;0.69999999;0.73000002;0.70999998;
0.98000002;0.76999998;4.8699999;5.04;5.0500002;5.0599999;5.0900002;5.0700002;5.1399999;5.1500001;
      };
     };
     float_Data @[7] {
      name="epoch_time_usr";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=14;
      matrix_col_width=10;
      ar {
       name="ar";
      [50] 0.27000001;0.54000002;0.69;0.69999999;0.68000001;0.68000001;0.68000001;0.67000002;0.68000001;0.75999999;
0.68000001;0.69;0.68000001;0.72000003;0.69;0.68000001;0.68000001;0.72000003;0.69;0.68000001;
0.68000001;0.68000001;0.69;0.67000002;0.68000001;0.69;0.69;0.67000002;0.67000002;0.69;
0.74000001;0.76999998;0.77999997;0.69999999;0.69;0.69;0.73000002;0.69999999;0.74000001;0.69999999;
0.97000003;0.75999999;4.8299999;5;5.0300002;4.9699998;5.0799999;5;5.1199999;5.1399999;
      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=1;
    max_col_width=50;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [50] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;19;
20;21;22;23;24;25;26;27;28;29;
30;31;32;33;34;35;36;37;38;39;
40;41;42;43;44;45;46;47;48;49;
    };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    row_with_hilite=-1;
   };
   DataTable @[2] {
    name="TrialOutputCumulative";
    desc=;
    data {
     name="data";
     el_typ=DataColT;
     el_def=0;
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=1;
    max_col_width=50;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [0]     };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    row_with_hilite=-1;
   };
   DataTable @[3] {
    name="CycleOutputData";
    desc=;
    data {
     name="data";
     el_typ=int_Data;
     el_def=0;
     int_Data @[0] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_19";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {name="NARROW": value=1: val_type_fixed=0: };
      };
      name="cycle";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [5000] 1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
1;2;3;4;5;6;7;8;9;10;
11;12;13;14;15;16;17;18;19;20;
21;22;23;24;25;26;27;28;29;30;
31;32;33;34;35;36;37;38;39;40;
41;42;43;44;45;46;47;48;49;50;
51;52;53;54;55;56;57;58;59;60;
61;62;63;64;65;66;67;68;69;70;
71;72;73;74;75;76;77;78;79;80;
81;82;83;84;85;86;87;88;89;90;
91;92;93;94;95;96;97;98;99;100;
      };
     };
     float_Data @[1] {
      name="net";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [5000] 0.33928573;0.43622449;0.46392128;0.47183466;0.47409561;0.47474161;0.47492617;0.47497889;0.47499397;0.47499827;
0.47499949;0.47499985;0.47499996;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;
0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;
0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;
0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;
0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;
0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;
0.47499999;0.47499999;0.47499999;0.47499999;0.47499999;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.37998021;0.48854598;0.51956475;0.5284273;0.53095943;0.53168291;0.53188962;0.53194869;0.53196555;0.53197038;
0.53197175;0.53197211;0.53197223;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;
0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;
0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;
0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;
0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;
0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;
0.53197229;0.53197229;0.53197229;0.53197229;0.53197229;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.40380675;0.51918012;0.55214393;0.56156212;0.56425303;0.56502187;0.56524158;0.56530434;0.56532228;0.56532741;
0.56532884;0.56532925;0.56532937;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;
0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;
0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;
0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;
0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;
0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;
0.56532943;0.56532943;0.56532943;0.56532943;0.56532943;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.41352141;0.53167039;0.56542724;0.57507205;0.57782769;0.57861501;0.57883996;0.57890427;0.57892263;0.57892787;
0.57892936;0.57892978;0.5789299;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;
0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;
0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;
0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;
0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;
0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;
0.57892996;0.57892996;0.57892996;0.57892996;0.57892996;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.41098464;0.52840883;0.56195855;0.57154423;0.574283;0.57506549;0.57528907;0.57535291;0.57537115;0.57537639;
0.57537788;0.5753783;0.57537842;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;
0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;
0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;
0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;
0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;
0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;
0.57537848;0.57537848;0.57537848;0.57537848;0.57537848;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.39670458;0.51004875;0.54243279;0.55168539;0.55432898;0.55508429;0.55530012;0.55536175;0.55537939;0.5553844;
0.55538583;0.55538625;0.55538636;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;
0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;
0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;
0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;
0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;
0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;
0.55538642;0.55538642;0.55538642;0.55538642;0.55538642;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.37159073;0.47775951;0.50809342;0.51676029;0.51923651;0.51994401;0.52014613;0.52020389;0.5202204;0.52022511;
0.52022648;0.52022684;0.52022696;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;
0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;
0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;
0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;
0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;
0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;
0.52022702;0.52022702;0.52022702;0.52022702;0.52022702;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.33678737;0.43301234;0.46050516;0.46836028;0.47060457;0.4712458;0.47142902;0.47148135;0.47149631;0.47150061;
0.47150183;0.47150216;0.47150227;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;
0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;
0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;
0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;
0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;
0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;
0.4715023;0.4715023;0.4715023;0.4715023;0.4715023;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.29421127;0.37827161;0.40228885;0.40915093;0.4111115;0.41167167;0.41183174;0.41187745;0.41189054;0.41189426;
0.41189533;0.41189563;0.41189572;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;
0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;
0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;
0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;
0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;
0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;
0.41189575;0.41189575;0.41189575;0.41189575;0.41189575;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.24685566;0.31738585;0.33753732;0.34329489;0.34493992;0.34540993;0.34554422;0.34558257;0.34559354;0.34559667;
0.34559757;0.34559783;0.34559789;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;
0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;
0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;
0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;
0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;
0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;
0.34559792;0.34559792;0.34559792;0.34559792;0.34559792;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.19857778;0.25531429;0.2715247;0.27615625;0.27747956;0.27785763;0.27796566;0.27799654;0.27800536;0.27800786;
0.27800858;0.27800879;0.27800885;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;
0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;
0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;
0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;
0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;
0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;
0.27800888;0.27800888;0.27800888;0.27800888;0.27800888;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.15332359;0.19713034;0.20964655;0.21322261;0.21424434;0.21453626;0.21461967;0.21464349;0.2146503;0.21465226;
0.21465281;0.21465297;0.21465302;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;
0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;
0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;
0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;
0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;
0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;
0.21465303;0.21465303;0.21465303;0.21465303;0.21465303;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.11410017;0.1467002;0.1560145;0.15867573;0.15943608;0.15965332;0.1597154;0.15973313;0.1597382;0.15973964;
0.15974006;0.15974018;0.15974021;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;
0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;
0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;
0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;
0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;
0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;
0.15974022;0.15974022;0.15974022;0.15974022;0.15974022;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.082359903;0.1058913;0.11261456;0.11453549;0.11508433;0.11524113;0.11528594;0.11529874;0.1153024;0.11530344;
0.11530374;0.11530382;0.11530385;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;
0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;
0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;
0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;
0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;
0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;
0.11530386;0.11530386;0.11530386;0.11530386;0.11530386;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.058061369;0.074650332;0.079390034;0.080744237;0.081131153;0.081241697;0.08127328;0.081282303;0.081284881;0.081285618;
0.081285834;0.081285894;0.081285909;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;
0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;
0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;
0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;
0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;
0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;
0.081285916;0.081285916;0.081285916;0.081285916;0.081285916;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.040241148;0.05173862;0.055023611;0.055962179;0.05623034;0.056306958;0.056328848;0.056335103;0.056336891;0.056337401;
0.056337547;0.056337588;0.056337602;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;
0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;
0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;
0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;
0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;
0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;
0.056337606;0.056337606;0.056337606;0.056337606;0.056337606;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.02757024;0.035447452;0.037698083;0.03834112;0.038524847;0.038577341;0.038592339;0.038596623;0.038597848;0.038598198;
0.038598295;0.038598325;0.038598333;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;
0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;
0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;
0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;
0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;
0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;
0.038598336;0.038598336;0.038598336;0.038598336;0.038598336;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.018754466;0.024112884;0.025643861;0.026081283;0.026206261;0.026241969;0.026252171;0.026255086;0.026255919;0.026256157;
0.026256224;0.026256245;0.02625625;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;
0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;
0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;
0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;
0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;
0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;
0.026256252;0.026256252;0.026256252;0.026256252;0.026256252;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.012708704;0.016339762;0.017377207;0.017673621;0.01775831;0.017782507;0.01778942;0.017791396;0.01779196;0.017792121;
0.017792167;0.01779218;0.017792184;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;
0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;
0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;
0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;
0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;
0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;
0.017792186;0.017792186;0.017792186;0.017792186;0.017792186;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.0085960738;0.011052094;0.011753814;0.011954306;0.012011589;0.012027957;0.012032633;0.012033968;0.01203435;0.012034459;
0.012034491;0.012034499;0.012034502;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;
0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;
0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;
0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;
0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;
0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;
0.012034503;0.012034503;0.012034503;0.012034503;0.012034503;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.0058120191;0.0074725961;0.0079470463;0.008082604;0.008121334;0.0081324;0.0081355618;0.0081364652;0.0081367232;0.0081367968;
0.0081368182;0.0081368238;0.0081368256;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;
0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;
0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;
0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;
0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;
0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;
0.0081368266;0.0081368266;0.0081368266;0.0081368266;0.0081368266;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.0039321068;0.0050555659;0.0053765541;0.0054682652;0.0054944684;0.0055019548;0.0055040941;0.005504705;0.0055048796;0.0055049295;
0.0055049439;0.0055049481;0.005504949;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;
0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;
0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;
0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;
0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;
0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;
0.0055049495;0.0055049495;0.0055049495;0.0055049495;0.0055049495;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.0026638326;0.0034249276;0.0036423833;0.0037045134;0.0037222649;0.0037273369;0.003728786;0.0037292;0.0037293183;0.003729352;
0.0037293616;0.0037293644;0.0037293653;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;
0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;
0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;
0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;
0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;
0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;
0.0037293655;0.0037293655;0.0037293655;0.0037293655;0.0037293655;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.0018079504;0.0023245076;0.0024720954;0.0025142634;0.0025263114;0.0025297536;0.0025307371;0.0025310181;0.0025310984;0.0025311215;
0.002531128;0.0025311299;0.0025311303;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;
0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;
0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;
0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;
0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;
0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;
0.0025311306;0.0025311306;0.0025311306;0.0025311306;0.0025311306;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.0012297296;0.0015810808;0.0016814669;0.0017101486;0.0017183435;0.0017206848;0.0017213537;0.0017215449;0.0017215995;0.0017216151;
0.0017216196;0.0017216209;0.0017216213;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;
0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;
0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;
0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;
0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;
0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;
0.0017216214;0.0017216214;0.0017216214;0.0017216214;0.0017216214;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.00083843555;0.0010779885;0.0011464322;0.0011659876;0.0011715748;0.0011731712;0.0011736273;0.0011737576;0.0011737949;0.0011738054;
0.0011738085;0.0011738094;0.0011738096;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;
0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;
0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;
0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;
0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;
0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;
0.0011738098;0.0011738098;0.0011738098;0.0011738098;0.0011738098;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.00057309226;0.00073683285;0.00078361586;0.00079698244;0.0008008015;0.00080189266;0.00080220442;0.00080229348;0.00080231891;0.00080232619;
0.00080232829;0.00080232887;0.00080232904;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;
0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;
0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;
0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;
0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;
0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;
0.0008023291;0.0008023291;0.0008023291;0.0008023291;0.0008023291;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.00039274007;0.00050495152;0.00053701195;0.00054617203;0.00054878922;0.00054953696;0.00054975064;0.0005498117;0.0005498291;0.00054983411;
0.0005498355;0.00054983591;0.00054983603;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;
0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;
0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;
0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;
0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;
0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;
0.00054983608;0.00054983608;0.00054983608;0.00054983608;0.00054983608;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.00026985057;0.00034695072;0.00036897932;0.0003752732;0.00037707147;0.00037758527;0.00037773207;0.00037777401;0.00037778597;0.0003777894;
0.00037779039;0.00037779065;0.00037779074;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;
0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;
0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;
0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;
0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;
0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;
0.00037779077;0.00037779077;0.00037779077;0.00037779077;0.00037779077;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.0001858981;0.00023901185;0.00025418721;0.00025852301;0.00025976181;0.00026011575;0.00026021688;0.00026024578;0.00026025405;0.00026025641;
0.00026025707;0.00026025725;0.00026025731;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;
0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;
0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;
0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;
0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;
0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;
0.00026025734;0.00026025734;0.00026025734;0.00026025734;0.00026025734;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
0.0001283952;0.00016507955;0.00017556078;0.00017855542;0.00017941103;0.00017965549;0.00017972534;0.00017974529;0.00017975099;0.00017975262;
0.00017975309;0.00017975322;0.00017975326;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;
0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;
0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;
0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;
0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;
0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;
0.00017975328;0.00017975328;0.00017975328;0.00017975328;0.00017975328;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
8.8904439e-05;0.00011430571;0.00012156321;0.00012363678;0.00012422923;0.0001243985;0.00012444687;0.00012446068;0.00012446463;0.00012446576;
0.00012446608;0.00012446617;0.0001244662;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;
0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;
0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;
0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;
0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;
0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;
0.00012446621;0.00012446621;0.00012446621;0.00012446621;0.00012446621;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
6.1712381e-05;7.9344492e-05;8.4382234e-05;8.5821594e-05;8.6232838e-05;8.6350337e-05;8.6383909e-05;8.6393498e-05;8.6396234e-05;8.639702e-05;
8.6397245e-05;8.6397311e-05;8.6397326e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;
8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;
8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;
8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;
8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;
8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;
8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;8.6397333e-05;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
4.2940253e-05;5.5208897e-05;5.871422e-05;5.9715741e-05;6.000189e-05;6.008365e-05;6.010701e-05;6.0113682e-05;6.0115588e-05;6.0116134e-05;
6.011629e-05;6.0116334e-05;6.0116348e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;
6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;
6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;
6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;
6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;
6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;
6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;6.0116352e-05;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
2.9948162e-05;3.8504779e-05;4.0949526e-05;4.1648025e-05;4.1847597e-05;4.1904619e-05;4.192091e-05;4.1925563e-05;4.1926894e-05;4.1927273e-05;
4.1927382e-05;4.1927415e-05;4.1927422e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;
4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;
4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;
4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;
4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;
4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;
4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;4.1927426e-05;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
2.0934007e-05;2.6915151e-05;2.8624048e-05;2.9112305e-05;2.9251807e-05;2.9291665e-05;2.9303053e-05;2.9306308e-05;2.9307237e-05;2.9307503e-05;
2.9307577e-05;2.9307599e-05;2.9307606e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;
2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;
2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;
2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;
2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;
2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;
2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;2.9307608e-05;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1.4664814e-05;1.885476e-05;2.0051888e-05;2.0393923e-05;2.0491649e-05;2.051957e-05;2.0527548e-05;2.0529827e-05;2.0530479e-05;2.0530664e-05;
2.0530717e-05;2.0530733e-05;2.0530737e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;
2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;
2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;
2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;
2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;
2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;
2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;2.0530739e-05;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1.0294545e-05;1.3235844e-05;1.4076214e-05;1.431632e-05;1.4384922e-05;1.4404523e-05;1.4410122e-05;1.4411722e-05;1.441218e-05;1.4412311e-05;
1.4412348e-05;1.4412358e-05;1.4412361e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;
1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;
1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;
1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;
1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;
1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;
1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1.4412362e-05;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
7.2411399e-06;9.3100371e-06;9.9011504e-06;1.007004e-05;1.0118294e-05;1.0132081e-05;1.013602e-05;1.0137145e-05;1.0137467e-05;1.0137559e-05;
1.0137585e-05;1.0137593e-05;1.0137594e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;
1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;
1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;
1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;
1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;
1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;
1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1.0137595e-05;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
5.1032021e-06;6.5612594e-06;6.9778471e-06;7.0968722e-06;7.1308796e-06;7.1405957e-06;7.1433719e-06;7.144165e-06;7.1443919e-06;7.1444565e-06;
7.1444751e-06;7.1444802e-06;7.144482e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;
7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;
7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;
7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;
7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;
7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;
7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;7.1444824e-06;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
3.603117e-06;4.632579e-06;4.926711e-06;5.0107487e-06;5.0347594e-06;5.0416197e-06;5.0435797e-06;5.0441395e-06;5.0442995e-06;5.0443455e-06;
5.0443587e-06;5.0443623e-06;5.0443632e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;
5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;
5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;
5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;
5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;
5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;
5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;5.0443637e-06;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
2.5484694e-06;3.2766036e-06;3.4846419e-06;3.5440814e-06;3.5610642e-06;3.5659164e-06;3.5673027e-06;3.5676987e-06;3.567812e-06;3.5678443e-06;
3.5678536e-06;3.5678561e-06;3.567857e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;
3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;
3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;
3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;
3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;
3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;
3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;3.5678572e-06;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1.8055564e-06;2.3214295e-06;2.468822e-06;2.5109341e-06;2.522966e-06;2.5264037e-06;2.527386e-06;2.5276665e-06;2.5277468e-06;2.5277698e-06;
2.5277764e-06;2.5277782e-06;2.5277786e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;
2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;
2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;
2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;
2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;
2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;
2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;2.5277789e-06;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1.2812782e-06;1.6473576e-06;1.7519518e-06;1.7818359e-06;1.7903742e-06;1.7928137e-06;1.7935107e-06;1.7937098e-06;1.7937667e-06;1.793783e-06;
1.7937876e-06;1.7937889e-06;1.7937894e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;
1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;
1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;
1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;
1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;
1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;
1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1.7937895e-06;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
9.1063094e-07;1.1708112e-06;1.2451484e-06;1.2663876e-06;1.272456e-06;1.2741898e-06;1.2746851e-06;1.2748267e-06;1.2748671e-06;1.2748786e-06;
1.2748819e-06;1.2748829e-06;1.2748832e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;
1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;
1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;
1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;
1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;
1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;
1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1.2748833e-06;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
6.481535e-07;8.3334021e-07;8.8625069e-07;9.0136797e-07;9.0568722e-07;9.0692129e-07;9.0727389e-07;9.0737461e-07;9.0740338e-07;9.0741162e-07;
9.0741395e-07;9.0741463e-07;9.0741486e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;
9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;
9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;
9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;
9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;
9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;
9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;9.0741491e-07;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
4.6197911e-07;5.9397314e-07;6.3168568e-07;6.4246069e-07;6.4553927e-07;6.4641887e-07;6.4667017e-07;6.4674202e-07;6.4676254e-07;6.467684e-07;
6.4677005e-07;6.4677056e-07;6.4677067e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;
6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;
6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;
6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;
6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;
6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;
6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;6.4677073e-07;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
3.2972011e-07;4.2392583e-07;4.5084175e-07;4.5853201e-07;4.6072924e-07;4.6135702e-07;4.6153639e-07;4.6158763e-07;4.6160227e-07;4.6160645e-07;
4.6160764e-07;4.6160798e-07;4.616081e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;
4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;
4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;
4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;
4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;
4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;
4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;4.6160812e-07;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
2.3562454e-07;3.0294584e-07;3.2218048e-07;3.276761e-07;3.2924629e-07;3.296949e-07;3.2982308e-07;3.2985972e-07;3.2987018e-07;3.2987316e-07;
3.2987401e-07;3.2987427e-07;3.2987433e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;
3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;
3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;
3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;
3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;
3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;
3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;3.2987435e-07;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1.6858586e-07;2.1675325e-07;2.3051535e-07;2.3444738e-07;2.3557082e-07;2.358918e-07;2.3598352e-07;2.3600973e-07;2.360172e-07;2.3601935e-07;
2.3601996e-07;2.3602013e-07;2.3602018e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;
2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;
2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;
2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;
2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;
2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;
2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;2.360202e-07;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
      };
     };
     float_Data @[2] {
      name="I_net";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [5000] 0.18068762;0;0;0;0;0.25565541;0.1769821;0.11936969;0.079261631;0;
0;0;0;0.24203932;0.16751434;0.11590283;0.080186322;0;0;0;
0;0.2418381;0.16740587;0.11588193;0.080215901;0;0;0;0;0.24183652;
0.16740504;0.1158818;0.080216184;0;0;0;0;0.24183652;0.16740502;0.11588179;
0.080216184;0;0;0;0;0.24183652;0.16740502;0.11588179;0.080216184;0;
0;0;0;0.24183652;0.16740502;0.11588179;0.080216184;0;0;0;
0;0.24183652;0.16740502;0.11588179;0.080216184;0;0;0;0;0.24183652;
0.16740502;0.11588179;0.080216184;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.12042494;0.20845138;0;0;0;0;0.28017306;0.19021152;0.12676327;0;
0;0;0;0.26974919;0.18280536;0.12378679;0;0;0;0;
0.26926449;0.18248884;0.12367438;0.083813772;0;0;0;0;0.26924431;0.18247578;
0.12366983;0.083815008;0;0;0;0;0.26924378;0.18247548;0.1236697;0.083815038;
0;0;0;0;0.26924378;0.18247548;0.1236697;0.083815038;0;0;
0;0;0.26924378;0.18247548;0.1236697;0.083815038;0;0;0;0;
0.26924378;0.18247548;0.1236697;0.083815038;0;0;0;0;0.26924378;0.18247548;
0.1236697;0.083815038;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.13201585;0;0;0;0;0.30286074;0.20427766;0.13376248;0;0;
0;0;0.28629142;0.19191869;0.12845768;0;0;0;0;0.2853508;
0.19128093;0.12821257;0;0;0;0;0.28530285;0.1912486;0.12820022;0;
0;0;0;0.28530037;0.19124693;0.12819961;0;0;0;0;
0.28530028;0.1912469;0.12819955;0;0;0;0;0.28530028;0.1912469;0.12819955;
0;0;0;0;0.28530028;0.1912469;0.12819955;0;0;0;
0;0.28530028;0.1912469;0.12819955;0;0;0;0;0.28530028;0.1912469;
0.12819955;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.1367121;0;0;0;0;0.30983201;0.20818114;0.13575503;0;0;
0;0;0.29288596;0.19551115;0.13029826;0;0;0;0;0.29188251;
0.19482526;0.1300303;0;0;0;0;0.29182824;0.19478841;0.13001601;0;
0;0;0;0.29182529;0.19478643;0.13001519;0;0;0;0;
0.29182518;0.19478631;0.13001516;0;0;0;0;0.29182515;0.19478631;0.13001516;
0;0;0;0;0.29182515;0.19478631;0.13001516;0;0;0;
0;0.29182515;0.19478631;0.13001516;0;0;0;0;0.29182515;0.19478631;
0.13001516;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.13548747;0;0;0;0;0.3080152;0.20716688;0.13523912;0;0;
0;0;0.29116607;0.19457598;0.12982002;0;0;0;0;0.29017857;
0.19390228;0.1295578;0;0;0;0;0.29012591;0.19386652;0.12954397;0;
0;0;0;0.29012308;0.19386469;0.12954327;0;0;0;0;
0.29012299;0.19386449;0.1295432;0;0;0;0;0.29012296;0.19386452;0.12954324;
0;0;0;0;0.29012296;0.19386452;0.12954324;0;0;0;
0;0.29012296;0.19386452;0.12954324;0;0;0;0;0.29012296;0.19386452;
0.12954324;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.12857167;0;0;0;0;0.297741;0.20139071;0.13227703;0;0;
0;0;0.28145722;0.18927404;0.12709747;0;0;0;0;0.28056598;
0.18867449;0.12687051;0;0;0;0;0.28052279;0.18864568;0.1268598;0;
0;0;0;0.28052074;0.18864425;0.12685925;0;0;0;0;
0.28052062;0.18864423;0.12685923;0;0;0;0;0.28052062;0.18864423;0.12685923;
0;0;0;0;0.28052062;0.18864423;0.12685923;0;0;0;
0;0.28052062;0.18864423;0.12685923;0;0;0;0;0.28052062;0.18864423;
0.12685923;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.11631913;0.2042236;0;0;0;0;0.27413562;0.18677148;0.12496066;0;
0;0;0;0.26403016;0.1796535;0.12215559;0.083028436;0;0;0;
0;0.263592;0.17937317;0.1220607;0.083059743;0;0;0;0;0.26358211;
0.17936684;0.12205856;0.083060443;0;0;0;0;0.26358184;0.17936669;0.12205856;
0.083060518;0;0;0;0;0.26358184;0.17936669;0.12205856;0.083060518;0;
0;0;0;0.26358184;0.17936669;0.12205856;0.083060518;0;0;0;
0;0.26358184;0.17936669;0.12205856;0.083060518;0;0;0;0;0.26358184;
0.17936669;0.12205856;0.083060518;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.099149704;0.18627208;0;0;0;0;0.25371197;0.17575505;0.11871063;0.078987122;
0;0;0;0;0.24034473;0.16658135;0.11542793;0.079977676;0.055416301;0;
0;0;0;0.24016438;0.16648671;0.11541183;0.080005676;0.055461466;0;0;
0;0;0.24016371;0.16648641;0.11541179;0.080005825;0.055461645;0;0;0;
0;0.24016371;0.16648641;0.11541179;0.080005825;0.055461645;0;0;0;0;
0.24016371;0.16648641;0.11541179;0.080005825;0.055461645;0;0;0;0;0.24016371;
0.16648641;0.11541179;0.080005825;0.055461645;0;0;0;0;0.24016371;0.16648641;
0.11541179;0.080005825;0.055461645;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.077846259;0.16338833;0;0;0;0;0.22182046;0.15667595;0.10849787;0.074730381;
0.051745564;0.036207363;0;0;0;0;0.21206459;0.1512122;0.10782144;0.0768812;
0.054819241;0.039088085;0;0;0;0;0.21206787;0.15121257;0.10782043;0.076880157;
0.054818496;0.039087713;0;0;0;0;0.21206787;0.15121257;0.10782043;0.076880157;
0.054818496;0.039087713;0;0;0;0;0.21206787;0.15121257;0.10782043;0.076880157;
0.054818496;0.039087713;0;0;0;0;0.21206787;0.15121257;0.10782043;0.076880157;
0.054818496;0.039087713;0;0;0;0;0.21206787;0.15121257;0.10782043;0.076880157;
0.054818496;0.039087713;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.053764202;0.13670717;0;0;0;0;0.18561354;0.13495953;0.098454669;0.07342416;
0.055151731;0.041152753;0.030513406;0.022604674;0.016779587;0;0;0;0;0.18177456;
0.13505286;0.10034017;0.074549682;0.05538813;0.041151702;0.030574426;0.022715867;0.016877204;0;0;
0;0;0.18177457;0.13505292;0.1003402;0.074549675;0.055388115;0.041151702;0.030574426;0.022715867;
0.016877204;0;0;0;0;0.18177457;0.13505292;0.1003402;0.074549675;0.055388115;
0.041151702;0.030574426;0.022715867;0.016877204;0;0;0;0;0.18177457;0.13505292;
0.1003402;0.074549675;0.055388115;0.041151702;0.030574426;0.022715867;0.016877204;0;0;0;
0;0.18177457;0.13505292;0.1003402;0.074549675;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.028793409;0.10813133;0.12143614;0;0;0;0;0.14921585;0.12105493;0.092781991;
0.070454255;0.056583062;0.043851793;0.034034826;0.026779763;0.020906821;0.016309567;0.012762211;0.009975031;0;
0;0;0;0.15081623;0.11787017;0.092121191;0.071997158;0.056269258;0.043977171;0.034370258;
0.026862048;0.020993955;0.01640778;0.0128235;0.010022163;0;0;0;0;0.15081623;
0.11787015;0.092121191;0.071997158;0.056269258;0.043977171;0.034370258;0.026862048;0.020993955;0.01640778;0.0128235;
0.010022163;0;0;0;0;0.15081623;0.11787015;0.092121191;0.071997158;0.056269258;
0.043977171;0.034370258;0.026862048;0.020993955;0.01640778;0.0128235;0.010022163;0;0;0;
0;0.15081623;0.11787015;0.092121191;0.071997158;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.0050017759;0.080043472;0.095157504;0.093553878;0;0;0;0;0.12183617;0.098650694;
0.081998482;0.066547468;0.056360561;0.044159546;0.039980896;0.028512053;0.029518738;0.017966084;0.021443009;0.010921307;
0.01579681;0.0061228275;0.012062021;0.0028583705;0;0;0;0;0.12191562;0.097960576;
0.084162675;0.065278441;0.058503497;0.043065712;0.041063961;0.027968578;0.029211;0.017707653;0.021155022;0.010733724;
0.015679687;0.0059938207;0.011958323;0.002772294;0;0;0;0;0.12191562;0.097960576;
0.084162675;0.065278441;0.058503497;0.043065712;0.041063961;0.027968578;0.029211;0.017707653;0.021155022;0.010733724;
0.015679687;0.0059938207;0.011958323;0.002772294;0;0;0;0;0.12191562;0.097960576;
0.084162675;0.065278441;0.058503497;0.043065712;0.041063961;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.015920535;0.054648809;0.07055372;0.07141313;0.067943618;0.06340342;0;0;0;0;
0.095372051;0.077840075;0.071101986;0.056712795;0.054927353;0.040444531;0.041989423;0.028829645;0.032919217;0.019874819;
0.025827803;0.013397206;0.020751964;0.0084728822;0.016862117;0.0048652515;0.014028944;0.0021509975;0.011888303;0.00014651194;
0.010312028;-0.0013531148;0.0091303922;-0.002465032;0;0;0;0;0.094272308;0.078009807;
0.071613804;0.056592979;0.054752182;0.040655218;0.042204224;0.028794866;0.032866459;0.019968744;0.025917616;0.013400648;
0.020746499;0.0085128956;0.016898319;0.0048755743;0.014034633;0.0021688081;0.011903565;0.00015451014;0.010317702;-0.0013444535;
0.0091375448;-0.0024599507;0;0;0;0;0.094272278;0.078009844;0.071613841;0.056592967;
0.054752164;0.040655222;0.042204231;0.028794859;0.032866471;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.033055987;0.033366658;0.049337011;0.051698126;0.050116528;0.047468115;0.044628661;0.04185918;0.039229289;0.0022809543;
-0.0067778416;-0.0011790097;0.0060027055;-0.0053374879;0.00011039525;0.0071380567;-0.0069041476;-0.0012652576;0.0066491105;0;
0;0;0;0.071281925;0.058822472;0.053721327;0.05166002;0.049749717;0.034073368;0.032183319;
0.034059919;0.035297628;0.018596362;0.019281596;0.023659632;0.026546614;0.0083988197;0.010395769;0.016416386;0.02060627;
0.0020268857;0.005062338;0.012104023;0.0169804;-0.0021542162;0.0014373846;0.0091534033;0.014552886;-0.0047835372;-0.00077595934;
0.0073608719;0.013050757;-0.0064971857;-0.0022542402;0.006158866;0.012058767;-0.0075815953;-0.0031713434;0.0054153278;0.011437524;
-0.0082844384;-0.0037753284;0.0049245097;0.011031507;-0.0087312758;-0.004154481;0.0046169534;0;0;0;
0;0.071550824;0.058692817;0.053379245;0.051323395;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.046297673;0.016622115;0.032271322;0.035448883;0.035034988;0.033610303;0.031949166;0.030282542;0.028676679;0.027148157;
0.0256988;0.024326114;0.023026554;0.021758899;0;0;0;0;0.050396789;0.048195347;
0.046196666;0.043682087;0.030018477;0.027910313;0.029029284;0.030372128;0.031161074;0.031047948;0.028822169;0.010541324;
0.010243073;0.014363842;0.018235506;0.020896282;0.022085123;0.020571189;-0.00027966313;0.00061001815;0.0063983258;0.011623709;
0.015269871;0.01712135;0.015861087;-0.0064702351;-0.0049433224;0.0018017292;0.0078149587;0.012038297;0.014284148;0.013205048;
-0.0099720899;-0.0080768596;-0.00079098158;0.0056654867;0.010212994;0.012679696;0.011698484;-0.011960907;-0.0098580644;-0.0022648517;
0.0044438839;0.0091760308;0.011768761;0.010844623;-0.013088992;-0.010868113;-0.0031005777;0.0037511736;0.0085879639;0.011252141;
0.010360314;-0.013729148;-0.011441344;-0.0035748538;0.0033580624;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.056077197;0.0040886216;0.019287089;0.022863377;0.023132043;0.022457037;0.021535752;0.020574475;0.01963314;0.018728089;
0.017862756;0.017036812;0.016248893;0.01549736;0.014780565;0.014096922;0.013444906;0.012823036;0.012229932;0.011664266;
0.011124762;0.01061021;0.010119241;0.0096441228;0.0091072479;0.0081027271;0.0057735858;0.0018545156;-0.00687961;-0.0069487859;
-0.0039975112;-0.00085084047;0.0016106544;0.0032383474;0.0040042186;0.0038300967;0.0026418539;0.00079490943;-0.00097845495;-0.0019170297;
-0.0018667867;-0.0011520451;-0.00022214651;0.00057954621;0.0010435479;0.0011109821;0.00085305097;0.00036790315;-0.00013278052;-0.00045696367;
-0.00051731523;-0.00036456995;-0.00012031943;0.00011508726;0.0002724221;0.00032288767;0.00027608499;0.00016485155;2.8987415e-05;-7.8002922e-05;
-0.00012196787;-0.00010529719;-5.3006224e-05;9.3765557e-06;6.0447492e-05;8.7421387e-05;8.7705441e-05;6.7183748e-05;3.6526471e-05;6.8722293e-06;
-1.3522804e-05;-2.10898e-05;-1.6856007e-05;-5.0533563e-06;8.8596717e-06;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.063065968;-0.0049551176;0.0098079182;0.013558183;0.01421422;0.013986195;0.013515814;0.012990787;0.012465639;0.011955712;
0.011464888;0.010993706;0.010541737;0.010108308;0.0096926847;0.0092941485;0.008911998;0.0085455589;0.0081941905;0.0078572631;
0.0075341882;0.0072244015;0.0069273543;0.0066425167;0.0063693943;0.0061075017;0.0058563733;0.0056155762;0.005384679;0.0051632784;
0.0049509741;0.0047474001;0.0045521986;0.0043650232;0.0041855425;0.0040134434;0.0038484186;0.0036901794;0.0035384502;0.0033929572;
0.0032534469;0.003119668;0.0029914007;0.0028683972;0.0027504582;0.002637364;0.002528917;0.0024249367;0.0023252293;0.002229616;
0.002137946;0.0020500347;0.0019657407;0.0018849131;0.0018074084;0.0017330926;0.0016618315;0.0015935022;0.00152798;0.0014651474;
0.0014049038;0.001347119;0.0012916897;0.0012385026;0.0011874445;0.0011384303;0.0010912996;0.001045955;0.0010023578;0.00096028729;
0.00091959204;0.00088028482;0.00084239716;0.00080533489;0.00076908671;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.067945614;-0.011312529;0.0030897222;0.0069049615;0.0077793445;0.0078163603;0.0076186028;0.0073604514;0.0070922887;0.006828472;
0.0065728934;0.0063264254;0.0060890662;0.0058605783;0.0056406492;0.0054289713;0.0052252347;0.0050291438;0.0048404131;0.004658768;
0.0044839364;0.0043156631;0.0041537071;0.0039978279;0.0038477974;0.0037034014;0.003564422;0.003430658;0.0033019157;0.0031780014;
0.0030587371;0.0029439516;0.0028334735;0.0027271388;0.002624793;0.0025262935;0.0024314877;0.0023402395;0.0022524148;0.0021678889;
0.0020865314;0.0020082295;0.0019328659;0.0018603317;0.0017905151;0.0017233221;0.0016586492;0.0015964052;0.001536496;0.001478835;
0.0014233384;0.0013699196;0.0013185125;0.0012690304;0.0012214044;0.0011755703;0.0011314536;0.0010889946;0.0010481225;0.0010087909;
0.00097093545;0.00093449932;0.00089943036;0.0008656811;0.00083319191;0.00080192462;0.00077182986;0.00074286759;0.00071499031;0.00068815798;
0.00066233426;0.0006374782;0.00061355345;0.00059052557;0.00056836754;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.071300186;-0.015703507;-0.0015766066;0.0022557788;0.0032545587;0.0034502391;0.0034184644;0.0033243056;0.0032151553;0.0031045694;
0.0029963451;0.002891476;0.0027901556;0.0026923546;0.002597973;0.0025068945;0.0024190105;0.0023342026;0.0022523748;0.0021734126;
0.0020972174;0.0020236941;0.0019527487;0.0018842854;0.0018182294;0.001754486;0.0016929759;0.0016336273;0.0015763547;0.001521091;
0.0014677681;0.0014163144;0.0013666619;0.0013187509;0.0012725182;0.0012279069;0.0011848612;0.0011433214;0.0011032401;0.0010645604;
0.0010272451;0.00099123083;0.00095647946;0.00092294812;0.00089059211;0.00085936952;0.0008292431;0.00080016907;0.00077211671;0.00074504688;
0.00071892887;0.00069372449;0.00066940393;0.00064593181;0.0006232895;0.00060143694;0.00058035273;0.00056000613;0.00054037571;0.00052142981;
0.00050315075;0.00048551057;0.00046848878;0.00045206212;0.00043621194;0.00042092055;0.00040616654;0.00039192382;0.00037818495;0.00036492944;
0.00035213307;0.00033979118;0.00032787863;0.00031638239;0.00030529313;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.073585935;-0.018704999;-0.0047785467;-0.0009475135;0.00012375152;0.00041618917;0.00048707597;0.0004950671;0.0004854782;0.0004712634;
0.00045610039;0.0004410398;0.0004263696;0.00041215343;0.00039840434;0.0003851061;0.00037225557;0.00035983181;0.00034782151;0.00033621211;
0.00032499013;0.00031414255;0.00030366145;0.00029352447;0.00028372789;0.00027425913;0.00026510376;0.00025625573;0.00024770154;0.00023943465;
0.00023144111;0.00022371812;0.00021625264;0.00020903442;0.00020205881;0.00019531418;0.00018879678;0.00018249312;0.00017640321;0.00017051306;
0.00016482361;0.00015932089;0.00015400536;0.00014886353;0.00014389539;0.00013909442;0.00013445318;0.0001299656;0.0001256289;0.00012143841;
0.00011738483;0.00011346489;0.0001096786;0.00010601943;0.00010247994;9.9061057e-05;9.5755327e-05;9.25567e-05;8.9467969e-05;8.6483546e-05;
8.359924e-05;8.08076e-05;7.8109559e-05;7.5505581e-05;7.2984025e-05;7.0546754e-05;6.819237e-05;6.5919477e-05;6.3718297e-05;6.1592087e-05;
5.9538055e-05;5.755201e-05;5.5632088e-05;5.3775962e-05;5.1978976e-05;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.075135037;-0.020743566;-0.0069589079;-0.0031348432;-0.0020202049;-0.001667536;-0.0015320235;-0.0014593793;-0.0014057177;-0.0013585257;
-0.0013141995;-0.0012716872;-0.0012306534;-0.0011909751;-0.0011525857;-0.0011154328;-0.0010794803;-0.0010446841;-0.0010110131;-0.00097842794;
-0.00094689056;-0.00091637112;-0.00088683143;-0.00085824961;-0.0008305856;-0.0008038138;-0.00077790627;-0.00075283367;-0.00072856713;-0.00070508523;
-0.0006823591;-0.00066036684;-0.000639081;-0.00061848154;-0.00059854565;-0.00057925424;-0.00056058541;-0.00054251496;-0.00052502891;-0.00050810957;
-0.00049173133;-0.00047588209;-0.0004605446;-0.00044569839;-0.00043133413;-0.00041742856;-0.00040397653;-0.00039095385;-0.00037835259;-0.00036615739;
-0.00035435613;-0.00034293532;-0.00033188425;-0.00032118475;-0.00031082984;-0.00030081067;-0.00029111374;-0.00028173206;-0.00027265027;-0.00026386231;
-0.00025535747;-0.00024713017;-0.00023916364;-0.00023145461;-0.00022399379;-0.00021677464;-0.00020978786;-0.00020302692;-0.00019648159;-0.0001901486;
-0.00018402189;-0.00017809216;-0.00017234962;-0.00016679661;-0.00016142149;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.076181836;-0.022123154;-0.0084370431;-0.0046204817;-0.003479185;-0.0030882964;-0.0029114224;-0.002797236;-0.0027028292;-0.0026159789;
-0.002533166;-0.0024533283;-0.0023761066;-0.0023013419;-0.0022289383;-0.0021588132;-0.002090896;-0.0020251174;-0.0019614077;-0.0018997011;
-0.0018399374;-0.0017820508;-0.0017259882;-0.0016716863;-0.001619095;-0.0015681575;-0.0015188234;-0.0014710426;-0.0014247622;-0.0013799369;
-0.0013365266;-0.0012944783;-0.0012537532;-0.001214311;-0.0011761114;-0.0011391095;-0.0011032738;-0.0010685639;-0.0010349483;-0.001002389;
-0.00097085489;-0.00094031147;-0.00091072964;-0.00088207913;-0.00085432734;-0.00082745007;-0.00080141542;-0.00077620451;-0.0007517857;-0.00072813453;
-0.00070522516;-0.00068303919;-0.00066155079;-0.00064073922;-0.00062058074;-0.00060105813;-0.00058214506;-0.0005638327;-0.00054609589;-0.00052891229;
-0.00051227259;-0.00049615791;-0.00048054662;-0.00046542892;-0.000450789;-0.00043660495;-0.00042287074;-0.00040956726;-0.00039668195;-0.00038420549;
-0.00037211599;-0.00036040973;-0.00034907111;-0.00033808802;-0.00032745115;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.07688842;-0.023055287;-0.009436937;-0.0056267204;-0.0044686496;-0.0040531005;-0.0038493741;-0.0037081398;-0.0035871523;-0.0034743967;
-0.0033664005;-0.0032621045;-0.0031611365;-0.003063323;-0.0029685444;-0.0028766987;-0.0027876976;-0.0027014515;-0.00261787;-0.0025368759;
-0.0024583859;-0.0023823255;-0.002308618;-0.0022371917;-0.002167973;-0.0021008956;-0.0020358968;-0.00197291;-0.0019118679;-0.0018527145;
-0.0017953939;-0.0017398449;-0.0016860149;-0.0016338541;-0.0015833038;-0.0015343181;-0.0014868467;-0.0014408471;-0.0013962663;-0.0013530673;
-0.0013112042;-0.0012706388;-0.0012313258;-0.0011932307;-0.0011563108;-0.0011205373;-0.0010858674;-0.0010522734;-0.0010197151;-0.00098816771;
-0.00095759379;-0.00092796609;-0.00089925318;-0.00087143085;-0.00084446836;-0.00081833987;-0.00079302117;-0.00076848804;-0.00074470928;-0.00072166929;
-0.00069934339;-0.00067770691;-0.00065673795;-0.00063641858;-0.00061672647;-0.00059764623;-0.00057915691;-0.0005612364;-0.00054387189;-0.00052704569;
-0.0005107387;-0.00049493834;-0.00047962414;-0.00046478212;-0.00045040436;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.077365436;-0.023684958;-0.010112922;-0.0063075717;-0.005138739;-0.0047070673;-0.004485704;-0.0043266616;-0.0041881548;-0.0040583117;
-0.0039336882;-0.0038132269;-0.0036965495;-0.0035834692;-0.0034738558;-0.0033676007;-0.0032645939;-0.0031647407;-0.0030679372;-0.0029740978;
-0.0028831274;-0.0027949379;-0.0027094493;-0.0026265737;-0.0025462345;-0.0024683513;-0.002392852;-0.0023196596;-0.0022487072;-0.0021799239;
-0.0021132496;-0.0020486098;-0.0019859474;-0.0019252038;-0.0018663179;-0.0018092321;-0.001753891;-0.0017002457;-0.0016482383;-0.0015978228;
-0.0015489504;-0.0015015722;-0.0014556427;-0.0014111185;-0.0013679573;-0.0013261159;-0.001285552;-0.0012462287;-0.0012081093;-0.0011711571;
-0.0011353355;-0.0011006078;-0.0010669436;-0.001034309;-0.0010026708;-0.000972001;-0.00094227237;-0.00091345131;-0.00088551035;-0.00085842493;
-0.00083216757;-0.00080671697;-0.00078203937;-0.00075811974;-0.00073493028;-0.00071244955;-0.00069065671;-0.00066952978;-0.00064905069;-0.00062919804;
-0.0006099504;-0.00059129263;-0.00057320914;-0.00055567571;-0.00053868012;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.077687755;-0.024110656;-0.01057017;-0.006768371;-0.0055925166;-0.0051501957;-0.0049171392;-0.0047462769;-0.0045961314;-0.0044549224;
-0.0043192287;-0.0041880063;-0.0040608607;-0.0039376048;-0.0038180959;-0.003702217;-0.003589856;-0.0034809052;-0.0033752623;-0.0032728203;
-0.0031734919;-0.0030771799;-0.0029837871;-0.0028932323;-0.0028054235;-0.0027202796;-0.0026377186;-0.0025576649;-0.0024800422;-0.002404775;
-0.0023317907;-0.0022610193;-0.0021923976;-0.0021258611;-0.002061341;-0.0019987789;-0.0019381149;-0.0018792939;-0.0018222586;-0.0017669512;
-0.001713326;-0.0016613292;-0.0016109085;-0.0015620159;-0.0015146086;-0.0014686415;-0.0014240687;-0.001380848;-0.00133894;-0.0012983053;
-0.0012589043;-0.0012206949;-0.0011836463;-0.0011477256;-0.0011128902;-0.0010791157;-0.0010463661;-0.0010146108;-0.00098381611;-0.0009539586;
-0.00092500739;-0.00089693523;-0.00086971209;-0.00084331667;-0.00081772415;-0.00079290487;-0.00076884066;-0.00074550696;-0.00072287943;-0.00070094329;
-0.00067966781;-0.00065904111;-0.00063903921;-0.00061964325;-0.00060083868;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.077905908;-0.024398865;-0.01087985;-0.0070805838;-0.0059000994;-0.0054506762;-0.0052098087;-0.0050310465;-0.0048731104;-0.0047242935;
-0.0045811925;-0.0044427528;-0.0043085944;-0.0041785128;-0.0040523657;-0.0039300313;-0.003811385;-0.0036963245;-0.0035847374;-0.0034765187;
-0.0033715679;-0.0032697865;-0.0031710742;-0.003075344;-0.0029825028;-0.0028924656;-0.002805145;-0.0027204594;-0.0026383311;-0.0025586812;
-0.0024814373;-0.0024065273;-0.0023338757;-0.0022634193;-0.0021950884;-0.002128823;-0.0020645538;-0.0020022292;-0.0019417834;-0.0018831645;
-0.0018263126;-0.0017711795;-0.0017177109;-0.0016658551;-0.0016155674;-0.0015667932;-0.0015194966;-0.0014736231;-0.0014291366;-0.0013859947;
-0.0013441528;-0.0013035738;-0.0012642225;-0.0012260558;-0.001189041;-0.001153145;-0.0011183342;-0.0010845729;-0.0010518307;-0.0010200775;
-0.0009892832;-0.00095941743;-0.00093045633;-0.00090236653;-0.00087512709;-0.00084870774;-0.0008230845;-0.00079823914;-0.00077413849;-0.00075077062;
-0.00072810525;-0.00070612435;-0.00068480679;-0.00066413445;-0.00064408325;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078053869;-0.024594355;-0.011089967;-0.0072924686;-0.0061088945;-0.0056547076;-0.0054085911;-0.0052245106;-0.0050613387;-0.0049074003;
-0.0047593093;-0.004616017;-0.0044771293;-0.0043424517;-0.0042118286;-0.0040851375;-0.0039622555;-0.0038430749;-0.0037274787;-0.0036153547;
-0.0035066081;-0.0034011293;-0.0032988261;-0.0031995992;-0.0031033559;-0.0030100078;-0.002919466;-0.0028316518;-0.0027464754;-0.0026638645;
-0.002583738;-0.0025060207;-0.0024306409;-0.002357526;-0.0022866162;-0.0022178362;-0.0021511232;-0.0020864171;-0.0020236573;-0.0019627844;
-0.0019037442;-0.0018464822;-0.0017909415;-0.0017370712;-0.00168482;-0.0016341401;-0.0015849865;-0.0015373107;-0.0014910708;-0.0014462189;
-0.0014027189;-0.0013605258;-0.0013196003;-0.0012799066;-0.0012414085;-0.0012040671;-0.0011678491;-0.0011327186;-0.0010986486;-0.0010656;
-0.0010335488;-0.0010024591;-0.0009723063;-0.00094306096;-0.00091469591;-0.00088718097;-0.00086049206;-0.00083461142;-0.00080950884;-0.0007851572;
-0.00076154171;-0.0007386381;-0.00071641948;-0.00069486763;-0.00067396788;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078154445;-0.024727268;-0.011232842;-0.0074365707;-0.0062509244;-0.005793523;-0.0055438573;-0.0053561865;-0.0051894682;-0.0050320672;
-0.0048806029;-0.0047340253;-0.0045919376;-0.0044541457;-0.0043204939;-0.0041908529;-0.0040651024;-0.003943128;-0.0038248128;-0.0037100452;
-0.0035987236;-0.0034907407;-0.0033859997;-0.0032844024;-0.0031858524;-0.0030902575;-0.002997533;-0.0029075895;-0.0028203491;-0.0027357214;
-0.0026536351;-0.0025740121;-0.0024967773;-0.0024218617;-0.0023491906;-0.0022787012;-0.0022103274;-0.0021440031;-0.0020796717;-0.0020172733;
-0.0019567416;-0.0018980287;-0.001841078;-0.0017858353;-0.0017322528;-0.0016802736;-0.0016298583;-0.0015809535;-0.0015335171;-0.001487504;
-0.0014428694;-0.0013995742;-0.0013575796;-0.0013168466;-0.0012773331;-0.0012390034;-0.0012018273;-0.0011657691;-0.0011307865;-0.0010968558;
-0.001063944;-0.0010320209;-0.001001054;-0.00097101578;-0.0009418797;-0.00091361854;-0.00088620547;-0.00085961353;-0.00083381857;-0.00080879987;
-0.00078453321;-0.00076099171;-0.00073815754;-0.0007160065;-0.0006945238;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078222975;-0.024817841;-0.011330213;-0.0075347954;-0.006347748;-0.0058881636;-0.0056360909;-0.0054459828;-0.0052768611;-0.0051171104;
-0.0049633542;-0.0048145447;-0.0046702893;-0.0045303786;-0.0043946668;-0.0042630252;-0.0041353269;-0.0040114555;-0.0038912902;-0.0037747268;
-0.0036616577;-0.0035519714;-0.0034455732;-0.0033423607;-0.0032422415;-0.0031451196;-0.0030509084;-0.0029595157;-0.0028708656;-0.0027848694;
-0.0027014485;-0.0026205257;-0.0025420289;-0.0024658837;-0.0023920175;-0.0023203655;-0.0022508581;-0.0021834332;-0.0021180299;-0.0020545835;
-0.0019930396;-0.0019333384;-0.0018754262;-0.0018192489;-0.0017647528;-0.0017118901;-0.0016606101;-0.0016108674;-0.0015626147;-0.0015158069;
-0.0014703991;-0.0014263523;-0.0013836278;-0.0013421808;-0.0013019781;-0.001262975;-0.0012251417;-0.0011884449;-0.0011528432;-0.0011183125;
-0.0010848137;-0.0010523172;-0.0010207958;-0.00099021988;-0.00096055621;-0.00093178399;-0.00090387336;-0.00087679748;-0.0008505322;-0.00082505657;
-0.0008003409;-0.00077636703;-0.00075311121;-0.00073055236;-0.00070866663;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078269795;-0.024879728;-0.011396751;-0.0076019191;-0.0064139171;-0.0059528486;-0.0056991377;-0.0055073658;-0.0053366083;-0.0051752529;
-0.0050199353;-0.0048696026;-0.0047238641;-0.0045825155;-0.0044454024;-0.0043123947;-0.0041833669;-0.0040581971;-0.0039367741;-0.0038189844;
-0.0037047209;-0.0035938723;-0.0034863406;-0.0033820299;-0.0032808357;-0.0031826715;-0.0030874442;-0.0029950675;-0.0029054547;-0.0028185223;
-0.0027341894;-0.0026523813;-0.0025730233;-0.0024960348;-0.002421353;-0.0023489061;-0.0022786257;-0.0022104487;-0.0021443095;-0.0020801516;
-0.0020179148;-0.0019575364;-0.0018989688;-0.0018421492;-0.0017870329;-0.0017335628;-0.0016816913;-0.0016313766;-0.0015825648;-0.0015352141;
-0.0014892798;-0.0014447198;-0.0014014926;-0.0013595592;-0.0013188807;-0.0012794214;-0.0012411423;-0.0012040045;-0.0011679813;-0.0011330368;
-0.001099135;-0.0010662493;-0.0010343436;-0.0010033969;-0.00097337365;-0.00094424974;-0.0009159983;-0.00088859251;-0.0008620054;-0.00083621306;
-0.00081119157;-0.00078692316;-0.00076337782;-0.00074053765;-0.00071837869;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078301854;-0.024922114;-0.01144233;-0.0076479008;-0.0064592483;-0.0059971651;-0.0057423352;-0.0055494262;-0.0053775473;-0.0052150982;
-0.0050587109;-0.0049073407;-0.0047605881;-0.0046182517;-0.0044801803;-0.0043462338;-0.0042162943;-0.004090243;-0.0039679562;-0.0038493266;
-0.0037342443;-0.0036226041;-0.0035142987;-0.0034092329;-0.0033073078;-0.0032084309;-0.0031125101;-0.0030194554;-0.002929183;-0.0028416126;
-0.0027566548;-0.0026742406;-0.0025942863;-0.002516727;-0.002441484;-0.0023684923;-0.0022976832;-0.0022289876;-0.0021623494;-0.0020977021;
-0.0020349899;-0.0019741496;-0.0019151276;-0.0018578729;-0.001802329;-0.0017484451;-0.0016961733;-0.0016454632;-0.0015962665;-0.001548545;
-0.0015022474;-0.0014573352;-0.0014137665;-0.0013714995;-0.0013304955;-0.0012907214;-0.0012521326;-0.0012146963;-0.0011783827;-0.0011431526;
-0.0011089736;-0.0010758187;-0.001043655;-0.0010124525;-0.00098218466;-0.00095281843;-0.00092433288;-0.00089669821;-0.00086988765;-0.0008438832;
-0.00081865193;-0.00079417613;-0.00077043468;-0.00074740086;-0.00072505372;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078323886;-0.024951229;-0.011473629;-0.0076794843;-0.0064903852;-0.0060276096;-0.00577201;-0.0055783237;-0.0054056756;-0.0052424753;
-0.0050853547;-0.0049332678;-0.0047858204;-0.0046428069;-0.0045040781;-0.0043694894;-0.0042389263;-0.0041122674;-0.0039893887;-0.0038701859;
-0.0037545434;-0.003642356;-0.0035335198;-0.0034279362;-0.0033255094;-0.003226141;-0.0031297416;-0.003036225;-0.0029455014;-0.00285749;
-0.0027721075;-0.0026892733;-0.0026089158;-0.0025309604;-0.0024553353;-0.002381969;-0.0023107931;-0.0022417447;-0.0021747611;-0.00210978;
-0.0020467381;-0.0019855823;-0.0019262526;-0.0018686951;-0.0018128568;-0.0017586893;-0.001706139;-0.0016551614;-0.0016057026;-0.0015577239;
-0.0015111773;-0.0014660212;-0.0014222141;-0.0013797168;-0.0013384905;-0.0012984967;-0.0012596966;-0.0012220541;-0.0011855396;-0.0011501143;
-0.0011157483;-0.0010824087;-0.0010500659;-0.0010186897;-0.00098825048;-0.00095872127;-0.00093007548;-0.00090228306;-0.00087532314;-0.00084916892;
-0.00082379644;-0.00079918187;-0.00077530439;-0.00075213704;-0.00072966202;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078339048;-0.024971271;-0.011495188;-0.0077012307;-0.0065118307;-0.0060485746;-0.005792445;-0.0055982228;-0.0054250448;-0.0052613257;
-0.0051037031;-0.0049511259;-0.0048032007;-0.0046597226;-0.0045205392;-0.0043855128;-0.004254519;-0.00412744;-0.0040041544;-0.003884556;
-0.0037685276;-0.0036559652;-0.0035467646;-0.0034408215;-0.0033380489;-0.0032383455;-0.003141616;-0.0030477769;-0.0029567417;-0.0028684265;
-0.0027827516;-0.0026996327;-0.0026189955;-0.0025407684;-0.0024648767;-0.002391252;-0.0023198258;-0.0022505354;-0.0021833146;-0.0021181016;
-0.0020548333;-0.0019934559;-0.0019339161;-0.0018761512;-0.0018201103;-0.0017657455;-0.0017130035;-0.0016618365;-0.0016121966;-0.0015640422;
-0.0015173254;-0.0014720046;-0.001428038;-0.0013853839;-0.0013440035;-0.0013038578;-0.0012649114;-0.0012271281;-0.0011904754;-0.0011549173;
-0.0011204211;-0.0010869571;-0.0010544892;-0.0010229938;-0.00099243782;-0.0009627947;-0.00093403447;-0.00090613635;-0.00087907031;-0.00085281563;
-0.00082734245;-0.00080263295;-0.00077865709;-0.00075540016;-0.00073283823;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078349523;-0.024985112;-0.011510066;-0.007716245;-0.0065266299;-0.0060630436;-0.0058065527;-0.0056119598;-0.0054384195;-0.0052743438;
-0.0051163719;-0.0049634562;-0.0048152064;-0.0046714051;-0.004531906;-0.0043965783;-0.0042652879;-0.004137923;-0.0040143593;-0.0038944855;
-0.0037781894;-0.0036653643;-0.0035559123;-0.0034497285;-0.0033467114;-0.0032467747;-0.0031498233;-0.0030557641;-0.0029645143;-0.0028759898;
-0.0027901107;-0.0027067929;-0.002625962;-0.002547547;-0.0024714756;-0.0023976732;-0.002326072;-0.0022566116;-0.0021892269;-0.002123852;
-0.0020604304;-0.0019989051;-0.0019392141;-0.0018813061;-0.0018251278;-0.0017706283;-0.0017177539;-0.0016664573;-0.0016166932;-0.0015684143;
-0.0015215785;-0.0014761444;-0.0014320642;-0.001389302;-0.001347816;-0.0013075676;-0.001268524;-0.0012306434;-0.0011938959;-0.0011582428;
-0.0011236543;-0.0010901035;-0.0010575518;-0.0010259722;-0.00099533482;-0.00096560997;-0.00093677687;-0.00090880546;-0.00088166608;-0.00085533777;
-0.0008297938;-0.00080501614;-0.00078097807;-0.00075765862;-0.00073503394;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078356765;-0.024994697;-0.011520367;-0.0077266395;-0.0065368768;-0.0060730656;-0.0058163181;-0.0056214719;-0.0054476806;-0.0052833571;
-0.0051251464;-0.0049719932;-0.0048235133;-0.004679488;-0.0045397761;-0.0044042338;-0.0042727413;-0.0041451757;-0.0040214146;-0.0039013501;
-0.0037848724;-0.0036718682;-0.0035622392;-0.0034558838;-0.0033527038;-0.0032526064;-0.0031554964;-0.0030612845;-0.0029698873;-0.002881215;
-0.0027951933;-0.0027117387;-0.0026307765;-0.0025522325;-0.0024760317;-0.0024021089;-0.0023303893;-0.0022608133;-0.0021933157;-0.0021278304;
-0.0020643012;-0.0020026679;-0.0019428742;-0.0018848695;-0.001828594;-0.001774;-0.0017210371;-0.0016696512;-0.0016198008;-0.0015714412;
-0.0015245245;-0.0014790093;-0.0014348505;-0.0013920097;-0.0013504508;-0.0013101321;-0.0012710182;-0.0012330698;-0.0011962545;-0.0011605363;
-0.0011258885;-0.0010922723;-0.0010596639;-0.0010280244;-0.00099733297;-0.00096755393;-0.00093866634;-0.00091064349;-0.00088345533;-0.00085708115;
-0.00083149108;-0.00080666429;-0.00078257988;-0.00075921696;-0.00073654874;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078361802;-0.025001334;-0.011527508;-0.0077338452;-0.0065439846;-0.0060800128;-0.0058230925;-0.0056280661;-0.0054541002;-0.0052896068;
-0.0051312251;-0.0049779159;-0.0048292754;-0.0046850983;-0.0045452341;-0.0044095484;-0.004277911;-0.0041502067;-0.0040263119;-0.0039061166;
-0.0037895108;-0.0036763835;-0.0035666311;-0.0034601581;-0.0033568628;-0.0032566499;-0.0031594301;-0.0030651139;-0.0029736119;-0.0028848434;
-0.0027987224;-0.0027151769;-0.0026341206;-0.0025554849;-0.0024791984;-0.0024051866;-0.0023333835;-0.0022637271;-0.0021961485;-0.0021305878;
-0.0020669859;-0.0020052802;-0.0019454164;-0.0018873416;-0.0018309988;-0.0017763372;-0.0017233093;-0.0016718614;-0.0016219517;-0.0015735326;
-0.0015265592;-0.0014809872;-0.0014367743;-0.0013938822;-0.001352272;-0.0013119048;-0.0012727421;-0.0012347478;-0.0011978864;-0.0011621281;
-0.001127434;-0.0010937772;-0.0010611223;-0.001029445;-0.00099871284;-0.00096889876;-0.00093997607;-0.00091191195;-0.00088469149;-0.00085827889;
-0.00083265925;-0.00080780277;-0.00078368559;-0.00076028996;-0.00073759176;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078365281;-0.025005963;-0.011532485;-0.0077388627;-0.0065489309;-0.0060848482;-0.005827805;-0.005632659;-0.005458565;-0.0052939523;
-0.0051354594;-0.0049820351;-0.0048332829;-0.0046889996;-0.0045490311;-0.0044132406;-0.004281505;-0.0041537043;-0.0040297159;-0.00390943;
-0.0037927327;-0.0036795172;-0.0035696854;-0.003463129;-0.0033597562;-0.0032594688;-0.003162174;-0.0030677826;-0.002976211;-0.0028873729;
-0.0028011848;-0.002717569;-0.0026364515;-0.0025577541;-0.0024814059;-0.0024073378;-0.0023354786;-0.0022657656;-0.0021981332;-0.0021325161;
-0.0020688628;-0.0020071089;-0.0019471969;-0.0018890734;-0.0018326846;-0.0017779802;-0.0017249063;-0.0016734153;-0.0016234652;-0.0015750056;
-0.0015279917;-0.001482382;-0.0014381313;-0.0013952041;-0.0013535587;-0.0013131533;-0.0012739582;-0.0012359286;-0.0011990347;-0.0011632438;
-0.0011285199;-0.0010948334;-0.0010621544;-0.0010304501;-0.00099968782;-0.00096984662;-0.0009408996;-0.00091281411;-0.00088556623;-0.00085913209;
-0.00083348487;-0.00080860674;-0.00078446785;-0.00076105335;-0.00073833932;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078367725;-0.025009181;-0.011535946;-0.0077423551;-0.0065523749;-0.0060882177;-0.0058310889;-0.0056358534;-0.0054616788;-0.0052969866;
-0.0051384079;-0.0049849064;-0.0048360769;-0.0046917191;-0.0045516784;-0.004415819;-0.004284014;-0.0041561434;-0.0040320884;-0.0039117406;
-0.0037949795;-0.0036817084;-0.0035718142;-0.003465205;-0.003361776;-0.0032614321;-0.0031640837;-0.0030696446;-0.0029780217;-0.0028891326;
-0.0028028961;-0.0027192349;-0.0026380715;-0.0025593282;-0.002482937;-0.0024088258;-0.0023369261;-0.0022671728;-0.0021995027;-0.0021338507;
-0.0020701569;-0.0020083678;-0.0019484238;-0.001890265;-0.0018338441;-0.0017791073;-0.0017260037;-0.001674486;-0.0016245062;-0.0015760168;
-0.001528976;-0.0014833392;-0.0014390615;-0.0013961102;-0.0013544374;-0.0013140107;-0.0012747883;-0.00123674;-0.0011998246;-0.0011640119;
-0.0011292663;-0.0010955611;-0.0010628601;-0.001031137;-0.0010003587;-0.00097049843;-0.00094153231;-0.00091342768;-0.00088616059;-0.00085971318;
-0.00083404966;-0.00080915517;-0.00078500586;-0.00076157489;-0.00073884137;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078369424;-0.025011435;-0.011538366;-0.0077447989;-0.0065547866;-0.0060905735;-0.0058333874;-0.0056380946;-0.0054638586;-0.0052991053;
-0.0051404736;-0.0049869134;-0.0048380336;-0.0046936218;-0.0045535313;-0.0044176206;-0.0042857705;-0.0041578515;-0.0040337541;-0.0039133583;
-0.0037965574;-0.0036832434;-0.0035733122;-0.0034666599;-0.0033631907;-0.0032628123;-0.0031654262;-0.0030709493;-0.0029792918;-0.0028903706;
-0.0028041049;-0.0027204116;-0.0026392159;-0.0025604402;-0.0024840194;-0.0024098787;-0.0023379494;-0.0022681691;-0.0022004724;-0.0021347962;
-0.0020710782;-0.0020092619;-0.0019492909;-0.0018911137;-0.0018346683;-0.0017799099;-0.0017267849;-0.0016752455;-0.0016252439;-0.0015767388;
-0.0015296761;-0.0014840203;-0.0014397267;-0.0013967562;-0.0013550675;-0.0013146247;-0.001275386;-0.0012373215;-0.0012003897;-0.0011645607;
-0.0011298046;-0.001096083;-0.0010633685;-0.0010316289;-0.001000837;-0.00097096601;-0.00094198331;-0.00091386796;-0.00088659313;-0.00086013187;
-0.00083445758;-0.00080955221;-0.00078538904;-0.00076194713;-0.00073920569;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078370616;-0.025013013;-0.011540061;-0.0077465135;-0.0065564709;-0.0060922238;-0.0058349944;-0.0056396574;-0.0054653818;-0.0053005884;
-0.0051419172;-0.0049883192;-0.0048394026;-0.0046949564;-0.0045548282;-0.004418883;-0.004286998;-0.0041590473;-0.0040349178;-0.0039144927;
-0.0037976594;-0.003684313;-0.0035743497;-0.0034676706;-0.0033641746;-0.0032637692;-0.0031663594;-0.0030718525;-0.002980171;-0.0028912257;
-0.0028049327;-0.0027212151;-0.002640001;-0.0025612039;-0.0024847644;-0.0024106049;-0.0023386569;-0.002268861;-0.0022011423;-0.0021354472;
-0.0020717133;-0.0020098842;-0.0019498938;-0.0018916975;-0.001835236;-0.0017804614;-0.0017273201;-0.0016757672;-0.0016257524;-0.0015772309;
-0.0015301576;-0.0014844884;-0.0014401809;-0.001397197;-0.0013554975;-0.0013150381;-0.0012757916;-0.0012377163;-0.0012007736;-0.0011649369;
-0.00113017;-0.0010964372;-0.0010637119;-0.0010319643;-0.0010011644;-0.00097128242;-0.00094229466;-0.00091417111;-0.00088688819;-0.00086041581;
-0.00083473633;-0.00080982276;-0.00078565138;-0.00076220126;-0.00073945447;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078371465;-0.025014114;-0.01154125;-0.007747707;-0.0065576518;-0.0060933772;-0.0058361185;-0.0056407526;-0.0054664477;-0.0053016255;
-0.0051429248;-0.0049893004;-0.0048403568;-0.004695884;-0.0045557288;-0.0044197594;-0.0042878506;-0.0041598785;-0.0040357253;-0.0039152759;
-0.0037984238;-0.003685059;-0.003575077;-0.0034683761;-0.0033648645;-0.0032644377;-0.003167009;-0.0030724891;-0.0029807887;-0.0028918271;
-0.0028055185;-0.0027217874;-0.0026405542;-0.0025617469;-0.0024852881;-0.0024111152;-0.002339157;-0.0022693416;-0.0022016123;-0.0021359038;
-0.0020721564;-0.0020103105;-0.0019503125;-0.0018921056;-0.0018356332;-0.0017808479;-0.0017276958;-0.0016761321;-0.0016261095;-0.0015775769;
-0.0015304927;-0.0014848154;-0.0014405;-0.0013975081;-0.0013557975;-0.0013153329;-0.0012760784;-0.001237992;-0.0012010442;-0.0011651992;
-0.0011304241;-0.0010966861;-0.0010639556;-0.0010322025;-0.0010013974;-0.00097151008;-0.0009425169;-0.00091438502;-0.00088709668;-0.00086061895;
-0.00083493406;-0.00081001507;-0.00078583817;-0.00076238555;-0.00073963334;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078372039;-0.025014892;-0.011542087;-0.0077485526;-0.0065584877;-0.0060941922;-0.0058369134;-0.005641527;-0.0054672011;-0.005302357;
-0.0051436378;-0.0049899947;-0.0048410329;-0.0046965382;-0.00455637;-0.0044203852;-0.0042884569;-0.0041604694;-0.0040362994;-0.003915837;
-0.0037989691;-0.003685588;-0.0035755928;-0.0034688786;-0.0033653476;-0.0032649103;-0.0031674681;-0.0030729349;-0.0029812208;-0.0028922488;
-0.0028059294;-0.0027221846;-0.0026409435;-0.0025621254;-0.0024856562;-0.0024114724;-0.0023395033;-0.0022696797;-0.0022019427;-0.0021362263;
-0.0020724707;-0.00201062;-0.0019506137;-0.0018923958;-0.0018359184;-0.0017811218;-0.0017279675;-0.0016763958;-0.0016263619;-0.0015778241;
-0.0015307348;-0.0014850491;-0.0014407285;-0.0013977311;-0.0013560153;-0.0013155454;-0.0012762854;-0.0012381936;-0.0012012405;-0.00116539;
-0.0011306094;-0.001096866;-0.00106413;-0.0010323714;-0.0010015607;-0.00097166788;-0.00094266923;-0.00091453479;-0.00088724087;-0.00086076354;
-0.00083507306;-0.0008101514;-0.00078597199;-0.00076251366;-0.00073975581;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078372456;-0.02501544;-0.01154268;-0.0077491496;-0.0065590753;-0.0060947672;-0.0058374731;-0.0056420742;-0.005467732;-0.0053028748;
-0.0051441421;-0.0049904832;-0.0048415074;-0.0046970057;-0.0045568245;-0.0044208257;-0.0042888871;-0.004160889;-0.0040367083;-0.0039162356;
-0.0037993565;-0.003685965;-0.0035759588;-0.0034692369;-0.0033657011;-0.0032652528;-0.0031678025;-0.0030732614;-0.0029815424;-0.0028925594;
-0.0028062316;-0.0027224792;-0.0026412269;-0.0025624009;-0.002485926;-0.0024117343;-0.0023397568;-0.0022699253;-0.00220218;-0.0021364552;
-0.0020726947;-0.0020108384;-0.0019508238;-0.0018926035;-0.0018361207;-0.0017813188;-0.001728159;-0.0016765818;-0.0016265424;-0.0015779993;
-0.0015309043;-0.0014852162;-0.0014408902;-0.0013978872;-0.001356166;-0.0013156905;-0.0012764249;-0.0012383276;-0.0012013718;-0.0011655157;
-0.0011307325;-0.0010969865;-0.0010642478;-0.0010324867;-0.0010016733;-0.00097177783;-0.00094277645;-0.00091463939;-0.00088734273;-0.00086085976;
-0.00083516951;-0.0008102422;-0.00078605994;-0.000762599;-0.00073984137;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078372762;-0.025015827;-0.011543095;-0.0077495701;-0.0065594874;-0.006095171;-0.0058378666;-0.0056424574;-0.0054681045;-0.0053032367;
-0.0051444964;-0.0049908292;-0.0048418427;-0.0046973298;-0.0045571406;-0.0044211345;-0.0042891875;-0.0041611814;-0.0040369928;-0.0039165118;
-0.003799625;-0.0036862281;-0.003576214;-0.0034694837;-0.0033659367;-0.0032654833;-0.0031680278;-0.0030734784;-0.002981754;-0.0028927627;
-0.0028064298;-0.002722672;-0.0026414145;-0.002562583;-0.0024861058;-0.0024119085;-0.0023399286;-0.0022700946;-0.0022023469;-0.0021366195;
-0.0020728535;-0.0020109916;-0.0019509746;-0.0018927457;-0.0018362603;-0.001781459;-0.0017282907;-0.0016767108;-0.0016266718;-0.0015781228;
-0.0015310255;-0.0014853347;-0.001441006;-0.0013980005;-0.0013562794;-0.0013158012;-0.00127653;-0.0012384329;-0.0012014743;-0.0011656156;
-0.0011308267;-0.001097081;-0.0010643395;-0.0010325756;-0.0010017595;-0.0009718613;-0.00094285712;-0.00091471727;-0.00088741787;-0.00086093508;
-0.00083523901;-0.00081031193;-0.00078612991;-0.00076266902;-0.00073990563;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078372955;-0.025016097;-0.011543388;-0.0077498648;-0.0065597785;-0.0060954546;-0.005838146;-0.0056427284;-0.0054683704;-0.0053034979;
-0.0051447493;-0.0049910741;-0.0048420825;-0.0046975645;-0.0045573665;-0.0044213557;-0.0042894036;-0.0041613886;-0.0040371949;-0.0039167088;
-0.0037998164;-0.0036864141;-0.0035763974;-0.003469662;-0.0033661094;-0.0032656507;-0.0031681899;-0.0030736378;-0.0029819079;-0.0028929145;
-0.0028065788;-0.0027228182;-0.0026415584;-0.0025627241;-0.0024862385;-0.0024120416;-0.0023400532;-0.0022702166;-0.0022024603;-0.0021367304;
-0.0020729615;-0.002011094;-0.0019510743;-0.0018928458;-0.0018363547;-0.0017815506;-0.0017283827;-0.0016768001;-0.0016267553;-0.0015782068;
-0.0015311065;-0.0014854131;-0.0014410815;-0.0013980733;-0.0013563465;-0.0013158685;-0.0012765975;-0.0012385007;-0.0012015364;-0.0011656807;
-0.0011308891;-0.0010971375;-0.0010643933;-0.0010326265;-0.0010018076;-0.00097191246;-0.00094290852;-0.00091476581;-0.00088746654;-0.00086097792;
-0.000835285;-0.00081035803;-0.00078617316;-0.00076270947;-0.00073994615;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078373112;-0.025016287;-0.011543592;-0.0077500734;-0.0065599848;-0.0060956567;-0.0058383425;-0.0056429203;-0.0054685571;-0.0053036786;
-0.0051449249;-0.0049912445;-0.0048422473;-0.0046977238;-0.0045575211;-0.0044215037;-0.0042895465;-0.0041615292;-0.0040373332;-0.003916841;
-0.0037999495;-0.0036865417;-0.0035765194;-0.0034697815;-0.0033662294;-0.0032657648;-0.0031683042;-0.0030737498;-0.0029820143;-0.0028930209;
-0.0028066796;-0.0027229195;-0.0026416539;-0.002562817;-0.0024863316;-0.0024121292;-0.002340141;-0.0022702985;-0.0022025455;-0.0021368098;
-0.0020730412;-0.0020111708;-0.0019511486;-0.0018929172;-0.0018364264;-0.0017816195;-0.0017284458;-0.0016768634;-0.0016268189;-0.0015782674;
-0.0015311644;-0.0014854682;-0.0014411368;-0.0013981287;-0.0013564021;-0.0013159212;-0.0012766502;-0.0012385476;-0.0012015835;-0.0011657221;
-0.0011309335;-0.001097182;-0.001064438;-0.0010326713;-0.0010018526;-0.00097195455;-0.00094294472;-0.0009148051;-0.00088750297;-0.00086101441;
-0.00083531864;-0.00081038877;-0.00078620092;-0.00076274038;-0.00073997414;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078373209;-0.025016431;-0.011543741;-0.0077502215;-0.0065601319;-0.0060958024;-0.0058384864;-0.0056430581;-0.0054686898;-0.0053038085;
-0.0051450492;-0.0049913661;-0.0048423698;-0.0046978435;-0.0045576347;-0.0044216183;-0.0042896578;-0.0041616387;-0.0040374366;-0.003916942;
-0.0038000415;-0.0036866341;-0.0035766091;-0.0034698683;-0.0033663106;-0.0032658463;-0.0031683804;-0.0030738227;-0.0029820877;-0.0028930884;
-0.0028067473;-0.0027229816;-0.0026417191;-0.0025628796;-0.0024863945;-0.0024121893;-0.0023401983;-0.0022703591;-0.002202603;-0.0021368675;
-0.0020730931;-0.002011226;-0.0019512007;-0.0018929696;-0.0018364759;-0.0017816691;-0.0017284955;-0.0016769103;-0.0016268659;-0.0015783117;
-0.0015312118;-0.0014855127;-0.0014411784;-0.0013981675;-0.0013564408;-0.0013159601;-0.0012766834;-0.0012385839;-0.0012016199;-0.0011657585;
-0.00113097;-0.0010972157;-0.0010644716;-0.001032702;-0.0010018804;-0.00097197952;-0.00094297272;-0.00091483019;-0.00088752812;-0.00086104264;
-0.00083534687;-0.00081041409;-0.00078622933;-0.00076276588;-0.00074000267;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078373291;-0.025016528;-0.011543851;-0.0077503319;-0.0065602413;-0.0060959058;-0.0058385869;-0.0056431531;-0.0054687853;-0.0053038988;
-0.0051451395;-0.0049914541;-0.0048424513;-0.0046979231;-0.0045577143;-0.0044216919;-0.0042897295;-0.0041617067;-0.004037505;-0.0039170138;
-0.0038001135;-0.0036867;-0.0035766754;-0.0034699319;-0.0033663774;-0.0032659133;-0.0031684444;-0.0030738842;-0.0029821461;-0.0028931501;
-0.0028068065;-0.0027230375;-0.0026417724;-0.0025629299;-0.0024864387;-0.0024122368;-0.002340243;-0.0022704008;-0.0022026419;-0.0021369099;
-0.0020731352;-0.0020112626;-0.0019512373;-0.0018930063;-0.0018365127;-0.0017817001;-0.0017285296;-0.0016769415;-0.0016268971;-0.001578343;
-0.0015312373;-0.0014855381;-0.0014412041;-0.0013981931;-0.0013564667;-0.001315983;-0.0012767063;-0.0012386038;-0.0012016399;-0.0011657786;
-0.0011309872;-0.0010972329;-0.0010644861;-0.0010327166;-0.0010018948;-0.00097199407;-0.00094298733;-0.00091484486;-0.00088754285;-0.0008610544;
-0.00083535875;-0.00081042596;-0.00078624126;-0.00076277484;-0.00074001169;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078373328;-0.025016598;-0.01154392;-0.007750405;-0.0065603126;-0.006095978;-0.0058386535;-0.0056432229;-0.0054688524;-0.0053039691;
-0.0051452043;-0.0049915216;-0.0048425165;-0.0046979846;-0.0045577763;-0.0044217515;-0.0042897891;-0.0041617639;-0.004037559;-0.0039170622;
-0.0038001619;-0.0036867487;-0.0035767213;-0.0034699778;-0.0033664205;-0.0032659506;-0.0031684847;-0.0030739247;-0.0029821836;-0.0028931848;
-0.0028068384;-0.0027230727;-0.0026418045;-0.0025629622;-0.0024864741;-0.0024122691;-0.0023402784;-0.0022704364;-0.0022026745;-0.0021369397;
-0.0020731653;-0.0020112926;-0.0019512674;-0.0018930334;-0.001836537;-0.0017817274;-0.0017285538;-0.0016769659;-0.0016269188;-0.0015783645;
-0.0015312589;-0.0014855599;-0.0014412258;-0.001398215;-0.0013564886;-0.001316005;-0.0012767283;-0.001238626;-0.001201662;-0.0011657978;
-0.0011310065;-0.0010972522;-0.0010645053;-0.0010327359;-0.0010019143;-0.00097201345;-0.00094300677;-0.00091486139;-0.00088755938;-0.00086107099;
-0.00083537534;-0.00081044261;-0.000786255;-0.00076278852;-0.00074002548;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
-0.078373373;-0.025016645;-0.011543974;-0.0077504576;-0.0065603629;-0.0060960264;-0.0058387052;-0.0056432718;-0.005468898;-0.0053040087;
-0.0051452471;-0.0049915588;-0.004842557;-0.0046980255;-0.004557814;-0.0044217892;-0.0042898236;-0.0041617984;-0.0040375944;-0.0039170971;
-0.0038001973;-0.0036867843;-0.0035767569;-0.0034700106;-0.0033664533;-0.0032659834;-0.0031685117;-0.0030739547;-0.0029822141;-0.002893215;
-0.0028068686;-0.0027231029;-0.0026418318;-0.0025629895;-0.0024864988;-0.0024122908;-0.0023403002;-0.0022704552;-0.0022026966;-0.0021369613;
-0.0020731841;-0.0020113117;-0.0019512865;-0.0018930526;-0.0018365533;-0.0017817437;-0.0017285703;-0.0016769824;-0.0016269322;-0.0015783781;
-0.0015312725;-0.0014855735;-0.0014412395;-0.0013982257;-0.0013564964;-0.0013160128;-0.0012767392;-0.0012386368;-0.0012016729;-0.0011658086;
-0.0011310144;-0.0010972632;-0.0010645163;-0.001032747;-0.0010019253;-0.0009720216;-0.00094301201;-0.00091486663;-0.00088756467;-0.00086107629;
-0.00083538069;-0.00081044796;-0.00078626035;-0.00076279393;-0.0007400309;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
      };
     };
     float_Data @[3] {
      name="v_m";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [5000] 0.45475382;0.30000001;0.30000001;0.30000001;0.30000001;0.37747136;0.43110231;0.46727493;0.49129361;0.30000001;
0.30000001;0.30000001;0.30000001;0.37334526;0.42410719;0.45922926;0.48352814;0.30000001;0.30000001;0.30000001;
0.30000001;0.37328428;0.42401335;0.4591291;0.48343694;0.30000001;0.30000001;0.30000001;0.30000001;0.3732838;
0.4240126;0.45912829;0.48343623;0.30000001;0.30000001;0.30000001;0.30000001;0.3732838;0.4240126;0.45912829;
0.48343623;0.30000001;0.30000001;0.30000001;0.30000001;0.3732838;0.4240126;0.45912829;0.48343623;0.30000001;
0.30000001;0.30000001;0.30000001;0.3732838;0.4240126;0.45912829;0.48343623;0.30000001;0.30000001;0.30000001;
0.30000001;0.3732838;0.4240126;0.45912829;0.48343623;0.30000001;0.30000001;0.30000001;0.30000001;0.3732838;
0.4240126;0.45912829;0.48343623;0.30000001;0.30000001;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.43649241;0.49965951;0.30000001;0.30000001;0.30000001;0.30000001;0.38490093;0.44254079;0.4809539;0.30000001;
0.30000001;0.30000001;0.30000001;0.38174218;0.43713775;0.47464889;0.30000001;0.30000001;0.30000001;0.30000001;
0.38159531;0.43689495;0.47437203;0.49977013;0.30000001;0.30000001;0.30000001;0.30000001;0.3815892;0.43688488;
0.47436059;0.49975908;0.30000001;0.30000001;0.30000001;0.30000001;0.38158906;0.43688464;0.47436032;0.49975881;
0.30000001;0.30000001;0.30000001;0.30000001;0.38158906;0.43688464;0.47436032;0.49975881;0.30000001;0.30000001;
0.30000001;0.30000001;0.38158906;0.43688464;0.47436032;0.49975881;0.30000001;0.30000001;0.30000001;0.30000001;
0.38158906;0.43688464;0.47436032;0.49975881;0.30000001;0.30000001;0.30000001;0.30000001;0.38158906;0.43688464;
0.47436032;0.49975881;0.30000001;0.30000001;0.30000001;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.44000483;0.30000001;0.30000001;0.30000001;0.30000001;0.391776;0.45367831;0.49421239;0.30000001;0.30000001;
0.30000001;0.30000001;0.38675499;0.44491217;0.48383874;0.30000001;0.30000001;0.30000001;0.30000001;0.38646996;
0.44443387;0.48328617;0.30000001;0.30000001;0.30000001;0.30000001;0.38645542;0.44440955;0.4832581;0.30000001;
0.30000001;0.30000001;0.30000001;0.38645467;0.4444083;0.48325667;0.30000001;0.30000001;0.30000001;0.30000001;
0.38645464;0.44440824;0.48325658;0.30000001;0.30000001;0.30000001;0.30000001;0.38645464;0.44440824;0.48325658;
0.30000001;0.30000001;0.30000001;0.30000001;0.38645464;0.44440824;0.48325658;0.30000001;0.30000001;0.30000001;
0.30000001;0.38645464;0.44440824;0.48325658;0.30000001;0.30000001;0.30000001;0.30000001;0.38645464;0.44440824;
0.48325658;0.30000001;0.30000001;0.30000001;0.30000001;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.44142792;0.30000001;0.30000001;0.30000001;0.30000001;0.3938885;0.4569737;0.49811161;0.30000001;0.30000001;
0.30000001;0.30000001;0.38875332;0.44799912;0.48748344;0.30000001;0.30000001;0.30000001;0.30000001;0.38844925;
0.44748721;0.48689032;0.30000001;0.30000001;0.30000001;0.30000001;0.3884328;0.44745958;0.48685837;0.30000001;
0.30000001;0.30000001;0.30000001;0.38843191;0.44745809;0.48685664;0.30000001;0.30000001;0.30000001;0.30000001;
0.38843188;0.44745803;0.48685658;0.30000001;0.30000001;0.30000001;0.30000001;0.38843188;0.44745803;0.48685658;
0.30000001;0.30000001;0.30000001;0.30000001;0.38843188;0.44745803;0.48685658;0.30000001;0.30000001;0.30000001;
0.30000001;0.38843188;0.44745803;0.48685658;0.30000001;0.30000001;0.30000001;0.30000001;0.38843188;0.44745803;
0.48685658;0.30000001;0.30000001;0.30000001;0.30000001;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.44105682;0.30000001;0.30000001;0.30000001;0.30000001;0.39333797;0.45611581;0.49709737;0.30000001;0.30000001;
0.30000001;0.30000001;0.38823217;0.44719458;0.48653397;0.30000001;0.30000001;0.30000001;0.30000001;0.3879329;
0.44669116;0.4859511;0.30000001;0.30000001;0.30000001;0.30000001;0.38791695;0.44666439;0.48592013;0.30000001;
0.30000001;0.30000001;0.30000001;0.38791609;0.44666296;0.48591849;0.30000001;0.30000001;0.30000001;0.30000001;
0.38791609;0.4466629;0.4859184;0.30000001;0.30000001;0.30000001;0.30000001;0.38791606;0.44666287;0.4859184;
0.30000001;0.30000001;0.30000001;0.30000001;0.38791606;0.44666287;0.4859184;0.30000001;0.30000001;0.30000001;
0.30000001;0.38791606;0.44666287;0.4859184;0.30000001;0.30000001;0.30000001;0.30000001;0.38791606;0.44666287;
0.4859184;0.30000001;0.30000001;0.30000001;0.30000001;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.43896112;0.30000001;0.30000001;0.30000001;0.30000001;0.39022458;0.45125207;0.49133602;0.30000001;0.30000001;
0.30000001;0.30000001;0.38529009;0.44264585;0.48116022;0.30000001;0.30000001;0.30000001;0.30000001;0.38502002;
0.4421941;0.48063973;0.30000001;0.30000001;0.30000001;0.30000001;0.3850069;0.44217226;0.48061463;0.30000001;
0.30000001;0.30000001;0.30000001;0.38500631;0.44217125;0.48061344;0.30000001;0.30000001;0.30000001;0.30000001;
0.38500625;0.44217116;0.48061335;0.30000001;0.30000001;0.30000001;0.30000001;0.38500625;0.44217116;0.48061335;
0.30000001;0.30000001;0.30000001;0.30000001;0.38500625;0.44217116;0.48061335;0.30000001;0.30000001;0.30000001;
0.30000001;0.38500625;0.44217116;0.48061335;0.30000001;0.30000001;0.30000001;0.30000001;0.38500625;0.44217116;
0.48061335;0.30000001;0.30000001;0.30000001;0.30000001;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.43524823;0.49713418;0.30000001;0.30000001;0.30000001;0.30000001;0.38307142;0.43966883;0.47753569;0.30000001;
0.30000001;0.30000001;0.30000001;0.38000914;0.43444961;0.47146645;0.49662659;0.30000001;0.30000001;0.30000001;
0.30000001;0.37987638;0.43423188;0.47121996;0.49638957;0.30000001;0.30000001;0.30000001;0.30000001;0.37987339;
0.43422699;0.47121444;0.49638426;0.30000001;0.30000001;0.30000001;0.30000001;0.37987331;0.43422684;0.47121429;
0.49638414;0.30000001;0.30000001;0.30000001;0.30000001;0.37987331;0.43422684;0.47121429;0.49638414;0.30000001;
0.30000001;0.30000001;0.30000001;0.37987331;0.43422684;0.47121429;0.49638414;0.30000001;0.30000001;0.30000001;
0.30000001;0.37987331;0.43422684;0.47121429;0.49638414;0.30000001;0.30000001;0.30000001;0.30000001;0.37987331;
0.43422684;0.47121429;0.49638414;0.30000001;0.30000001;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.43004537;0.48649144;0.30000001;0.30000001;0.30000001;0.30000001;0.37688243;0.43014154;0.46611446;0.49004996;
0.30000001;0.30000001;0.30000001;0.30000001;0.37283176;0.42331097;0.45828912;0.48252478;0.49931759;0.30000001;
0.30000001;0.30000001;0.30000001;0.3727771;0.42322761;0.4582009;0.48244506;0.49925157;0.30000001;0.30000001;
0.30000001;0.30000001;0.3727769;0.42322731;0.45820057;0.48244476;0.49925134;0.30000001;0.30000001;0.30000001;
0.30000001;0.3727769;0.42322731;0.45820057;0.48244476;0.49925134;0.30000001;0.30000001;0.30000001;0.30000001;
0.3727769;0.42322731;0.45820057;0.48244476;0.49925134;0.30000001;0.30000001;0.30000001;0.30000001;0.3727769;
0.42322731;0.45820057;0.48244476;0.49925134;0.30000001;0.30000001;0.30000001;0.30000001;0.3727769;0.42322731;
0.45820057;0.48244476;0.49925134;0.30000001;0.30000001;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.4235898;0.47310141;0.30000001;0.30000001;0.30000001;0.30000001;0.36721835;0.41469592;0.44757405;0.47021961;
0.48590007;0.49687201;0.30000001;0.30000001;0.30000001;0.30000001;0.36426201;0.41008389;0.44275707;0.46605441;
0.48266631;0.49451119;0.30000001;0.30000001;0.30000001;0.30000001;0.364263;0.41008499;0.44275784;0.46605486;
0.48266652;0.49451128;0.30000001;0.30000001;0.30000001;0.30000001;0.364263;0.41008499;0.44275784;0.46605486;
0.48266652;0.49451128;0.30000001;0.30000001;0.30000001;0.30000001;0.364263;0.41008499;0.44275784;0.46605486;
0.48266652;0.49451128;0.30000001;0.30000001;0.30000001;0.30000001;0.364263;0.41008499;0.44275784;0.46605486;
0.48266652;0.49451128;0.30000001;0.30000001;0.30000001;0.30000001;0.364263;0.41008499;0.44275784;0.46605486;
0.48266652;0.49451128;0.30000001;0.30000001;0.30000001;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.41629219;0.45771861;0.30000001;0.30000001;0.30000001;0.30000001;0.35624653;0.39714336;0.42697811;0.44922787;
0.46594051;0.47841105;0.48765755;0.49450746;0.49959219;0.30000001;0.30000001;0.30000001;0.30000001;0.35508323;
0.39600834;0.42641446;0.44900528;0.46578956;0.47825977;0.48752475;0.49440834;0.49952266;0.30000001;0.30000001;
0.30000001;0.30000001;0.35508323;0.39600834;0.42641446;0.44900528;0.46578956;0.47825977;0.48752475;0.49440834;
0.49952266;0.30000001;0.30000001;0.30000001;0.30000001;0.35508323;0.39600834;0.42641446;0.44900528;0.46578956;
0.47825977;0.48752475;0.49440834;0.49952266;0.30000001;0.30000001;0.30000001;0.30000001;0.35508323;0.39600834;
0.42641446;0.44900528;0.46578956;0.47825977;0.48752475;0.49440834;0.49952266;0.30000001;0.30000001;0.30000001;
0.30000001;0.35508323;0.39600834;0.42641446;0.44900528;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.40872529;0.44149235;0.47829118;0.30000001;0.30000001;0.30000001;0.30000001;0.34521693;0.38190025;0.410016;
0.43136579;0.44851217;0.46180058;0.47211415;0.48022923;0.48656464;0.49150693;0.49537426;0.49839699;0.30000001;
0.30000001;0.30000001;0.30000001;0.3457019;0.38142014;0.40933564;0.43115297;0.44820425;0.46153066;0.47194588;
0.48008591;0.48644772;0.49141976;0.49530566;0.49834266;0.30000001;0.30000001;0.30000001;0.30000001;0.3457019;
0.38142014;0.40933564;0.43115297;0.44820425;0.46153066;0.47194588;0.48008591;0.48644772;0.49141976;0.49530566;
0.49834266;0.30000001;0.30000001;0.30000001;0.30000001;0.3457019;0.38142014;0.40933564;0.43115297;0.44820425;
0.46153066;0.47194588;0.48008591;0.48644772;0.49141976;0.49530566;0.49834266;0.30000001;0.30000001;0.30000001;
0.30000001;0.3457019;0.38142014;0.40933564;0.43115297;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.40151569;0.4257713;0.45460689;0.48295656;0.30000001;0.30000001;0.30000001;0.30000001;0.33692005;0.3668142;
0.39166221;0.4118281;0.42890707;0.44228876;0.45440418;0.4630442;0.47198927;0.47743353;0.48393142;0.48724091;
0.49202782;0.49388322;0.49753839;0.49840456;0.30000001;0.30000001;0.30000001;0.30000001;0.33694413;0.36662915;
0.392133;0.41191435;0.42964268;0.44269291;0.45513654;0.46361187;0.4724637;0.47782966;0.48424026;0.48749292;
0.49224433;0.49406064;0.49768436;0.49852446;0.30000001;0.30000001;0.30000001;0.30000001;0.33694413;0.36662915;
0.392133;0.41191435;0.42964268;0.44269291;0.45513654;0.46361187;0.4724637;0.47782966;0.48424026;0.48749292;
0.49224433;0.49406064;0.49768436;0.49852446;0.30000001;0.30000001;0.30000001;0.30000001;0.33694413;0.36662915;
0.392133;0.41191435;0.42964268;0.44269291;0.45513654;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.39517561;0.41173586;0.43311578;0.45475611;0.47534508;0.49455824;0.30000001;0.30000001;0.30000001;0.30000001;
0.32890064;0.35248855;0.37403461;0.3912203;0.40786496;0.42012087;0.43284494;0.44158119;0.45155671;0.45757937;
0.46540597;0.46946573;0.4757542;0.47832173;0.48343146;0.48490578;0.48915696;0.48980877;0.49341127;0.49345568;
0.49658054;0.49617052;0.49893731;0.49819034;0.30000001;0.30000001;0.30000001;0.30000001;0.32856739;0.35220671;
0.37390786;0.39105725;0.40764883;0.41996861;0.43275777;0.4414835;0.45144302;0.45749414;0.46534798;0.46940878;
0.47569561;0.47827527;0.48339596;0.48487341;0.48912632;0.48978353;0.49339068;0.4934375;0.49656406;0.49615666;
0.49892563;0.49818018;0.30000001;0.30000001;0.30000001;0.30000001;0.32856736;0.35220671;0.37390786;0.39105725;
0.40764883;0.41996861;0.43275777;0.44148347;0.45144302;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.38998303;0.40009415;0.41504475;0.43071085;0.44589767;0.46028194;0.47380579;0.4864904;0.49837807;0.49906927;
0.49701539;0.49665812;0.49847713;0.4968597;0.49689317;0.49905622;0.49696407;0.49658066;0.49859554;0.30000001;
0.30000001;0.30000001;0.30000001;0.32160059;0.33942556;0.35570475;0.37135932;0.386435;0.39676026;0.40651277;
0.41683397;0.42753023;0.43316549;0.43900838;0.44617796;0.45422238;0.45676747;0.45991769;0.46489236;0.47113669;
0.47175089;0.47328493;0.47695282;0.4820984;0.48144561;0.48188117;0.48465493;0.4890649;0.48761535;0.48738021;
0.48961076;0.49356553;0.4915967;0.4909136;0.49277991;0.49643409;0.49413663;0.49317563;0.49481663;0.49828255;
0.49577212;0.49462807;0.49612033;0.4994632;0.49681735;0.49555841;0.49695748;0.30000001;0.30000001;0.30000001;
0.30000001;0.3216821;0.33946779;0.35564333;0.37119588;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.38597041;0.39100742;0.40078661;0.41152871;0.42214537;0.43233031;0.44201186;0.45118839;0.4598783;0.46810502;
0.47589254;0.48326409;0.49024183;0.49683544;0.30000001;0.30000001;0.30000001;0.30000001;0.31527176;0.32987642;
0.34387541;0.35711241;0.36620891;0.37466657;0.38346332;0.392667;0.40210974;0.41151822;0.4202522;0.42344654;
0.42655051;0.4309032;0.43642911;0.44276133;0.4494538;0.45568749;0.45560274;0.4557876;0.45772648;0.46124882;
0.46587604;0.47106433;0.47587073;0.47391006;0.47241208;0.47295806;0.47532624;0.47897422;0.48330274;0.48730427;
0.48428243;0.48183489;0.48159519;0.48331201;0.48640686;0.49024919;0.49379417;0.49016964;0.48718235;0.48649603;
0.48784265;0.49062327;0.49418956;0.4974758;0.49350944;0.49021608;0.4892765;0.49041322;0.49301565;0.49642539;
0.49956489;0.49540454;0.49193746;0.49085417;0.49187177;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.38300693;0.3842459;0.39009047;0.39701876;0.40402848;0.41083363;0.41735962;0.4235943;0.42954373;0.4352189;
0.44063187;0.44579452;0.45071843;0.45541459;0.45989355;0.46416536;0.46823958;0.47212535;0.47583139;0.479366;
0.48273715;0.48595238;0.48901883;0.4919413;0.49470109;0.49715647;0.49890605;0.49946803;0.4973833;0.49527761;
0.49406624;0.49380842;0.49429649;0.49527782;0.49649122;0.49765185;0.4984524;0.49869329;0.49839678;0.49781588;
0.49725017;0.49690107;0.49683374;0.49700937;0.4973256;0.49766225;0.49792075;0.49803224;0.49799201;0.49785355;
0.49769679;0.49758631;0.49754986;0.49758473;0.49766728;0.49776512;0.49784878;0.49789873;0.49790752;0.49788389;
0.49784693;0.49781501;0.49779895;0.49780178;0.49782011;0.4978466;0.49787319;0.49789354;0.4979046;0.49790668;
0.49790257;0.49789619;0.4978911;0.49788958;0.49789226;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.38088912;0.37938756;0.38235965;0.3864682;0.39077553;0.39501378;0.39910948;0.40304607;0.40682355;0.41044649;
0.4139207;0.41725212;0.42044657;0.42350969;0.42644686;0.42926326;0.43196386;0.43455341;0.43703651;0.43941751;
0.44170061;0.44388983;0.44598901;0.44800189;0.44993201;0.45178276;0.45355743;0.45525911;0.45689082;0.45845544;
0.45995575;0.46139437;0.46277383;0.46409658;0.46536493;0.46658114;0.46774733;0.46886557;0.46993783;0.47096601;
0.4719519;0.47289726;0.47380376;0.47467297;0.47550645;0.47630566;0.477072;0.47780684;0.47851145;0.4791871;
0.47983497;0.4804562;0.48105189;0.48162308;0.48217079;0.48269597;0.48319957;0.48368245;0.48414549;0.48458949;
0.48501521;0.48542345;0.48581487;0.48619017;0.48655;0.48689499;0.48722568;0.48754263;0.48784637;0.48813736;
0.48841602;0.48868278;0.48893806;0.48918211;0.48941517;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37941042;0.37598237;0.37691864;0.37901106;0.38136843;0.38373703;0.38604569;0.38827613;0.39042529;0.39249453;
0.39448631;0.3964034;0.39824858;0.4000245;0.40173379;0.40337893;0.40496233;0.4064863;0.40795308;0.40936482;
0.4107236;0.41203138;0.41329008;0.41450155;0.41566753;0.41678977;0.4178699;0.41890949;0.41991007;0.42087311;
0.42179999;0.42269209;0.42355072;0.42437714;0.42517254;0.42593807;0.42667487;0.42738405;0.42806661;0.42872354;
0.42935583;0.42996439;0.4305501;0.43111384;0.43165642;0.43217865;0.43268126;0.43316501;0.43363062;0.43407875;
0.43451008;0.4349252;0.43532476;0.43570933;0.43607944;0.43643567;0.43677855;0.43710855;0.43742615;0.43773183;
0.43802604;0.43830922;0.43858176;0.43884408;0.43909657;0.43933958;0.43957347;0.43979856;0.44001523;0.44022375;
0.44042447;0.44061765;0.44080359;0.44098252;0.44115475;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37839389;0.37363526;0.3731575;0.37384108;0.3748273;0.37587282;0.37690872;0.3779161;0.3788904;0.37983117;
0.38073915;0.38161537;0.38246086;0.38327673;0.38406399;0.38482365;0.3855567;0.38626403;0.38694656;0.38760516;
0.38824069;0.38885394;0.38944569;0.39001667;0.39056766;0.39109933;0.39161235;0.3921074;0.39258507;0.39304599;
0.39349076;0.39391994;0.39433408;0.3947337;0.39511931;0.39549139;0.39585045;0.3961969;0.39653122;0.3968538;
0.39716509;0.39746547;0.3977553;0.39803499;0.39830488;0.39856529;0.39881659;0.39905906;0.39929304;0.39951882;
0.39973667;0.3999469;0.40014976;0.4003455;0.40053439;0.40071663;0.4008925;0.40106219;0.40122595;0.40138397;
0.40153643;0.40168357;0.40182555;0.40196255;0.40209472;0.40222228;0.40234536;0.40246412;0.40257871;0.40268931;
0.402796;0.40289897;0.40299833;0.4030942;0.40318671;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37770122;0.37203303;0.37058499;0.37029788;0.37033537;0.37046149;0.3706091;0.37075913;0.37090623;0.37104905;
0.37118727;0.3713209;0.3714501;0.371575;0.37169573;0.37181243;0.37192523;0.37203428;0.37213969;0.37224159;
0.37234008;0.37243527;0.3725273;0.37261626;0.37270224;0.37278536;0.37286571;0.37294337;0.37301844;0.37309101;
0.37316114;0.37322894;0.37329447;0.3733578;0.37341905;0.37347823;0.37353545;0.37359077;0.37364423;0.37369591;
0.37374586;0.37379414;0.37384081;0.37388593;0.37392953;0.37397167;0.37401241;0.37405178;0.37408984;0.37412664;
0.37416223;0.37419662;0.37422985;0.37426198;0.37429303;0.37432304;0.37435207;0.37438011;0.37440723;0.37443343;
0.37445876;0.37448326;0.37450692;0.37452981;0.37455192;0.37457329;0.37459394;0.37461391;0.37463322;0.37465188;
0.37466991;0.37468734;0.37470421;0.37472051;0.37473628;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37723181;0.37094587;0.36883712;0.36788717;0.367275;0.36676967;0.36630541;0.36586317;0.36543721;0.36502552;
0.36462727;0.3642419;0.36386898;0.36350808;0.36315879;0.36282077;0.36249366;0.3621771;0.36187074;0.36157423;
0.3612873;0.3610096;0.36074087;0.36048079;0.3602291;0.35998553;0.35974979;0.35952166;0.35930088;0.35908723;
0.35888046;0.35868034;0.35848668;0.35829926;0.35811788;0.35794234;0.35777247;0.35760808;0.357449;0.35729504;
0.35714602;0.35700181;0.35686225;0.35672718;0.35659647;0.35646999;0.35634756;0.3562291;0.35611445;0.35600349;
0.35589612;0.35579219;0.35569161;0.35559428;0.35550007;0.35540891;0.35532069;0.35523531;0.3551527;0.35507274;
0.35499537;0.35492048;0.354848;0.35477787;0.35470998;0.3546443;0.35458073;0.35451922;0.35445967;0.35440207;
0.35434631;0.35429233;0.35424012;0.35418957;0.35414067;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37691459;0.37021062;0.36765394;0.36625379;0.36519951;0.36426365;0.36338142;0.36253378;0.36171475;0.36092204;
0.36015442;0.359411;0.35869098;0.3579936;0.35731816;0.35666397;0.35603037;0.35541672;0.35482234;0.35424668;
0.3536891;0.35314909;0.35262606;0.35211948;0.35162884;0.35115364;0.3506934;0.35024762;0.34981588;0.34939772;
0.34899271;0.34860045;0.34822053;0.34785256;0.34749615;0.34715098;0.34681666;0.34649286;0.34617925;0.3458755;
0.34558129;0.34529635;0.34502038;0.34475309;0.34449419;0.34424344;0.34400058;0.34376538;0.34353757;0.34331691;
0.3431032;0.34289622;0.34269574;0.34250158;0.34231353;0.34213138;0.34195498;0.34178412;0.34161863;0.34145835;
0.34130311;0.34115276;0.34100714;0.34086612;0.3407295;0.34059721;0.34046906;0.34034497;0.34022477;0.34010834;
0.33999556;0.33988634;0.33978057;0.33967811;0.33957887;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37670049;0.36971405;0.36685437;0.36514929;0.36379516;0.36256695;0.36140049;0.36027682;0.35918981;0.35813695;
0.35711682;0.35612831;0.3551704;0.35424212;0.35334256;0.35247084;0.3516261;0.35080749;0.35001418;0.34924543;
0.34850046;0.34777853;0.34707895;0.34640101;0.34574404;0.34510741;0.34449047;0.3438926;0.34331325;0.34275183;
0.34220776;0.34168053;0.34116963;0.34067452;0.34019473;0.33972979;0.33927923;0.3388426;0.3384195;0.33800948;
0.33761215;0.33722711;0.33685398;0.33649239;0.336142;0.33580244;0.33547339;0.3351545;0.33484551;0.33454606;
0.33425587;0.33397466;0.33370215;0.33343807;0.33318216;0.33293417;0.33269387;0.332461;0.33223534;0.33201665;
0.33180472;0.33159935;0.33140033;0.33120748;0.33102059;0.33083948;0.33066398;0.3304939;0.33032909;0.33016938;
0.33001462;0.32986462;0.32971928;0.32957843;0.32944193;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37655592;0.36937866;0.36631414;0.36440277;0.36284557;0.36141917;0.36005986;0.35874873;0.3574796;0.35624981;
0.35505778;0.35390225;0.35278207;0.35169616;0.35064349;0.34962299;0.34863374;0.34767473;0.34674504;0.34584379;
0.34497011;0.34412315;0.3433021;0.34250617;0.34173459;0.34098661;0.34026149;0.33955857;0.33887714;0.33821657;
0.33757618;0.3369554;0.3363536;0.33577022;0.33520466;0.33465642;0.33412492;0.3336097;0.33311024;0.33262604;
0.33215666;0.33170164;0.33126053;0.33083293;0.33041841;0.33001655;0.32962698;0.32924932;0.32888323;0.32852834;
0.32818431;0.32785079;0.32752746;0.32721403;0.3269102;0.32661566;0.32633013;0.32605332;0.32578498;0.32552487;
0.32527271;0.32502824;0.32479125;0.32456151;0.32433879;0.32412291;0.3239136;0.32371071;0.32351401;0.32332334;
0.32313851;0.32295933;0.32278565;0.32261726;0.32245404;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37645826;0.36915201;0.36594892;0.36389789;0.36220318;0.36064252;0.35915247;0.35771421;0.35632142;0.35497144;
0.35366258;0.35239348;0.35116291;0.34996969;0.3488127;0.34769082;0.34660298;0.34554815;0.34452534;0.34353358;
0.34257191;0.34163943;0.34073526;0.33985853;0.33900839;0.33818406;0.33738476;0.33660972;0.3358582;0.33512947;
0.33442286;0.3337377;0.33307335;0.33242914;0.33180448;0.33119878;0.33061147;0.33004197;0.32948977;0.32895434;
0.32843515;0.32793173;0.32744357;0.32697022;0.32651123;0.3260662;0.32563466;0.32521623;0.3248105;0.32441708;
0.32403558;0.32366568;0.32330701;0.32295921;0.32262197;0.32229498;0.32197791;0.32167044;0.32137233;0.32108325;
0.32080296;0.32053116;0.32026762;0.32001206;0.31976426;0.31952399;0.319291;0.31906509;0.31884605;0.31863365;
0.31842768;0.31822798;0.31803432;0.31784654;0.31766447;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37639216;0.36899856;0.36570165;0.36355603;0.36176813;0.36011639;0.35853767;0.35701311;0.3555364;0.35410479;
0.35271654;0.35137025;0.35006461;0.34879839;0.34757042;0.34637949;0.34522453;0.34410444;0.34301814;0.34196466;
0.34094298;0.33995214;0.33899119;0.33805928;0.33715549;0.33627898;0.33542892;0.33460453;0.33380502;0.33302966;
0.33227772;0.33154845;0.33084121;0.33015534;0.32949015;0.32884505;0.32821944;0.3276127;0.32702428;0.32645363;
0.3259002;0.32536349;0.32484296;0.32433817;0.32384861;0.32337382;0.32291338;0.32246682;0.32203376;0.32161376;
0.32120645;0.32081142;0.32042831;0.32005677;0.31969646;0.31934702;0.31900814;0.31867948;0.31836075;0.31805164;
0.31775185;0.31746113;0.31717917;0.31690574;0.31664056;0.31638336;0.31613395;0.31589204;0.31565747;0.31542996;
0.31520933;0.31499535;0.31478783;0.31458658;0.3143914;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.3763473;0.36889446;0.36553386;0.36332402;0.36147285;0.3597593;0.35812032;0.35653713;0.35500339;0.35351631;
0.35207409;0.35067528;0.34931859;0.3480027;0.34672639;0.34548846;0.34428778;0.34312323;0.34199369;0.34089813;
0.33983552;0.33880487;0.33780524;0.33683565;0.33589524;0.33498311;0.33409843;0.33324036;0.3324081;0.33160087;
0.33081794;0.33005854;0.32932198;0.32860759;0.32791469;0.32724261;0.32659075;0.32595849;0.32534525;0.32475045;
0.32417357;0.32361403;0.32307133;0.32254493;0.32203439;0.32153919;0.3210589;0.32059306;0.32014123;0.31970298;
0.31927791;0.31886563;0.31846574;0.31807789;0.3177017;0.31733683;0.31698292;0.31663969;0.31630677;0.31598386;
0.31567067;0.31536689;0.31507227;0.31478649;0.3145093;0.31424046;0.31397972;0.31372681;0.31348151;0.3132436;
0.31301284;0.31278902;0.31257191;0.31236136;0.31215712;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37631685;0.36882374;0.36541983;0.36316633;0.36127213;0.3595165;0.35783654;0.35621345;0.35464087;0.35311601;
0.35163704;0.35020247;0.34881097;0.34746122;0.34615198;0.34488201;0.34365016;0.34245527;0.34129623;0.34017196;
0.33908144;0.33802363;0.33699757;0.33600229;0.33503687;0.33410043;0.33319208;0.332311;0.33145636;0.33062735;
0.32982323;0.32904321;0.32828662;0.32755271;0.32684082;0.3261503;0.32548049;0.3248308;0.3242006;0.3235893;
0.32299635;0.32242119;0.32186329;0.32132214;0.3207972;0.32028803;0.31979415;0.31931508;0.31885037;0.31839961;
0.31796238;0.31753826;0.31712687;0.31672782;0.31634074;0.31596529;0.31560111;0.31524783;0.31490517;0.31457278;
0.31425038;0.31393763;0.31363428;0.31334004;0.31305462;0.31277776;0.31250921;0.31224871;0.31199604;0.31175095;
0.31151322;0.3112826;0.31105891;0.31084195;0.31063148;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37629607;0.36877552;0.36534211;0.36305884;0.36113527;0.35935098;0.35764307;0.35599276;0.35439372;0.35284308;
0.35133904;0.3498801;0.34846485;0.347092;0.34576029;0.34446847;0.34321535;0.34199974;0.34082055;0.33967671;
0.33856711;0.33749077;0.33644664;0.33543381;0.33445132;0.33349824;0.33257371;0.3316769;0.33080694;0.32996303;
0.32914442;0.32835031;0.32758;0.32683277;0.32610792;0.32540476;0.32472268;0.32406104;0.32341921;0.32279661;
0.32219267;0.32160681;0.32103851;0.32048723;0.31995246;0.31943369;0.31893048;0.31844234;0.31796882;0.31750947;
0.3170639;0.31663167;0.31621239;0.31580567;0.31541112;0.3150284;0.31465715;0.31429702;0.31394768;0.3136088;
0.31328008;0.31296119;0.31265187;0.31235179;0.31206071;0.31177837;0.31150445;0.31123877;0.31098104;0.31073102;
0.31048849;0.31025323;0.31002501;0.30980363;0.30958888;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37628189;0.36874259;0.36528903;0.36298543;0.36104181;0.35923791;0.35751089;0.35584199;0.35422483;0.35265657;
0.35113537;0.34965974;0.34822828;0.34683964;0.34549254;0.34418577;0.34291807;0.34168831;0.34049535;0.33933809;
0.33821544;0.33712637;0.33606991;0.33504504;0.33405083;0.3330864;0.33215082;0.33124322;0.33036277;0.32950866;
0.32868013;0.32787639;0.32709667;0.32634029;0.32560655;0.32489476;0.32420427;0.32353443;0.32288465;0.3222543;
0.32164282;0.32104963;0.32047418;0.31991595;0.31937441;0.31884909;0.3183395;0.31784514;0.31736556;0.31690034;
0.31644905;0.31601125;0.31558657;0.31517458;0.31477493;0.31438723;0.31401113;0.31364629;0.31329235;0.312949;
0.31261593;0.31229281;0.31197938;0.31167531;0.31138036;0.31109422;0.31081665;0.31054738;0.31028616;0.31003276;
0.30978695;0.3095485;0.30931717;0.30909276;0.30887508;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37627217;0.36872002;0.36525264;0.3629351;0.36097774;0.35916042;0.35742033;0.35573867;0.35410911;0.35252878;
0.35099584;0.34950876;0.34806615;0.34666669;0.34530905;0.34399199;0.34271434;0.34147486;0.34027246;0.33910599;
0.3379744;0.33687663;0.3358117;0.33477861;0.33377638;0.33280414;0.33186096;0.33094597;0.33005834;0.32919723;
0.32836187;0.32755148;0.32676533;0.32600269;0.32526284;0.32454512;0.32384884;0.3231734;0.32251814;0.32188249;
0.32126582;0.32066759;0.32008725;0.31952426;0.3189781;0.31844828;0.31793427;0.31743565;0.31695193;0.31648266;
0.31602743;0.31558582;0.31515741;0.31474182;0.31433865;0.31394753;0.31356809;0.3132;0.31284291;0.31249648;
0.31216043;0.31183442;0.31151816;0.31121135;0.31091371;0.31062499;0.31034487;0.31007314;0.30980954;0.3095538;
0.30930573;0.30906507;0.3088316;0.3086051;0.3083854;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.3762655;0.36870453;0.36522767;0.36290056;0.36093378;0.35910723;0.35735813;0.35566774;0.35402966;0.35244101;
0.35089999;0.34940505;0.34795481;0.3465479;0.34518301;0.34385893;0.34257442;0.34132826;0.34011936;0.33894658;
0.33780885;0.33670509;0.33563432;0.33459556;0.33358783;0.33261022;0.33166182;0.33074176;0.32984918;0.32898328;
0.32814324;0.32732829;0.32653773;0.32577077;0.32502672;0.32430491;0.32360467;0.32292536;0.32226634;0.32162702;
0.3210068;0.32040513;0.31982142;0.31925514;0.3187058;0.31817287;0.31765586;0.31715429;0.31666771;0.31619567;
0.31573772;0.31529346;0.31486249;0.31444439;0.31403878;0.3136453;0.31326357;0.31289324;0.31253397;0.31218547;
0.31184736;0.31151935;0.31120116;0.31089246;0.31059298;0.31030247;0.31002063;0.30974722;0.30948198;0.30922467;
0.30897504;0.30873287;0.30849794;0.30827001;0.3080489;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37626091;0.36869386;0.36521047;0.36287677;0.3609035;0.3590706;0.3573153;0.35561886;0.35397491;0.35238057;
0.35083398;0.34933364;0.34787813;0.34646609;0.34509623;0.34376729;0.34247804;0.34122729;0.34001392;0.33883679;
0.33769482;0.33658695;0.33551216;0.3344695;0.33345798;0.33247665;0.33152464;0.33060107;0.32970509;0.32883587;
0.32799262;0.32717454;0.32638091;0.32561097;0.32486403;0.32413942;0.32343644;0.32275447;0.32209286;0.32145101;
0.32082832;0.32022426;0.31963822;0.31906968;0.31851813;0.31798306;0.31746396;0.31696036;0.31647182;0.31599787;
0.31553808;0.31509203;0.3146593;0.31423947;0.31383219;0.31343707;0.31305376;0.31268191;0.31232116;0.31197119;
0.31163168;0.3113023;0.31098276;0.31067276;0.31037202;0.31008026;0.30979723;0.30952263;0.30925626;0.30899784;
0.30874714;0.30850393;0.30826798;0.30803907;0.30781698;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37625772;0.36868647;0.36519858;0.36286032;0.36088255;0.35904527;0.35728571;0.35558513;0.35393712;0.35233882;
0.35078841;0.34928435;0.3478252;0.34640962;0.34503633;0.34370404;0.34241155;0.34115764;0.33994117;0.33876103;
0.33761612;0.33650541;0.33542785;0.33438247;0.33336833;0.33238447;0.33142999;0.330504;0.32960567;0.32873416;
0.32788867;0.32706842;0.32627267;0.3255007;0.32475176;0.32402518;0.3233203;0.32263649;0.32197309;0.3213295;
0.32070515;0.32009941;0.31951177;0.31894168;0.31838861;0.31785205;0.31733152;0.31682652;0.3163366;0.31586131;
0.31540024;0.31495294;0.31451899;0.314098;0.31368956;0.31329334;0.31290895;0.31253603;0.31217423;0.31182325;
0.31148276;0.31115243;0.31083196;0.31052107;0.31021944;0.30992684;0.30964297;0.30936757;0.30910039;0.3088412;
0.30858976;0.30834582;0.30810916;0.30787957;0.30765682;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37625554;0.3686814;0.36519039;0.36284897;0.3608681;0.35902777;0.35726526;0.35556179;0.35391098;0.35230997;
0.35075688;0.34925023;0.34778854;0.34637052;0.34499484;0.34366024;0.34236547;0.34110937;0.33989075;0.33870852;
0.33756158;0.33644888;0.33536941;0.33432218;0.33330622;0.33232057;0.33136436;0.33043671;0.32953674;0.32866365;
0.32781661;0.32699487;0.32619765;0.32542425;0.32467395;0.32394603;0.32323986;0.32255477;0.32189012;0.32124531;
0.32061976;0.3200129;0.31942415;0.31885299;0.31829888;0.3177613;0.31723976;0.31673381;0.31624296;0.31576678;
0.31530482;0.31485662;0.3144218;0.31399998;0.31359076;0.31319377;0.3128086;0.31243494;0.31207243;0.31172076;
0.31137958;0.3110486;0.31072748;0.31041595;0.31011373;0.30982053;0.3095361;0.30926016;0.30899245;0.30873272;
0.30848074;0.3082363;0.30799916;0.30776909;0.3075459;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37625399;0.36867782;0.36518463;0.36284104;0.36085802;0.35901558;0.35725102;0.35554555;0.3538928;0.35228989;
0.35073498;0.34922653;0.34776312;0.3463434;0.34496605;0.34362984;0.3423335;0.34107587;0.33985576;0.3386721;
0.33752376;0.33640969;0.33532888;0.33428034;0.3332631;0.33227623;0.33131883;0.33039001;0.3294889;0.32861471;
0.32776663;0.32694384;0.32614562;0.32537124;0.32461995;0.3238911;0.32318401;0.32249802;0.32183254;0.3211869;
0.32056054;0.31995288;0.31936336;0.31879142;0.31823656;0.31769827;0.31717604;0.3166694;0.3161779;0.31570107;
0.31523848;0.31478968;0.3143543;0.31393191;0.31352213;0.3131246;0.31273893;0.31236476;0.31200176;0.31164959;
0.31130794;0.31097648;0.31065491;0.31034297;0.31004032;0.30974671;0.30946186;0.30918553;0.30891743;0.30865735;
0.30840504;0.30816025;0.30792275;0.30769235;0.30746883;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37625295;0.36867538;0.3651807;0.36283559;0.36085105;0.35900715;0.35724115;0.35553429;0.35388017;0.35227594;
0.35071975;0.34921005;0.34774542;0.3463245;0.344946;0.34360865;0.34231123;0.34105253;0.33983141;0.33864674;
0.33749741;0.33638242;0.33530068;0.33425125;0.33323315;0.33224544;0.33128721;0.33035758;0.3294557;0.32858074;
0.32773191;0.32690841;0.3261095;0.32533443;0.32458249;0.32385299;0.32314527;0.32245868;0.32179257;0.32114637;
0.32051945;0.31991124;0.31932119;0.31874874;0.31819338;0.31765458;0.31713188;0.31662479;0.31613284;0.31565556;
0.31519252;0.31474331;0.31430751;0.31388474;0.31347457;0.31307665;0.31269059;0.31231606;0.31195271;0.31160021;
0.31125823;0.31092647;0.3106046;0.31029233;0.30998939;0.30969551;0.30941039;0.30913377;0.30886543;0.30860507;
0.3083525;0.30810747;0.30786976;0.30763915;0.30741543;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.3762522;0.36867365;0.3651779;0.36283174;0.36084616;0.35900125;0.35723424;0.35552642;0.35387138;0.35226622;
0.35070914;0.34919855;0.34773308;0.34631136;0.34493205;0.34359393;0.34229574;0.34103629;0.33981445;0.33862907;
0.33747908;0.3363634;0.33528104;0.33423099;0.33321226;0.33222395;0.33126515;0.33033496;0.32943252;0.32855701;
0.32770765;0.32688364;0.32608423;0.32530868;0.32455626;0.32382631;0.32311815;0.32243112;0.32176459;0.32111797;
0.32049066;0.31988207;0.31929162;0.31871882;0.3181631;0.31762397;0.31710094;0.31659353;0.31610125;0.31562367;
0.31516033;0.31471083;0.31427476;0.31385168;0.31344125;0.31304306;0.31265676;0.312282;0.31191841;0.31156567;
0.31122348;0.31089148;0.31056941;0.31025693;0.30995378;0.30965969;0.30937436;0.30909756;0.30882904;0.30856851;
0.30831575;0.30807057;0.30783269;0.3076019;0.30737799;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.3762517;0.36867246;0.36517599;0.36282909;0.36084279;0.35899717;0.35722947;0.35552096;0.35386524;0.35225946;
0.35070175;0.34919056;0.3477245;0.34630218;0.34492233;0.34358367;0.34228495;0.34102499;0.33980265;0.33861679;
0.33746633;0.3363502;0.33526739;0.33421689;0.33319774;0.33220902;0.3312498;0.33031923;0.32941642;0.32854056;
0.32769084;0.32686648;0.3260667;0.3252908;0.32453805;0.32380778;0.32309932;0.32241198;0.32174519;0.32109827;
0.32047066;0.3198618;0.31927112;0.31869805;0.31814209;0.31760272;0.31707945;0.3165718;0.31607932;0.31560153;
0.31513798;0.31468827;0.31425199;0.31382874;0.31341812;0.31301975;0.31263328;0.31225833;0.31189457;0.31154168;
0.31119931;0.31086716;0.31054494;0.31023231;0.30992901;0.30963477;0.30934933;0.30907241;0.30880374;0.30854309;
0.30829021;0.30804488;0.30780688;0.307576;0.30735201;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37625134;0.36867163;0.36517465;0.36282721;0.36084041;0.35899428;0.3572261;0.35551712;0.35386094;0.35225472;
0.35069656;0.34918496;0.34771848;0.34629577;0.34491551;0.34357646;0.34227738;0.34101707;0.33979437;0.33860815;
0.33745733;0.33634087;0.33525774;0.33420694;0.33318749;0.33219847;0.33123896;0.33030808;0.32940501;0.32852888;
0.32767889;0.32685429;0.32605428;0.32527816;0.32452521;0.32379472;0.32308605;0.32239851;0.32173151;0.32108441;
0.32045662;0.31984755;0.31925666;0.31868342;0.31812727;0.31758773;0.31706432;0.31655651;0.31606385;0.31558591;
0.31512222;0.31467238;0.31423596;0.31381255;0.31340179;0.3130033;0.31261671;0.31224164;0.31187779;0.31152478;
0.31118229;0.31085002;0.31052768;0.31021497;0.30991158;0.30961725;0.30933172;0.3090547;0.30878595;0.3085252;
0.30827224;0.30802685;0.30778876;0.30755779;0.30733371;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37625107;0.36867103;0.36517367;0.36282587;0.36083871;0.35899222;0.35722369;0.35551438;0.35385787;0.35225132;
0.35069287;0.34918097;0.34771419;0.34629118;0.34491065;0.34357134;0.34227198;0.3410114;0.33978847;0.33860201;
0.33745098;0.33633429;0.33525094;0.33419994;0.33318028;0.33219105;0.33123136;0.3303003;0.32939702;0.32852072;
0.32767054;0.32684577;0.3260456;0.32526931;0.32451621;0.32378557;0.32307673;0.32238904;0.32172188;0.32107463;
0.3204467;0.31983751;0.3192465;0.31867313;0.31811687;0.31757721;0.31705368;0.31654575;0.316053;0.31557494;
0.31511116;0.3146612;0.31422469;0.3138012;0.31339034;0.31299177;0.31260508;0.31222993;0.31186599;0.31151289;
0.31117034;0.31083801;0.31051561;0.31020284;0.30989939;0.309605;0.30931938;0.3090423;0.30877349;0.30851269;
0.30825967;0.30801421;0.30777609;0.30754507;0.30732092;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37625089;0.36867061;0.36517301;0.36282498;0.36083755;0.35899082;0.35722205;0.3555125;0.35385576;0.352249;
0.35069031;0.34917819;0.34771121;0.34628803;0.34490731;0.34356779;0.34226826;0.3410075;0.33978438;0.33859777;
0.33744657;0.33632973;0.33524621;0.33419502;0.33317521;0.33218583;0.33122599;0.33029479;0.32939139;0.32851496;
0.32766467;0.32683977;0.32603949;0.32526308;0.32450986;0.32377911;0.32307017;0.32238239;0.32171515;0.32106781;
0.32043979;0.31983051;0.31923941;0.31866595;0.3181096;0.31756988;0.31704625;0.31653824;0.3160454;0.31556728;
0.31510341;0.3146534;0.31421682;0.31379327;0.31338236;0.31298372;0.31259698;0.31222177;0.31185776;0.3115046;
0.31116199;0.31082961;0.31050715;0.31019431;0.30989081;0.30959636;0.3093107;0.30903357;0.30876473;0.3085039;
0.30825084;0.30800533;0.30776715;0.3075361;0.30731192;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37625077;0.36867034;0.36517256;0.36282435;0.36083674;0.35898983;0.35722092;0.35551119;0.3538543;0.35224736;
0.35068852;0.34917626;0.34770915;0.34628582;0.34490496;0.34356532;0.34226567;0.34100479;0.33978155;0.33859482;
0.3374435;0.33632654;0.33524293;0.33419165;0.33317176;0.33218229;0.33122236;0.33029106;0.32938758;0.32851103;
0.32766065;0.32683566;0.32603529;0.32525879;0.32450548;0.32377464;0.32306561;0.32237774;0.32171041;0.32106301;
0.32043493;0.31982559;0.31923443;0.31866091;0.31810451;0.31756473;0.31704104;0.31653297;0.31604007;0.31556189;
0.31509799;0.31464791;0.31421128;0.31378767;0.31337669;0.312978;0.3125912;0.31221595;0.31185189;0.3114987;
0.31115606;0.31082365;0.31050116;0.31018829;0.30988476;0.30959028;0.30930459;0.30902743;0.30875853;0.30849767;
0.30824459;0.30799904;0.30776083;0.30752975;0.30730554;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37625068;0.36867014;0.36517224;0.36282387;0.36083615;0.35898912;0.35722008;0.35551023;0.35385323;0.3522462;
0.35068727;0.34917489;0.34770766;0.34628424;0.34490329;0.34356356;0.34226382;0.34100285;0.33977953;0.33859271;
0.3374413;0.33632424;0.33524054;0.33418918;0.33316919;0.33217967;0.33121964;0.33028829;0.32938471;0.32850811;
0.32765767;0.32683262;0.32603219;0.32525566;0.32450229;0.32377142;0.32306236;0.32237446;0.3217071;0.32105964;
0.3204315;0.3198221;0.31923088;0.31865734;0.3181009;0.31756106;0.31703734;0.31652924;0.31603631;0.31555811;
0.31509417;0.31464407;0.3142074;0.31378376;0.31337276;0.31297404;0.3125872;0.31221193;0.31184784;0.31149462;
0.31115195;0.31081951;0.31049699;0.31018409;0.30988052;0.30958602;0.3093003;0.30902311;0.30875421;0.30849332;
0.30824021;0.30799466;0.30775645;0.30752534;0.30730113;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37625062;0.36866999;0.365172;0.36282355;0.36083573;0.35898861;0.35721949;0.35550958;0.35385251;0.35224539;
0.35068637;0.34917393;0.34770665;0.34628314;0.34490213;0.34356233;0.34226251;0.34100148;0.3397781;0.33859122;
0.33743975;0.33632267;0.3352389;0.33418748;0.33316743;0.33217785;0.3312178;0.33028638;0.32938278;0.32850614;
0.32765567;0.32683057;0.32603011;0.32525352;0.32450011;0.32376918;0.32306007;0.32237211;0.32170469;0.3210572;
0.32042903;0.3198196;0.31922835;0.31865478;0.31809831;0.31755844;0.31703469;0.31652656;0.3160336;0.31555536;
0.3150914;0.31464127;0.31420457;0.3137809;0.3133699;0.31297114;0.31258431;0.31220901;0.31184492;0.31149167;
0.31114897;0.3108165;0.31049395;0.31018102;0.30987746;0.30958295;0.3092972;0.30902001;0.30875108;0.30849019;
0.30823708;0.3079915;0.30775326;0.30752215;0.30729792;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37625057;0.36866987;0.36517182;0.36282331;0.36083543;0.35898826;0.35721907;0.3555091;0.35385197;0.35224479;
0.35068572;0.34917322;0.34770587;0.3462823;0.34490123;0.34356138;0.34226152;0.34100047;0.33977702;0.33859012;
0.33743861;0.33632147;0.33523768;0.33418623;0.33316615;0.33217654;0.33121645;0.33028501;0.32938138;0.32850471;
0.32765421;0.32682908;0.32602859;0.32525197;0.32449853;0.32376757;0.32305843;0.32237047;0.32170302;0.3210555;
0.3204273;0.31981784;0.31922659;0.31865299;0.31809649;0.31755659;0.31703281;0.31652468;0.31603169;0.31555343;
0.31508943;0.3146393;0.31420261;0.31377894;0.3133679;0.31296915;0.31258228;0.31220695;0.31184283;0.31148958;
0.31114689;0.31081441;0.31049186;0.31017894;0.30987534;0.3095808;0.30929506;0.30901784;0.3087489;0.30848798;
0.30823484;0.30798927;0.30775103;0.30751988;0.30729565;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37625054;0.36866981;0.3651717;0.36282316;0.36083525;0.35898805;0.3572188;0.35550877;0.35385159;0.35224438;
0.35068527;0.34917274;0.34770536;0.34628177;0.34490067;0.34356079;0.3422609;0.34099978;0.33977631;0.33858934;
0.33743781;0.33632064;0.33523682;0.33418533;0.33316523;0.33217558;0.33121547;0.330284;0.32938033;0.32850364;
0.32765311;0.32682797;0.32602745;0.32525083;0.32449737;0.32376641;0.32305726;0.32236928;0.32170182;0.32105428;
0.32042608;0.31981662;0.31922534;0.31865171;0.31809521;0.31755531;0.31703153;0.31652337;0.31603038;0.31555212;
0.31508812;0.31463796;0.31420124;0.31377754;0.3133665;0.31296772;0.31258085;0.31220552;0.3118414;0.31148815;
0.31114542;0.31081295;0.31049037;0.31017742;0.30987382;0.30957928;0.30929354;0.30901632;0.30874738;0.30848646;
0.30823332;0.30798775;0.30774951;0.30751836;0.30729413;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37625054;0.36866978;0.36517164;0.36282307;0.36083511;0.35898787;0.35721859;0.35550854;0.35385132;0.35224408;
0.35068494;0.34917238;0.34770498;0.34628135;0.34490022;0.34356031;0.34226039;0.34099928;0.3397758;0.33858883;
0.33743727;0.3363201;0.33523625;0.33418477;0.33316466;0.33217499;0.33121485;0.33028337;0.32937971;0.32850298;
0.32765242;0.32682726;0.32602671;0.32525006;0.3244966;0.32376561;0.32305643;0.32236844;0.32170099;0.32105345;
0.32042521;0.31981573;0.31922445;0.31865081;0.31809428;0.31755438;0.31703058;0.31652242;0.31602943;0.31555113;
0.31508711;0.31463695;0.31420022;0.31377652;0.31336546;0.31296667;0.31257978;0.31220445;0.31184033;0.31148705;
0.31114432;0.31081182;0.31048924;0.31017628;0.30987269;0.30957815;0.30929241;0.30901518;0.30874622;0.3084853;
0.30823216;0.30798659;0.30774832;0.30751717;0.30729294;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37625051;0.36866972;0.36517155;0.36282295;0.36083499;0.35898772;0.35721844;0.35550839;0.35385117;0.3522439;
0.35068476;0.34917217;0.34770474;0.34628111;0.34489995;0.34356004;0.34226009;0.34099895;0.33977544;0.33858845;
0.33743688;0.33631968;0.33523583;0.33418432;0.33316419;0.33217451;0.33121437;0.33028287;0.32937917;0.32850245;
0.32765189;0.32682672;0.32602617;0.32524952;0.32449606;0.32376507;0.32305589;0.32236788;0.32170039;0.32105285;
0.32042462;0.31981513;0.31922382;0.31865019;0.31809366;0.31755373;0.31702992;0.31652176;0.31602874;0.31555045;
0.31508642;0.31463626;0.31419954;0.31377584;0.31336477;0.31296599;0.3125791;0.31220376;0.31183961;0.31148633;
0.31114361;0.3108111;0.31048852;0.31017557;0.30987197;0.30957744;0.30929166;0.30901444;0.30874547;0.30848455;
0.30823141;0.30798581;0.30774754;0.3075164;0.30729213;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37625051;0.36866969;0.36517152;0.36282289;0.3608349;0.35898763;0.35721833;0.35550824;0.35385099;0.35224372;
0.35068455;0.34917197;0.34770453;0.34628087;0.34489971;0.34355977;0.34225982;0.34099868;0.33977517;0.33858818;
0.33743662;0.33631942;0.33523554;0.33418402;0.33316389;0.33217418;0.33121404;0.33028254;0.32937884;0.32850212;
0.32765156;0.32682636;0.32602581;0.32524914;0.32449564;0.32376465;0.32305548;0.32236746;0.32169998;0.3210524;
0.32042417;0.31981468;0.31922337;0.31864971;0.31809318;0.31755325;0.31702945;0.31652126;0.31602824;0.31554994;
0.31508592;0.31463575;0.314199;0.3137753;0.31336424;0.31296545;0.31257856;0.31220323;0.31183907;0.3114858;
0.31114307;0.31081057;0.31048799;0.31017503;0.30987141;0.30957684;0.30929106;0.30901384;0.30874488;0.30848396;
0.30823082;0.30798522;0.30774695;0.3075158;0.30729154;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
      };
     };
     float_Data @[4] {
      name="act";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [5000] 0;0.29557005;0.50049078;0.64122868;0.73662817;0.80010176;0.84131175;0.86730355;0.88320464;0.89265746;
0.89814079;0.9012605;0.90301019;0.90398151;0.90451688;0.90481067;0.904971;0.90505832;0.90510577;0.90513158;
0.90514559;0.90515316;0.90515727;0.90515953;0.90516073;0.90516138;0.90516174;0.90516192;0.90516204;0.9051621;
0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;
0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;
0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;
0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;
0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0.29517588;0.50098288;0.64317262;0.7405619;0.80659312;0.85085613;0.88018167;0.89939815;0.91187191;
0.91990781;0.92505527;0.92833918;0.93042797;0.93175405;0.93259495;0.93312764;0.933465;0.93367869;0.93381381;
0.93389922;0.93395323;0.93398738;0.93400902;0.93402267;0.93403131;0.93403679;0.93404025;0.93404239;0.93404377;
0.93404466;0.9340452;0.93404555;0.93404579;0.93404591;0.93404603;0.93404609;0.93404615;0.93404615;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0.29575369;0.50198293;0.64467382;0.74272704;0.80960417;0.85485971;0.88524997;0.90551776;0.91895711;
0.92782855;0.9336651;0.93749553;0.94000518;0.94164759;0.94272149;0.94342345;0.94388199;0.9441815;0.94437706;
0.9445048;0.94458824;0.94464272;0.94467831;0.94470155;0.94471675;0.94472665;0.94473314;0.94473737;0.94474012;
0.9447419;0.9447431;0.94474387;0.94474435;0.94474471;0.94474494;0.94474506;0.94474518;0.94474524;0.9447453;
0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;
0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;
0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;
0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0.29596561;0.50234872;0.64521724;0.74349833;0.81065732;0.85623533;0.8869648;0.90756327;0.92130464;
0.93043756;0.9364906;0.94049442;0.94313914;0.94488424;0.94603509;0.94679356;0.94729346;0.94762278;0.94783962;
0.94798249;0.94807655;0.94813854;0.94817936;0.94820625;0.94822395;0.94823557;0.94824326;0.94824833;0.94825166;
0.94825387;0.9482553;0.94825625;0.94825685;0.94825727;0.94825757;0.94825774;0.94825786;0.94825792;0.94825798;
0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;
0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;
0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;
0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0.29591149;0.50225532;0.64507872;0.74330235;0.81039071;0.85588825;0.8865335;0.90704995;0.92071676;
0.92978495;0.9357844;0.93974525;0.94235635;0.94407588;0.94520754;0.94595194;0.94644147;0.94676322;0.94697475;
0.94711381;0.94720519;0.94726527;0.94730479;0.94733071;0.94734776;0.94735897;0.94736636;0.94737124;0.9473744;
0.94737649;0.94737786;0.94737875;0.94737935;0.94737977;0.94738007;0.94738024;0.94738036;0.94738042;0.94738048;
0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;
0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;
0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;
0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0.29559052;0.50170088;0.64425278;0.74212492;0.80877507;0.85376799;0.88387924;0.90387344;0.91706228;
0.92571694;0.93137401;0.93506134;0.93746001;0.93901831;0.94002974;0.94068593;0.94111133;0.94138706;0.94156575;
0.94168156;0.94175667;0.9418053;0.94183683;0.94185728;0.94187051;0.94187909;0.94188464;0.94188827;0.9418906;
0.94189209;0.9418931;0.94189376;0.94189417;0.94189447;0.94189465;0.94189477;0.94189483;0.94189489;0.94189489;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0.29494992;0.50059074;0.64257777;0.73968965;0.80535656;0.84918118;0.87802708;0.8967647;0.90879679;
0.91645157;0.92128748;0.92432684;0.92623049;0.92741996;0.92816198;0.92862439;0.92891252;0.92909193;0.92920351;
0.92927295;0.9293161;0.92934293;0.92935961;0.92936999;0.92937642;0.92938042;0.92938292;0.92938447;0.92938542;
0.92938602;0.92938638;0.92938662;0.92938679;0.92938691;0.92938697;0.92938703;0.92938703;0.92938703;0.92938703;
0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;
0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;
0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;
0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0.0086449813;0.30161712;0.50461346;0.64392459;0.73823482;0.80084008;0.84133047;0.86671722;0.8821187;
0.89117569;0.89636123;0.89926749;0.9008711;0.90174568;0.9022181;0.90247226;0.90260857;0.90268159;0.90272063;
0.90274143;0.90275246;0.9027583;0.9027614;0.90276301;0.9027639;0.90276438;0.90276462;0.90276474;0.9027648;
0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;
0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;
0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;
0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;
0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0.29440877;0.49792808;0.6365099;0.72841156;0.78647691;0.82017887;0.83721298;0.84416634;
0.84613317;0.84623212;0.84590584;0.84562773;0.84547412;0.84540886;0.84538811;0.84538484;0.84538633;0.84538823;
0.84538937;0.8453899;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;
0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;
0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;
0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;
0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;
0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0.29246145;0.49363241;0.62796557;0.71111709;0.75134575;0.7549324;0.74260789;0.73704261;
0.7372539;0.73839116;0.73882729;0.73878413;0.73867929;0.73864371;0.73864961;0.7386592;0.73866206;0.73866135;
0.73866045;0.73866022;0.73866034;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;
0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;
0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;
0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;
0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;
0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0.29041293;0.4873932;0.61064863;0.65342414;0.53121901;0.59445852;0.61122668;
0.58537704;0.59472305;0.59589791;0.59347981;0.59419644;0.59440482;0.59418988;0.59422278;0.5942542;0.59423673;
0.59423655;0.59424013;0.59423876;0.5942387;0.59423894;0.59423882;0.59423888;0.59423876;0.59423888;0.59423876;
0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;
0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;
0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;
0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;
0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;4.0245327e-06;0.28642666;0.47439623;0.54739439;0.38151747;0.46043223;0.43414611;
0.45186087;0.42822081;0.45958713;0.41381013;0.46941873;0.39861816;0.47454485;0.3975513;0.47449577;0.39840907;
0.47430557;0.39815226;0.47438586;0.39817348;0.47437543;0.39817899;0.47437462;0.39817685;0.47437522;0.39817685;
0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;
0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;
0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;
0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;
0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0.014555807;0.28904417;0.44496003;0.31012365;0.22210646;
0.37021148;0.25915375;0.35582095;0.24992394;0.36274347;0.25372744;0.3591775;0.25168985;0.36115;0.25281149;
0.36011109;0.25221646;0.36066383;0.25253248;0.36038104;0.25236982;0.36052471;0.25245252;0.36045179;0.25241056;
0.36048874;0.25243181;0.36047006;0.25242108;0.36047953;0.25242651;0.36047471;0.25242376;0.36047709;0.25242513;
0.36047596;0.25242448;0.36047643;0.25242475;0.36047623;0.25242463;0.3604764;0.25242472;0.36047634;0.25242469;
0.36047632;0.25242466;0.36047632;0.25242466;0.36047632;0.25242466;0.36047632;0.25242466;0.36047632;0.25242466;
0.36047632;0.25242466;0.36047632;0.25242466;0.36047632;0.25242466;0.36047632;0.25242466;0.36047632;0.25242466;
0.36047632;0.25242466;0.36047632;0.25242466;0.36047632;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;1.6975691e-05;0.26744896;0.26130882;
0.20234063;0.15707281;0.25867054;0.19524087;0.15027595;0.27225626;0.20287782;0.15189496;0.13027385;0.29862005;
0.233243;0.17314982;0.13562438;0.28910488;0.21682152;0.15975851;0.12908468;0.29574955;0.2256774;0.16654295;
0.13194133;0.29277381;0.221122;0.16283828;0.13011293;0.29449612;0.22351491;0.16468766;0.13094091;0.29364359;
0.22228049;0.16371021;0.13048458;0.29409572;0.22292426;0.16420911;0.13071406;0.29386458;0.22259358;0.16395026;
0.13059445;0.29398435;0.22276458;0.16408166;0.13065532;0.29392329;0.22267741;0.1640147;0.13062441;0.29395437;
0.2227218;0.16404885;0.13064022;0.29393852;0.22269939;0.16403162;0.13063222;0.2939465;0.22271085;0.16404048;
0.13063627;0.29394245;0.22270486;0.16403575;0.13063404;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0.00029501432;0.017545179;0.2497907;0.2007184;0.14254102;0.099919967;0.070313506;0.051732942;
0.050227497;0.23996994;0.17571509;0.12343776;0.086458348;0.061241571;0.047697868;0.057223991;0.2407117;0.18046156;
0.12717214;0.089179292;0.063218348;0.049006455;0.057090752;0.24014989;0.17955443;0.12650242;0.088710152;0.062909983;
0.048890658;0.057463109;0.24011967;0.1796864;0.12661044;0.08879064;0.062971532;0.048939772;0.057492521;0.24009004;
0.17965659;0.12658951;0.088776454;0.062963076;0.048939191;0.057512991;0.24008566;0.17966005;0.12659268;0.088778973;
0.062965252;0.048941605;0.057516545;0.24008374;0.17965887;0.12659192;0.088778496;0.062965006;0.048941709;0.057517689;
0.24008344;0.17965882;0.12659189;0.088778466;0.062965013;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;1.7455618e-06;5.7399604e-05;0.00075398962;0.0050758445;0.01880087;0.042437717;0.10119787;0.086115651;0.065216102;
0.047934666;0.035468441;0.027433101;0.023965821;0.025795158;0.033520587;0.044511281;0.054115642;0.058004804;0.05627986;
0.051424019;0.046043094;0.041821279;0.039718702;0.039851755;0.041655332;0.044613361;0.047364488;0.048872929;0.048807271;
0.0476579;0.04619493;0.044915799;0.044151697;0.044005416;0.044374317;0.045053519;0.045823142;0.046359546;0.046501126;
0.046317831;0.045979947;0.045621853;0.045353338;0.045232147;0.045259263;0.045391764;0.045565743;0.045720212;0.045814216;
0.045834418;0.045792319;0.045714866;0.04563326;0.045572504;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
1.4825606e-07;4.0556381e-07;9.3229391e-07;1.8678903e-06;3.0645356e-06;5.1956522e-06;8.2648594e-06;1.1920653e-05;1.7376227e-05;2.5124009e-05;
3.4298388e-05;4.4302276e-05;5.9762991e-05;7.9130732e-05;0.00010082536;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
      };
     };
     float_Data @[5] {
      name="act_eq";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [5000] 0;0.29557005;0.50049078;0.64122868;0.73662817;0.80010176;0.84131175;0.86730355;0.88320464;0.89265746;
0.89814079;0.9012605;0.90301019;0.90398151;0.90451688;0.90481067;0.904971;0.90505832;0.90510577;0.90513158;
0.90514559;0.90515316;0.90515727;0.90515953;0.90516073;0.90516138;0.90516174;0.90516192;0.90516204;0.9051621;
0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;
0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;
0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;
0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;
0.90516216;0.90516216;0.90516216;0.90516216;0.90516216;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0.29517588;0.50098288;0.64317262;0.7405619;0.80659312;0.85085613;0.88018167;0.89939815;0.91187191;
0.91990781;0.92505527;0.92833918;0.93042797;0.93175405;0.93259495;0.93312764;0.933465;0.93367869;0.93381381;
0.93389922;0.93395323;0.93398738;0.93400902;0.93402267;0.93403131;0.93403679;0.93404025;0.93404239;0.93404377;
0.93404466;0.9340452;0.93404555;0.93404579;0.93404591;0.93404603;0.93404609;0.93404615;0.93404615;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0.29575369;0.50198293;0.64467382;0.74272704;0.80960417;0.85485971;0.88524997;0.90551776;0.91895711;
0.92782855;0.9336651;0.93749553;0.94000518;0.94164759;0.94272149;0.94342345;0.94388199;0.9441815;0.94437706;
0.9445048;0.94458824;0.94464272;0.94467831;0.94470155;0.94471675;0.94472665;0.94473314;0.94473737;0.94474012;
0.9447419;0.9447431;0.94474387;0.94474435;0.94474471;0.94474494;0.94474506;0.94474518;0.94474524;0.9447453;
0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;
0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;
0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;
0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0.29596561;0.50234872;0.64521724;0.74349833;0.81065732;0.85623533;0.8869648;0.90756327;0.92130464;
0.93043756;0.9364906;0.94049442;0.94313914;0.94488424;0.94603509;0.94679356;0.94729346;0.94762278;0.94783962;
0.94798249;0.94807655;0.94813854;0.94817936;0.94820625;0.94822395;0.94823557;0.94824326;0.94824833;0.94825166;
0.94825387;0.9482553;0.94825625;0.94825685;0.94825727;0.94825757;0.94825774;0.94825786;0.94825792;0.94825798;
0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;
0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;
0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;
0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0.29591149;0.50225532;0.64507872;0.74330235;0.81039071;0.85588825;0.8865335;0.90704995;0.92071676;
0.92978495;0.9357844;0.93974525;0.94235635;0.94407588;0.94520754;0.94595194;0.94644147;0.94676322;0.94697475;
0.94711381;0.94720519;0.94726527;0.94730479;0.94733071;0.94734776;0.94735897;0.94736636;0.94737124;0.9473744;
0.94737649;0.94737786;0.94737875;0.94737935;0.94737977;0.94738007;0.94738024;0.94738036;0.94738042;0.94738048;
0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;
0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;
0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;
0.94738048;0.94738048;0.94738048;0.94738048;0.94738048;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0.29559052;0.50170088;0.64425278;0.74212492;0.80877507;0.85376799;0.88387924;0.90387344;0.91706228;
0.92571694;0.93137401;0.93506134;0.93746001;0.93901831;0.94002974;0.94068593;0.94111133;0.94138706;0.94156575;
0.94168156;0.94175667;0.9418053;0.94183683;0.94185728;0.94187051;0.94187909;0.94188464;0.94188827;0.9418906;
0.94189209;0.9418931;0.94189376;0.94189417;0.94189447;0.94189465;0.94189477;0.94189483;0.94189489;0.94189489;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0.29494992;0.50059074;0.64257777;0.73968965;0.80535656;0.84918118;0.87802708;0.8967647;0.90879679;
0.91645157;0.92128748;0.92432684;0.92623049;0.92741996;0.92816198;0.92862439;0.92891252;0.92909193;0.92920351;
0.92927295;0.9293161;0.92934293;0.92935961;0.92936999;0.92937642;0.92938042;0.92938292;0.92938447;0.92938542;
0.92938602;0.92938638;0.92938662;0.92938679;0.92938691;0.92938697;0.92938703;0.92938703;0.92938703;0.92938703;
0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;
0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;
0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;
0.92938703;0.92938703;0.92938703;0.92938703;0.92938703;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0.0086449813;0.30161712;0.50461346;0.64392459;0.73823482;0.80084008;0.84133047;0.86671722;0.8821187;
0.89117569;0.89636123;0.89926749;0.9008711;0.90174568;0.9022181;0.90247226;0.90260857;0.90268159;0.90272063;
0.90274143;0.90275246;0.9027583;0.9027614;0.90276301;0.9027639;0.90276438;0.90276462;0.90276474;0.9027648;
0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;
0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;
0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;
0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;
0.90276486;0.90276486;0.90276486;0.90276486;0.90276486;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0.29440877;0.49792808;0.6365099;0.72841156;0.78647691;0.82017887;0.83721298;0.84416634;
0.84613317;0.84623212;0.84590584;0.84562773;0.84547412;0.84540886;0.84538811;0.84538484;0.84538633;0.84538823;
0.84538937;0.8453899;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;
0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;
0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;
0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;
0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;
0.84539014;0.84539014;0.84539014;0.84539014;0.84539014;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0.29246145;0.49363241;0.62796557;0.71111709;0.75134575;0.7549324;0.74260789;0.73704261;
0.7372539;0.73839116;0.73882729;0.73878413;0.73867929;0.73864371;0.73864961;0.7386592;0.73866206;0.73866135;
0.73866045;0.73866022;0.73866034;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;
0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;
0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;
0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;
0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;
0.7386604;0.7386604;0.7386604;0.7386604;0.7386604;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0.29041293;0.4873932;0.61064863;0.65342414;0.53121901;0.59445852;0.61122668;
0.58537704;0.59472305;0.59589791;0.59347981;0.59419644;0.59440482;0.59418988;0.59422278;0.5942542;0.59423673;
0.59423655;0.59424013;0.59423876;0.5942387;0.59423894;0.59423882;0.59423888;0.59423876;0.59423888;0.59423876;
0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;
0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;
0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;
0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.59423876;
0.59423888;0.59423876;0.59423888;0.59423876;0.59423888;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;4.0245327e-06;0.28642666;0.47439623;0.54739439;0.38151747;0.46043223;0.43414611;
0.45186087;0.42822081;0.45958713;0.41381013;0.46941873;0.39861816;0.47454485;0.3975513;0.47449577;0.39840907;
0.47430557;0.39815226;0.47438586;0.39817348;0.47437543;0.39817899;0.47437462;0.39817685;0.47437522;0.39817685;
0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;
0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;
0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;
0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.39817685;
0.47437522;0.39817685;0.47437522;0.39817685;0.47437522;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0.014555807;0.28904417;0.44496003;0.31012365;0.22210646;
0.37021148;0.25915375;0.35582095;0.24992394;0.36274347;0.25372744;0.3591775;0.25168985;0.36115;0.25281149;
0.36011109;0.25221646;0.36066383;0.25253248;0.36038104;0.25236982;0.36052471;0.25245252;0.36045179;0.25241056;
0.36048874;0.25243181;0.36047006;0.25242108;0.36047953;0.25242651;0.36047471;0.25242376;0.36047709;0.25242513;
0.36047596;0.25242448;0.36047643;0.25242475;0.36047623;0.25242463;0.3604764;0.25242472;0.36047634;0.25242469;
0.36047632;0.25242466;0.36047632;0.25242466;0.36047632;0.25242466;0.36047632;0.25242466;0.36047632;0.25242466;
0.36047632;0.25242466;0.36047632;0.25242466;0.36047632;0.25242466;0.36047632;0.25242466;0.36047632;0.25242466;
0.36047632;0.25242466;0.36047632;0.25242466;0.36047632;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;1.6975691e-05;0.26744896;0.26130882;
0.20234063;0.15707281;0.25867054;0.19524087;0.15027595;0.27225626;0.20287782;0.15189496;0.13027385;0.29862005;
0.233243;0.17314982;0.13562438;0.28910488;0.21682152;0.15975851;0.12908468;0.29574955;0.2256774;0.16654295;
0.13194133;0.29277381;0.221122;0.16283828;0.13011293;0.29449612;0.22351491;0.16468766;0.13094091;0.29364359;
0.22228049;0.16371021;0.13048458;0.29409572;0.22292426;0.16420911;0.13071406;0.29386458;0.22259358;0.16395026;
0.13059445;0.29398435;0.22276458;0.16408166;0.13065532;0.29392329;0.22267741;0.1640147;0.13062441;0.29395437;
0.2227218;0.16404885;0.13064022;0.29393852;0.22269939;0.16403162;0.13063222;0.2939465;0.22271085;0.16404048;
0.13063627;0.29394245;0.22270486;0.16403575;0.13063404;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0.00029501432;0.017545179;0.2497907;0.2007184;0.14254102;0.099919967;0.070313506;0.051732942;
0.050227497;0.23996994;0.17571509;0.12343776;0.086458348;0.061241571;0.047697868;0.057223991;0.2407117;0.18046156;
0.12717214;0.089179292;0.063218348;0.049006455;0.057090752;0.24014989;0.17955443;0.12650242;0.088710152;0.062909983;
0.048890658;0.057463109;0.24011967;0.1796864;0.12661044;0.08879064;0.062971532;0.048939772;0.057492521;0.24009004;
0.17965659;0.12658951;0.088776454;0.062963076;0.048939191;0.057512991;0.24008566;0.17966005;0.12659268;0.088778973;
0.062965252;0.048941605;0.057516545;0.24008374;0.17965887;0.12659192;0.088778496;0.062965006;0.048941709;0.057517689;
0.24008344;0.17965882;0.12659189;0.088778466;0.062965013;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;1.7455618e-06;5.7399604e-05;0.00075398962;0.0050758445;0.01880087;0.042437717;0.10119787;0.086115651;0.065216102;
0.047934666;0.035468441;0.027433101;0.023965821;0.025795158;0.033520587;0.044511281;0.054115642;0.058004804;0.05627986;
0.051424019;0.046043094;0.041821279;0.039718702;0.039851755;0.041655332;0.044613361;0.047364488;0.048872929;0.048807271;
0.0476579;0.04619493;0.044915799;0.044151697;0.044005416;0.044374317;0.045053519;0.045823142;0.046359546;0.046501126;
0.046317831;0.045979947;0.045621853;0.045353338;0.045232147;0.045259263;0.045391764;0.045565743;0.045720212;0.045814216;
0.045834418;0.045792319;0.045714866;0.04563326;0.045572504;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
1.4825606e-07;4.0556381e-07;9.3229391e-07;1.8678903e-06;3.0645356e-06;5.1956522e-06;8.2648594e-06;1.1920653e-05;1.7376227e-05;2.5124009e-05;
3.4298388e-05;4.4302276e-05;5.9762991e-05;7.9130732e-05;0.00010082536;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;0.94999999;
      };
     };
     float_Data @[6] {
      name="avg_ss";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [5000] 0.075000003;0.18528503;0.34288791;0.49205828;0.61434323;0.70722246;0.77426708;0.82078528;0.85199499;0.87232625;
0.88523352;0.89324701;0.89812863;0.9010551;0.90278602;0.90379834;0.90438467;0.9047215;0.90491366;0.90502262;
0.90508413;0.90511864;0.90513796;0.90514874;0.90515471;0.90515804;0.90515989;0.9051609;0.9051615;0.9051618;
0.90516198;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;
0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;
0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;
0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;
0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.92758107;0.93879056;0.9443953;0.94719768;0.94859886;
0.94929945;0.94964969;0.94982481;0.94991243;0.94995618;0.94997811;0.94998908;0.94999456;0.94999731;0.94999862;
0.94999933;0.94999969;0.94999981;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.47499996;0.38508791;0.44303539;0.54310399;0.64183295;0.724213;0.78753459;0.83385813;0.86662817;0.88925004;
0.90457892;0.91481709;0.92157817;0.9260031;0.92887855;0.93073678;0.93193221;0.93269861;0.93318868;0.93350124;
0.9337002;0.93382668;0.93390703;0.93395805;0.93399036;0.93401086;0.93402386;0.93403208;0.93403721;0.93404049;
0.93404257;0.93404388;0.93404472;0.93404526;0.93404555;0.93404579;0.93404591;0.93404603;0.93404609;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.94202304;0.94601154;0.9480058;0.94900286;0.9495014;
0.94975066;0.94987535;0.9499377;0.94996881;0.94998443;0.94999218;0.94999611;0.94999802;0.94999897;0.94999945;
0.94999969;0.94999981;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.47499996;0.38537681;0.44367987;0.54417682;0.64345193;0.72652805;0.79069388;0.83797193;0.87174487;0.89535099;
0.91158974;0.92262745;0.93006146;0.93503332;0.93834043;0.94053096;0.9419772;0.94292963;0.94355559;0.94396633;
0.94423556;0.94441187;0.94452727;0.94460279;0.9446522;0.94468451;0.94470561;0.94471937;0.94472837;0.94473422;
0.94473803;0.94474053;0.9447422;0.94474328;0.94474399;0.94474447;0.94474477;0.94474494;0.94474506;0.94474518;
0.94474524;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;
0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;
0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;
0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.94737267;0.94868636;0.9493432;0.94967163;0.94983578;
0.94991791;0.94995892;0.94997942;0.94998968;0.9499948;0.94999743;0.94999874;0.94999933;0.94999969;0.94999981;
0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.47499996;0.38548279;0.44391575;0.54456651;0.64403242;0.72734487;0.79179013;0.83937746;0.87347037;0.8973875;
0.91391253;0.92520154;0.93284798;0.93799353;0.94143891;0.94373703;0.94526529;0.94627941;0.94695109;0.94739532;
0.94768894;0.94788277;0.94801068;0.94809502;0.94815063;0.94818729;0.94821143;0.94822735;0.94823784;0.94824475;
0.94824934;0.94825232;0.94825429;0.94825554;0.94825637;0.94825697;0.94825733;0.94825757;0.94825774;0.94825786;
0.94825792;0.94825798;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;
0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;
0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;
0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94912899;0.94956446;0.94978225;0.94989109;0.94994557;
0.94997275;0.94998634;0.94999313;0.94999659;0.94999826;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;
0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.47499996;0.38545573;0.44385552;0.54446709;0.64388472;0.72713768;0.79151297;0.83902323;0.87303662;0.89687669;
0.91333079;0.92455757;0.93215144;0.93725389;0.94066489;0.94293618;0.94444406;0.9454428;0.94610298;0.94653887;
0.94682634;0.94701576;0.94714051;0.94722265;0.94727671;0.94731224;0.9473356;0.94735098;0.94736111;0.94736779;
0.94737214;0.947375;0.94737685;0.9473781;0.94737893;0.94737947;0.94737983;0.94738007;0.94738024;0.94738036;
0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;
0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;
0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;
0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94869018;0.94934511;0.94967258;0.94983625;0.94991815;
0.94995904;0.94997954;0.9499898;0.94999492;0.94999743;0.94999874;0.94999933;0.94999969;0.94999981;0.94999993;
0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.47499996;0.38529524;0.44349808;0.54387546;0.64300019;0.72588766;0.78982782;0.8368535;0.87036347;0.89371288;
0.90971494;0.92054451;0.92780292;0.93263149;0.93582487;0.93792731;0.93930662;0.94020897;0.94079804;0.9411819;
0.94143176;0.94159424;0.94169974;0.94176829;0.94181275;0.9418416;0.94186032;0.94187248;0.94188035;0.94188547;
0.94188881;0.94189095;0.94189239;0.94189328;0.94189388;0.94189429;0.94189453;0.94189465;0.94189477;0.94189483;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94594741;0.94797373;0.94898689;0.94949341;0.94974673;
0.94987333;0.94993663;0.94996834;0.94998419;0.94999206;0.94999599;0.94999802;0.94999897;0.94999945;0.94999969;
0.94999981;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.47499996;0.38497496;0.44278285;0.54268032;0.64118499;0.72327077;0.78622597;0.8321265;0.86444557;0.88662118;
0.90153635;0.91141188;0.91786933;0.92204988;0.92473495;0.92644846;0.92753643;0.92822444;0.92865819;0.92893088;
0.92910194;0.92920899;0.92927599;0.92931783;0.92934394;0.92936015;0.92937028;0.9293766;0.92938054;0.92938298;
0.92938447;0.92938542;0.92938602;0.92938638;0.92938662;0.92938679;0.92938691;0.92938697;0.92938697;0.92938697;
0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;
0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;
0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;
0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.93969345;0.94484675;0.94742334;0.94871163;0.94935584;
0.94967794;0.949839;0.94991946;0.94995975;0.9499799;0.94998991;0.94999492;0.94999743;0.94999874;0.94999933;
0.94999969;0.94999981;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.47499996;0.24182247;0.27171978;0.38816661;0.51604557;0.62714016;0.71399009;0.77766025;0.82218874;0.85215372;
0.8716647;0.88401294;0.89164019;0.89625561;0.89900064;0.90060937;0.90154082;0.90207469;0.90237814;0.90254939;
0.90264541;0.90269893;0.90272862;0.90274501;0.90275401;0.90275896;0.9027617;0.90276313;0.90276396;0.90276438;
0.90276462;0.90276474;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;
0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;
0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;
0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;
0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.92638242;0.93819118;0.94409561;0.94704783;0.94852388;
0.9492619;0.94963098;0.94981551;0.94990778;0.94995391;0.94997692;0.94998848;0.94999421;0.94999707;0.9499985;
0.94999921;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.26595438;0.38194123;0.50922555;0.61881852;0.70264769;0.76141328;0.79931313;0.82173973;
0.83393645;0.84008431;0.84299505;0.84431136;0.84489274;0.84515083;0.84526944;0.84532714;0.8453567;0.84537244;
0.8453809;0.84538543;0.84538782;0.84538901;0.8453896;0.84538984;0.84538996;0.84539008;0.84539008;0.84539008;
0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;
0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;
0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;
0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;
0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.89769506;0.92384756;0.93692374;0.94346189;0.94673097;
0.94836545;0.94918275;0.9495914;0.94979572;0.94989789;0.94994891;0.94997442;0.94998717;0.94999361;0.94999683;
0.94999838;0.94999921;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.26498073;0.37930655;0.50363606;0.60737658;0.67936116;0.71714675;0.72987735;0.73345995;
0.73535693;0.73687404;0.73785067;0.73831737;0.73849833;0.73857105;0.73861033;0.73863477;0.73864841;0.73865485;
0.73865765;0.73865891;0.73865962;0.73865998;0.73866022;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.84433019;0.89716506;0.92358255;0.9367913;0.94339561;
0.94669783;0.94834888;0.9491744;0.94958723;0.94979358;0.94989681;0.94994843;0.94997418;0.94998705;0.94999349;
0.94999671;0.94999838;0.94999921;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.20458147;0.34598732;0.47831798;0.56587106;0.548545;0.57150173;0.5913642;
0.58837062;0.59154683;0.59372234;0.59360111;0.59389877;0.59415179;0.59417081;0.5941968;0.59422553;0.59423113;
0.59423387;0.59423697;0.59423786;0.59423828;0.59423864;0.59423876;0.59423882;0.59423876;0.59423882;0.59423876;
0.59423882;0.59423876;0.59423882;0.59423876;0.59423882;0.59423876;0.59423882;0.59423876;0.59423882;0.59423876;
0.59423882;0.59423876;0.59423882;0.59423876;0.59423882;0.59423876;0.59423882;0.59423876;0.59423882;0.59423876;
0.59423882;0.59423876;0.59423882;0.59423876;0.59423882;0.59423876;0.59423882;0.59423876;0.59423882;0.59423876;
0.59423882;0.59423876;0.59423882;0.59423876;0.59423882;0.59423876;0.59423882;0.59423876;0.59423882;0.59423876;
0.59423882;0.59423876;0.59423882;0.59423876;0.59423882;0.7721194;0.86105967;0.90552986;0.92776489;0.93888247;
0.9444412;0.94722056;0.94861031;0.94930518;0.94965255;0.94982624;0.94991314;0.94995654;0.94997823;0.94998908;
0.94999456;0.94999731;0.94999862;0.94999933;0.94999969;0.94999981;0.94999993;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059377007;0.17290184;0.32364905;0.43552172;0.4085196;0.4344759;0.434311;
0.44308594;0.43565339;0.44762027;0.4307152;0.45006698;0.42434257;0.4494437;0.4234975;0.44899663;0.42370284;
0.4490042;0.42357823;0.44898206;0.42357779;0.44897661;0.42357779;0.44897622;0.42357653;0.44897586;0.42357635;
0.4489758;0.42357633;0.44897577;0.4235763;0.44897574;0.4235763;0.44897574;0.4235763;0.44897574;0.4235763;
0.44897574;0.4235763;0.44897574;0.4235763;0.44897574;0.4235763;0.44897574;0.4235763;0.44897574;0.4235763;
0.44897574;0.4235763;0.44897574;0.4235763;0.44897574;0.4235763;0.44897574;0.4235763;0.44897574;0.4235763;
0.44897574;0.4235763;0.44897574;0.4235763;0.44897574;0.4235763;0.44897574;0.4235763;0.44897574;0.4235763;
0.44897574;0.4235763;0.44897574;0.4235763;0.44897574;0.69948786;0.82474393;0.88737196;0.91868597;0.93434298;
0.94217145;0.94608569;0.94804287;0.94902146;0.94951069;0.94975531;0.94987762;0.94993877;0.94996941;0.94998467;
0.9499923;0.94999611;0.94999802;0.94999897;0.94999945;0.94999969;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.022121653;0.15558292;0.30027145;0.30519754;0.263652;
0.31693172;0.28804272;0.32193184;0.28592789;0.32433569;0.28903157;0.32410455;0.2878972;0.3245236;0.28866756;
0.32438934;0.2883029;0.32448336;0.28850794;0.32444447;0.28840715;0.32446593;0.28845924;0.3244555;0.28843302;
0.32446086;0.28844634;0.32445818;0.28843963;0.32445958;0.28844303;0.32445887;0.2884413;0.3244592;0.28844216;
0.32445908;0.28844178;0.32445911;0.28844193;0.32445908;0.28844184;0.32445914;0.28844193;0.32445914;0.2884419;
0.32445911;0.2884419;0.32445911;0.2884419;0.32445911;0.2884419;0.32445911;0.2884419;0.32445911;0.2884419;
0.32445911;0.2884419;0.32445911;0.2884419;0.32445911;0.2884419;0.32445911;0.2884419;0.32445911;0.2884419;
0.32445911;0.2884419;0.32445911;0.2884419;0.32445911;0.63722956;0.79361475;0.87180734;0.91090369;0.93045187;
0.94022596;0.94511294;0.9475565;0.94877827;0.9493891;0.94969451;0.94984722;0.94992363;0.94996178;0.94998085;
0.94999039;0.94999516;0.94999754;0.94999874;0.94999933;0.94999969;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037194251;0.13558419;0.19844651;
0.20039357;0.1787332;0.21870187;0.20697138;0.17862366;0.22543997;0.21415889;0.18302692;0.15665039;0.22763522;
0.23043911;0.20179448;0.16870943;0.22890715;0.22286433;0.19131142;0.16019805;0.22797379;0.22682559;0.19668427;
0.16431281;0.22854331;0.22483265;0.19383547;0.16197419;0.22823516;0.22587503;0.19528136;0.16311114;0.22837737;
0.22532892;0.19451956;0.16250208;0.2282989;0.22561158;0.19491035;0.1628122;0.22833839;0.22546598;0.19470812;
0.16265129;0.22831783;0.2255412;0.19481143;0.16273338;0.22832833;0.22550288;0.19475879;0.16269159;0.22832298;
0.2255224;0.19478562;0.16271293;0.22832572;0.22551256;0.19477209;0.16270216;0.22832432;0.22551759;0.19477904;
0.16270766;0.22832505;0.22551495;0.19477534;0.16270469;0.55635232;0.75317615;0.85158807;0.90079403;0.92539704;
0.93769848;0.94384921;0.94692457;0.94846225;0.94923115;0.9496156;0.94980776;0.94990385;0.94995189;0.94997597;
0.94998801;0.94999397;0.94999695;0.9499985;0.94999921;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00026347395;0.0089043258;0.12934752;0.16503295;0.15378699;0.12685348;0.09858349;0.075158216;
0.062692858;0.15133139;0.16352324;0.14348051;0.11496943;0.0881055;0.067901686;0.062562838;0.15163727;0.16604942;
0.14661078;0.11789504;0.090556696;0.069781572;0.063436165;0.15179303;0.16567373;0.14608808;0.11739911;0.090154544;
0.069522604;0.063492857;0.15180627;0.16574633;0.14617839;0.11748452;0.090228021;0.069583893;0.063538209;0.15181413;
0.16573536;0.14616244;0.11746944;0.090216264;0.069577724;0.063545361;0.1518155;0.16573778;0.14616522;0.1174721;
0.090218678;0.069580138;0.063548341;0.15181604;0.16573745;0.14616469;0.11747159;0.090218298;0.069580004;0.063548848;
0.15181614;0.16573748;0.14616469;0.11747158;0.090218291;0.52010912;0.73505455;0.84252727;0.8962636;0.92313182;
0.93656588;0.94328296;0.94664145;0.94832075;0.94916034;0.94958019;0.94979012;0.94989502;0.94994748;0.9499737;
0.94998682;0.94999337;0.94999671;0.94999838;0.94999921;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;1.0992785e-06;2.9249442e-05;0.00039161951;0.0027337319;0.010767301;0.02660251;0.063900188;0.075007915;0.070112005;
0.059023336;0.04724589;0.037339494;0.030652657;0.028223908;0.030872248;0.037691765;0.045903705;0.051954255;0.054117057;
0.05277054;0.049406819;0.045614049;0.042666376;0.041259065;0.041457199;0.04303528;0.045199886;0.047036409;0.04792184;
0.047789872;0.046992399;0.045954101;0.045052901;0.044529159;0.044451736;0.044752628;0.045287885;0.045823716;0.046162419;
0.046240125;0.046110034;0.045865946;0.045609642;0.045420893;0.045340076;0.045365922;0.045465834;0.045593023;0.04570362;
0.045769021;0.04578067;0.045747768;0.045690514;0.045631509;0.49781573;0.72390783;0.83695388;0.89347696;0.92173851;
0.93586922;0.94293463;0.94646728;0.9482336;0.94911683;0.94955838;0.94977915;0.94988954;0.94994473;0.94997239;
0.94998622;0.94999313;0.94999659;0.94999826;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
7.4128032e-08;2.3984592e-07;5.8606992e-07;1.2269802e-06;2.1457579e-06;3.6707052e-06;5.9677823e-06;8.9442183e-06;1.3160223e-05;1.9142117e-05;
2.6720252e-05;3.5511264e-05;4.7637128e-05;6.338393e-05;8.2104641e-05;0.47504106;0.71252054;0.83126026;0.89063013;0.92031503;
0.93515754;0.94257879;0.94628942;0.94814467;0.94907236;0.9495362;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
0.47499996;0.23749998;0.11874999;0.059374996;0.029687498;0.014843749;0.0074218744;0.0037109372;0.0018554686;0.00092773431;
0.00046386715;0.00023193358;0.00011596679;5.7983394e-05;2.8991697e-05;1.4495849e-05;7.2479243e-06;3.6239621e-06;1.8119811e-06;9.0599053e-07;
4.5299527e-07;2.2649763e-07;1.1324882e-07;5.6624408e-08;2.8312204e-08;1.4156102e-08;7.078051e-09;3.5390255e-09;1.7695128e-09;8.8475638e-10;
4.4237819e-10;2.2118909e-10;1.1059455e-10;5.5297274e-11;2.7648637e-11;1.3824318e-11;6.9121592e-12;3.4560796e-12;1.7280398e-12;8.640199e-13;
4.3200995e-13;2.1600498e-13;1.0800249e-13;5.4001244e-14;2.7000622e-14;1.3500311e-14;6.7501555e-15;3.3750777e-15;1.6875389e-15;8.4376944e-16;
4.2188472e-16;2.1094236e-16;1.0547118e-16;5.273559e-17;2.6367795e-17;1.3183897e-17;6.5919487e-18;3.2959744e-18;1.6479872e-18;8.2399359e-19;
4.1199679e-19;2.059984e-19;1.029992e-19;5.1499599e-20;2.57498e-20;1.28749e-20;6.4374499e-21;3.218725e-21;1.6093625e-21;8.0468124e-22;
4.0234062e-22;2.0117031e-22;1.0058515e-22;5.0292577e-23;2.5146289e-23;0.47499999;0.71249998;0.83124995;0.890625;0.92031252;
0.93515623;0.94257808;0.94628906;0.94814456;0.94907224;0.94953609;0.94976807;0.94988406;0.94994199;0.94997096;
0.9499855;0.94999278;0.94999635;0.94999814;0.94999909;0.94999957;0.94999981;0.94999993;0.94999993;0.94999993;
      };
     };
     float_Data @[7] {
      name="avg_s";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [5000] 0.1125;0.14889252;0.24589022;0.36897424;0.49165875;0.59944057;0.68685383;0.75381958;0.80290729;0.8376168;
0.86142516;0.87733608;0.88773239;0.89439374;0.89858985;0.9011941;0.90278935;0.90375543;0.90433455;0.90467858;
0.90488136;0.90499997;0.90506899;0.90510887;0.90513182;0.90514493;0.90515244;0.90515667;0.90515912;0.90516043;
0.9051612;0.90516162;0.90516186;0.90516198;0.90516204;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;
0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;
0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;
0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;
0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.91637158;0.92758107;0.93598819;0.94159293;0.9450959;
0.94719768;0.94842368;0.94912422;0.94951832;0.94973725;0.94985771;0.9499234;0.94995898;0.94997811;0.94998837;
0.94999385;0.94999677;0.94999826;0.94999909;0.94999951;0.94999969;0.94999981;0.94999987;0.94999993;0.94999993;
0.71249998;0.54879391;0.49591464;0.51950932;0.58067113;0.6524421;0.71998835;0.77692324;0.82177567;0.85551286;
0.88004589;0.89743149;0.90950483;0.91775393;0.92331624;0.92702651;0.92947936;0.93108898;0.9321388;0.93282002;
0.93326008;0.93354338;0.93372524;0.93384165;0.93391597;0.93396342;0.93399364;0.93401289;0.93402505;0.9340328;
0.93403769;0.93404078;0.93404275;0.934044;0.93404478;0.93404531;0.93404561;0.93404579;0.93404591;0.93404603;
0.93404609;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93803459;0.94202304;0.94501442;0.94700861;0.948255;
0.94900286;0.94943911;0.94968843;0.94982862;0.94990653;0.94994938;0.94997275;0.94998538;0.94999218;0.94999582;
0.94999778;0.9499988;0.94999933;0.94999963;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;0.94999993;
0.71249998;0.54893839;0.49630913;0.52024299;0.58184743;0.65418774;0.72244084;0.78020638;0.82597566;0.86066329;
0.88612652;0.90437698;0.91721922;0.92612624;0.93223333;0.93638217;0.93917966;0.94105464;0.94230509;0.94313574;
0.94368565;0.94404876;0.94428802;0.94444537;0.94454879;0.94461668;0.94466114;0.94469023;0.9447093;0.94472176;
0.94472992;0.94473523;0.94473875;0.94474101;0.9447425;0.94474351;0.94474411;0.94474453;0.94474483;0.944745;
0.94474512;0.94474518;0.94474524;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;
0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;
0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;
0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.94605899;0.94737267;0.94835794;0.94901478;0.94942528;
0.94967163;0.94981527;0.94989735;0.94994354;0.94996917;0.9499833;0.94999099;0.94999516;0.94999743;0.94999862;
0.94999927;0.94999957;0.94999975;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.71249998;0.54899138;0.49645358;0.52051008;0.58227122;0.65480804;0.72329909;0.78133827;0.82740432;0.86239588;
0.88815421;0.90667784;0.91976291;0.92887819;0.93515855;0.93944776;0.94235653;0.94431794;0.94563448;0.9465149;
0.94710195;0.94749236;0.94775152;0.9479233;0.94803697;0.94811213;0.94816178;0.94819456;0.9482162;0.9482305;
0.94823992;0.94824612;0.94825017;0.94825286;0.94825459;0.94825578;0.94825655;0.94825709;0.94825745;0.94825768;
0.9482578;0.94825792;0.94825798;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;
0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;
0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;
0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94869351;0.94912899;0.94945562;0.94967335;0.94980943;
0.94989109;0.94993871;0.94996595;0.94998127;0.9499898;0.94999444;0.94999701;0.94999838;0.94999915;0.94999957;
0.94999975;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.71249998;0.54897785;0.49641669;0.52044189;0.58216333;0.65465051;0.72308171;0.78105247;0.82704455;0.86196065;
0.88764572;0.90610164;0.91912651;0.92819023;0.93442756;0.93868184;0.94156295;0.9435029;0.94480294;0.9456709;
0.94624865;0.94663221;0.94688636;0.94705451;0.94716561;0.94723892;0.94728726;0.94731915;0.94734013;0.94735396;
0.94736302;0.94736898;0.94737291;0.94737554;0.9473772;0.94737834;0.94737911;0.94737959;0.94737995;0.94738019;
0.9473803;0.94738036;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;
0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;
0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;
0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.9480353;0.94869018;0.94918138;0.94950879;0.94971347;
0.94983625;0.9499079;0.94994885;0.94997191;0.94998467;0.9499917;0.94999552;0.9499976;0.94999874;0.94999933;
0.94999963;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.71249998;0.54889762;0.49619785;0.52003664;0.58151841;0.65370303;0.7217654;0.77930945;0.82483649;0.85927469;
0.88449478;0.90251964;0.91516125;0.92389637;0.92986059;0.93389392;0.93660027;0.93840462;0.9396013;0.9403916;
0.94091165;0.94125295;0.94147635;0.94162232;0.94171751;0.94177955;0.94181991;0.94184619;0.9418633;0.94187438;
0.9418816;0.94188631;0.94188935;0.94189131;0.94189262;0.94189346;0.94189399;0.94189429;0.94189453;0.94189465;
0.94189477;0.94189483;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94392115;0.94594741;0.94746715;0.94848025;0.94911349;
0.94949341;0.94971502;0.94984168;0.94991291;0.94995248;0.94997424;0.9499861;0.94999254;0.94999599;0.94999784;
0.94999886;0.94999939;0.94999969;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.71249998;0.54873747;0.49576014;0.51922023;0.58020258;0.65173668;0.71898133;0.77555394;0.81999975;0.85331047;
0.87742341;0.89441764;0.90614349;0.91409671;0.91941583;0.92293215;0.92523432;0.92672938;0.92769378;0.9283123;
0.92870712;0.92895806;0.92911702;0.92921746;0.9292807;0.92932045;0.92934537;0.92936099;0.92937076;0.92937684;
0.92938066;0.92938304;0.92938453;0.92938542;0.92938602;0.92938638;0.92938662;0.92938679;0.92938685;0.92938691;
0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;
0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;
0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;
0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.93454021;0.93969345;0.94355839;0.94613504;0.94774544;
0.94871169;0.94927537;0.94959742;0.94977856;0.94987923;0.9499346;0.94996476;0.94998109;0.94998991;0.94999462;
0.94999719;0.9499985;0.94999921;0.94999957;0.94999975;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;
0.71249998;0.47716123;0.37444049;0.38130355;0.44867456;0.53790736;0.62594873;0.70180452;0.76199663;0.80707514;
0.83936989;0.86169142;0.87666583;0.88646072;0.89273071;0.89667004;0.89910543;0.90059006;0.90148413;0.90201676;
0.90233111;0.90251505;0.90262187;0.90268344;0.90271872;0.90273881;0.90275025;0.90275669;0.90276033;0.90276235;
0.90276349;0.90276408;0.90276444;0.90276462;0.90276468;0.90276474;0.9027648;0.9027648;0.9027648;0.9027648;
0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;
0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;
0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;
0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.91457361;0.92638242;0.93523902;0.94114339;0.94483364;
0.94704777;0.94833934;0.94907743;0.94949257;0.94972324;0.94985008;0.94991928;0.94995677;0.94997692;0.94998771;
0.94999349;0.94999653;0.94999814;0.94999903;0.94999945;0.94999969;0.94999981;0.94999987;0.94999993;0.94999993;
0.71249998;0.47499996;0.37047717;0.3762092;0.44271737;0.53076792;0.6167078;0.68906057;0.74418688;0.78296328;
0.80844986;0.82426709;0.83363104;0.8389712;0.84193194;0.84354138;0.84440541;0.84486628;0.84511149;0.84524196;
0.8453114;0.84534842;0.84536815;0.84537858;0.84538412;0.84538698;0.84538847;0.84538925;0.84538966;0.84538984;
0.84538996;0.84539002;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;
0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;
0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;
0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;
0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.87154257;0.89769506;0.9173094;0.93038565;0.93855834;
0.94346189;0.94632232;0.94795686;0.94887626;0.94938707;0.94966799;0.94982123;0.9499042;0.94994891;0.94997287;
0.94998562;0.94999242;0.94999599;0.9499979;0.94999892;0.94999945;0.94999969;0.94999981;0.94999987;0.94999993;
0.71249998;0.47499996;0.36999035;0.37464845;0.43914226;0.5232594;0.60131025;0.6592285;0.6945529;0.71400642;
0.72468168;0.73077786;0.73431426;0.73631585;0.73740709;0.73798907;0.73829973;0.73846722;0.73855782;0.73860633;
0.73863196;0.73864543;0.73865253;0.73865628;0.73865825;0.73865926;0.7386598;0.7386601;0.73866022;0.73866028;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.79149526;0.84433019;0.88395637;0.91037381;0.92688471;
0.9367913;0.94257009;0.94587225;0.94772971;0.94876164;0.94932926;0.94963884;0.94980651;0.94989681;0.94994515;
0.94997096;0.94998467;0.94999194;0.94999576;0.94999778;0.94999886;0.94999939;0.94999969;0.94999981;0.94999987;
0.71249992;0.47499996;0.29687497;0.25072822;0.29835778;0.38833788;0.47710449;0.51282477;0.54216325;0.56676376;
0.57756722;0.58455706;0.5891397;0.5913704;0.59263456;0.59339321;0.59378201;0.59398937;0.59410745;0.59416926;
0.59420156;0.59421927;0.59422857;0.59423339;0.59423602;0.59423739;0.5942381;0.5942384;0.59423864;0.5942387;
0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;
0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;
0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;
0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;
0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.68317908;0.7721194;0.83882463;0.88329476;0.91108859;
0.92776489;0.93749273;0.94305152;0.94617832;0.94791543;0.94887084;0.94939196;0.94967425;0.94982624;0.94990766;
0.94995111;0.94997418;0.9499864;0.9499929;0.94999629;0.94999802;0.94999897;0.94999945;0.94999969;0.94999981;
0.71249986;0.4749999;0.29687494;0.17812598;0.17551391;0.24958149;0.34255159;0.37553561;0.40500575;0.41965836;
0.43137217;0.43351278;0.44056654;0.43564087;0.44285393;0.43359825;0.44152099;0.43250924;0.44075292;0.43222788;
0.44061604;0.43209714;0.4405396;0.43205869;0.44051766;0.43204772;0.44051197;0.43204427;0.44051006;0.43204319;
0.4405095;0.4320429;0.44050932;0.43204281;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;
0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;
0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;
0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;
0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.56999856;0.69737124;0.79237163;0.85552883;0.89493591;
0.91855371;0.9323197;0.94018126;0.94460136;0.94705606;0.94840568;0.94914162;0.9495402;0.94975483;0.94986975;
0.94993103;0.94996357;0.9499808;0.94998991;0.94999468;0.94999719;0.9499985;0.94999921;0.94999957;0.94999975;
0.71249986;0.4749999;0.29687494;0.17812496;0.10390623;0.063013941;0.10929843;0.20478493;0.25499123;0.25932163;
0.28812668;0.28808469;0.30500826;0.29546809;0.30990189;0.29946673;0.31178564;0.2998414;0.31218249;0.30042502;
0.3124072;0.30035505;0.31241921;0.30046356;0.31245402;0.3004306;0.31244826;0.30045375;0.31245464;0.30044383;
0.31245235;0.30044934;0.31245375;0.30044669;0.31245315;0.30044809;0.31245348;0.3004474;0.3124533;0.30044773;
0.31245339;0.30044758;0.31245333;0.30044764;0.31245336;0.30044758;0.31245336;0.30044764;0.31245339;0.30044764;
0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;
0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;
0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.47484148;0.63422811;0.75301772;0.83196068;0.88120627;
0.91071612;0.9279145;0.9377355;0.94325686;0.94632298;0.94800878;0.948928;0.94942582;0.9496938;0.94983733;
0.94991386;0.94995451;0.94997603;0.94998741;0.94999337;0.94999653;0.94999814;0.94999903;0.94999945;0.94999969;
0.71249986;0.4749999;0.29687494;0.17812496;0.10390623;0.059374988;0.033398431;0.018558927;0.077071562;0.13775903;
0.16907629;0.17390475;0.19630331;0.20163734;0.1901305;0.20778523;0.21097207;0.19699949;0.17682494;0.20223008;
0.2163346;0.20906454;0.18888699;0.20889707;0.21588069;0.20359606;0.18189704;0.20493542;0.21588051;0.20628239;
0.18529761;0.20692046;0.21587655;0.20485601;0.1834151;0.20582512;0.21585009;0.20556572;0.18433842;0.2063579;
0.21584341;0.20518148;0.18384178;0.20607033;0.21584097;0.20537566;0.18409392;0.20621616;0.21584107;0.2052746;
0.18396294;0.20614038;0.21584079;0.20532611;0.18402974;0.20617904;0.21584097;0.20529988;0.18399574;0.20615935;
0.21584088;0.20531325;0.1840131;0.20616941;0.215841;0.20530654;0.18400435;0.20616433;0.21584097;0.20531;
0.18400884;0.20616695;0.21584095;0.20530814;0.18400642;0.37017936;0.56167775;0.70663291;0.80371344;0.86455524;
0.90112686;0.92248803;0.93470633;0.94158429;0.94540775;0.94751167;0.94865972;0.94928181;0.94961685;0.94979644;
0.94989222;0.94994307;0.94997001;0.94998425;0.9499917;0.94999564;0.94999772;0.94999886;0.94999939;0.94999969;
0.71249986;0.4749999;0.29687494;0.17812496;0.10390623;0.059374988;0.033398431;0.018554684;0.010205076;0.0055664051;
0.0030151361;0.0016235348;0.00094350439;0.004923915;0.067135714;0.11608434;0.13493566;0.13089457;0.11473903;0.09494862;
0.078820735;0.11507607;0.13929966;0.14139009;0.12817976;0.10814263;0.088022158;0.075292498;0.11346488;0.13975716;
0.14318398;0.13053951;0.1105481;0.09016484;0.076800503;0.11429676;0.13998525;0.14303666;0.13021788;0.11018621;
0.089854404;0.076673627;0.11423995;0.13999313;0.14308576;0.13028514;0.11025658;0.089920238;0.076729223;0.11427168;
0.14000352;0.14308298;0.1302762;0.11024623;0.089911982;0.076728672;0.11427209;0.14000493;0.14308508;0.13027859;
0.11024863;0.089914382;0.076731361;0.1142737;0.14000557;0.14308512;0.13027835;0.11024833;0.089914165;0.076731503;
0.11427382;0.14000565;0.14308517;0.13027838;0.11024833;0.31517872;0.52511662;0.68382192;0.79004276;0.85658729;
0.89657658;0.91992974;0.93328559;0.94080317;0.94498175;0.947281;0.94853556;0.94921529;0.94958138;0.94977754;
0.94988215;0.94993776;0.94996727;0.94998282;0.94999099;0.94999528;0.94999754;0.94999874;0.94999933;0.94999963;
0.7124998;0.4749999;0.29687494;0.17812496;0.10390623;0.059374988;0.033398431;0.018554684;0.010205076;0.0055664051;
0.0030151361;0.0016235348;0.0008697508;0.00046386709;0.00024642941;0.00013046263;6.8855283e-05;3.6239624e-05;1.9025803e-05;9.9658973e-06;
5.2094465e-06;3.1543625e-06;1.6201902e-05;0.00020391071;0.0014688213;0.006118061;0.016360287;0.040130235;0.057569075;0.063840538;
0.061431937;0.054338913;0.045839205;0.038245931;0.03323492;0.032053582;0.034872673;0.040388189;0.046171222;0.05014414;
0.051457338;0.050432079;0.048023064;0.045344718;0.043301892;0.042379543;0.042707413;0.04395365;0.04549503;0.046708435;
0.047249153;0.047120776;0.046537437;0.045795169;0.045162164;0.04480695;0.044779789;0.045033835;0.045428775;0.045795597;
0.046017863;0.046063948;0.045964949;0.045787297;0.045604095;0.045472085;0.045419004;0.045442417;0.04551772;0.04561067;
0.045689844;0.045735255;0.045741513;0.045716014;0.045673762;0.27174476;0.49782628;0.66739011;0.78043354;0.85108602;
0.89347762;0.9182061;0.93233669;0.94028515;0.94470096;0.94712967;0.94845438;0.94917196;0.94955838;0.94976538;
0.94987583;0.94993448;0.94996554;0.94998193;0.94999051;0.94999504;0.94999743;0.94999868;0.94999933;0.94999963;
0.7124998;0.4749999;0.29687494;0.17812496;0.10390623;0.059374988;0.033398431;0.018554684;0.010205076;0.0055664051;
0.0030151361;0.0016235348;0.0008697508;0.00046386709;0.00024642941;0.00013046263;6.8855283e-05;3.6239624e-05;1.9025803e-05;9.9658973e-06;
5.2094465e-06;2.7179722e-06;1.4156105e-06;7.361175e-07;3.8221486e-07;1.9818549e-07;1.0263177e-07;5.3085401e-08;2.7427458e-08;1.4156107e-08;
7.299243e-09;3.7602161e-09;1.9354054e-09;9.9535136e-10;5.1150001e-10;2.6266217e-10;1.3478717e-10;6.9121625e-11;3.5424833e-11;1.8144427e-11;
9.2882186e-12;4.7521119e-12;2.4300572e-12;1.2420293e-12;6.3451496e-13;3.2400764e-13;1.653789e-13;8.4376991e-14;4.3032265e-14;2.1938018e-14;
1.1179951e-14;5.695447e-15;2.9004591e-15;1.4765974e-15;7.514826e-16;3.8233326e-16;1.944626e-16;9.8879291e-17;5.026364e-17;2.5543817e-17;
3.7064016e-08;1.3845496e-07;3.6226243e-07;7.9462131e-07;1.4701895e-06;2.5704474e-06;4.2691149e-06;6.6066668e-06;9.8834444e-06;1.4512781e-05;
2.0616517e-05;2.8063891e-05;3.785051e-05;5.0617222e-05;6.6360932e-05;0.2375537;0.4750371;0.65314865;0.77188939;0.84610224;
0.89062989;0.91660434;0.93144691;0.93979579;0.94443405;0.94698513;0.9483766;0.9491303;0.94953614;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
      };
     };
     float_Data @[8] {
      name="avg_m";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [5000] 0.1125;0.14889252;0.24589022;0.36897424;0.49165875;0.59944057;0.68685383;0.75381958;0.80290729;0.8376168;
0.86142516;0.87733608;0.88773239;0.89439374;0.89858985;0.9011941;0.90278935;0.90375543;0.90433455;0.90467858;
0.90488136;0.90499997;0.90506899;0.90510887;0.90513182;0.90514493;0.90515244;0.90515667;0.90515912;0.90516043;
0.9051612;0.90516162;0.90516186;0.90516198;0.90516204;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;
0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;
0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;
0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;
0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.91637158;0.92758107;0.93598819;0.94159293;0.9450959;
0.94719768;0.94842368;0.94912422;0.94951832;0.94973725;0.94985771;0.9499234;0.94995898;0.94997811;0.94998837;
0.94999385;0.94999677;0.94999826;0.94999909;0.94999951;0.94999969;0.94999981;0.94999987;0.94999993;0.94999993;
0.71249998;0.54879391;0.49591464;0.51950932;0.58067113;0.6524421;0.71998835;0.77692324;0.82177567;0.85551286;
0.88004589;0.89743149;0.90950483;0.91775393;0.92331624;0.92702651;0.92947936;0.93108898;0.9321388;0.93282002;
0.93326008;0.93354338;0.93372524;0.93384165;0.93391597;0.93396342;0.93399364;0.93401289;0.93402505;0.9340328;
0.93403769;0.93404078;0.93404275;0.934044;0.93404478;0.93404531;0.93404561;0.93404579;0.93404591;0.93404603;
0.93404609;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93803459;0.94202304;0.94501442;0.94700861;0.948255;
0.94900286;0.94943911;0.94968843;0.94982862;0.94990653;0.94994938;0.94997275;0.94998538;0.94999218;0.94999582;
0.94999778;0.9499988;0.94999933;0.94999963;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;0.94999993;
0.71249998;0.54893839;0.49630913;0.52024299;0.58184743;0.65418774;0.72244084;0.78020638;0.82597566;0.86066329;
0.88612652;0.90437698;0.91721922;0.92612624;0.93223333;0.93638217;0.93917966;0.94105464;0.94230509;0.94313574;
0.94368565;0.94404876;0.94428802;0.94444537;0.94454879;0.94461668;0.94466114;0.94469023;0.9447093;0.94472176;
0.94472992;0.94473523;0.94473875;0.94474101;0.9447425;0.94474351;0.94474411;0.94474453;0.94474483;0.944745;
0.94474512;0.94474518;0.94474524;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;
0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;
0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;
0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.94605899;0.94737267;0.94835794;0.94901478;0.94942528;
0.94967163;0.94981527;0.94989735;0.94994354;0.94996917;0.9499833;0.94999099;0.94999516;0.94999743;0.94999862;
0.94999927;0.94999957;0.94999975;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.71249998;0.54899138;0.49645358;0.52051008;0.58227122;0.65480804;0.72329909;0.78133827;0.82740432;0.86239588;
0.88815421;0.90667784;0.91976291;0.92887819;0.93515855;0.93944776;0.94235653;0.94431794;0.94563448;0.9465149;
0.94710195;0.94749236;0.94775152;0.9479233;0.94803697;0.94811213;0.94816178;0.94819456;0.9482162;0.9482305;
0.94823992;0.94824612;0.94825017;0.94825286;0.94825459;0.94825578;0.94825655;0.94825709;0.94825745;0.94825768;
0.9482578;0.94825792;0.94825798;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;
0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;
0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;
0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94869351;0.94912899;0.94945562;0.94967335;0.94980943;
0.94989109;0.94993871;0.94996595;0.94998127;0.9499898;0.94999444;0.94999701;0.94999838;0.94999915;0.94999957;
0.94999975;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.71249998;0.54897785;0.49641669;0.52044189;0.58216333;0.65465051;0.72308171;0.78105247;0.82704455;0.86196065;
0.88764572;0.90610164;0.91912651;0.92819023;0.93442756;0.93868184;0.94156295;0.9435029;0.94480294;0.9456709;
0.94624865;0.94663221;0.94688636;0.94705451;0.94716561;0.94723892;0.94728726;0.94731915;0.94734013;0.94735396;
0.94736302;0.94736898;0.94737291;0.94737554;0.9473772;0.94737834;0.94737911;0.94737959;0.94737995;0.94738019;
0.9473803;0.94738036;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;
0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;
0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;
0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.9480353;0.94869018;0.94918138;0.94950879;0.94971347;
0.94983625;0.9499079;0.94994885;0.94997191;0.94998467;0.9499917;0.94999552;0.9499976;0.94999874;0.94999933;
0.94999963;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.71249998;0.54889762;0.49619785;0.52003664;0.58151841;0.65370303;0.7217654;0.77930945;0.82483649;0.85927469;
0.88449478;0.90251964;0.91516125;0.92389637;0.92986059;0.93389392;0.93660027;0.93840462;0.9396013;0.9403916;
0.94091165;0.94125295;0.94147635;0.94162232;0.94171751;0.94177955;0.94181991;0.94184619;0.9418633;0.94187438;
0.9418816;0.94188631;0.94188935;0.94189131;0.94189262;0.94189346;0.94189399;0.94189429;0.94189453;0.94189465;
0.94189477;0.94189483;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94392115;0.94594741;0.94746715;0.94848025;0.94911349;
0.94949341;0.94971502;0.94984168;0.94991291;0.94995248;0.94997424;0.9499861;0.94999254;0.94999599;0.94999784;
0.94999886;0.94999939;0.94999969;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.71249998;0.54873747;0.49576014;0.51922023;0.58020258;0.65173668;0.71898133;0.77555394;0.81999975;0.85331047;
0.87742341;0.89441764;0.90614349;0.91409671;0.91941583;0.92293215;0.92523432;0.92672938;0.92769378;0.9283123;
0.92870712;0.92895806;0.92911702;0.92921746;0.9292807;0.92932045;0.92934537;0.92936099;0.92937076;0.92937684;
0.92938066;0.92938304;0.92938453;0.92938542;0.92938602;0.92938638;0.92938662;0.92938679;0.92938685;0.92938691;
0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;
0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;
0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;
0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.93454021;0.93969345;0.94355839;0.94613504;0.94774544;
0.94871169;0.94927537;0.94959742;0.94977856;0.94987923;0.9499346;0.94996476;0.94998109;0.94998991;0.94999462;
0.94999719;0.9499985;0.94999921;0.94999957;0.94999975;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;
0.71249998;0.47716123;0.37444049;0.38130355;0.44867456;0.53790736;0.62594873;0.70180452;0.76199663;0.80707514;
0.83936989;0.86169142;0.87666583;0.88646072;0.89273071;0.89667004;0.89910543;0.90059006;0.90148413;0.90201676;
0.90233111;0.90251505;0.90262187;0.90268344;0.90271872;0.90273881;0.90275025;0.90275669;0.90276033;0.90276235;
0.90276349;0.90276408;0.90276444;0.90276462;0.90276468;0.90276474;0.9027648;0.9027648;0.9027648;0.9027648;
0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;
0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;
0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;
0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.91457361;0.92638242;0.93523902;0.94114339;0.94483364;
0.94704777;0.94833934;0.94907743;0.94949257;0.94972324;0.94985008;0.94991928;0.94995677;0.94997692;0.94998771;
0.94999349;0.94999653;0.94999814;0.94999903;0.94999945;0.94999969;0.94999981;0.94999987;0.94999993;0.94999993;
0.71249998;0.47499996;0.37047717;0.3762092;0.44271737;0.53076792;0.6167078;0.68906057;0.74418688;0.78296328;
0.80844986;0.82426709;0.83363104;0.8389712;0.84193194;0.84354138;0.84440541;0.84486628;0.84511149;0.84524196;
0.8453114;0.84534842;0.84536815;0.84537858;0.84538412;0.84538698;0.84538847;0.84538925;0.84538966;0.84538984;
0.84538996;0.84539002;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;
0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;
0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;
0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;
0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.87154257;0.89769506;0.9173094;0.93038565;0.93855834;
0.94346189;0.94632232;0.94795686;0.94887626;0.94938707;0.94966799;0.94982123;0.9499042;0.94994891;0.94997287;
0.94998562;0.94999242;0.94999599;0.9499979;0.94999892;0.94999945;0.94999969;0.94999981;0.94999987;0.94999993;
0.71249998;0.47499996;0.36999035;0.37464845;0.43914226;0.5232594;0.60131025;0.6592285;0.6945529;0.71400642;
0.72468168;0.73077786;0.73431426;0.73631585;0.73740709;0.73798907;0.73829973;0.73846722;0.73855782;0.73860633;
0.73863196;0.73864543;0.73865253;0.73865628;0.73865825;0.73865926;0.7386598;0.7386601;0.73866022;0.73866028;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.79149526;0.84433019;0.88395637;0.91037381;0.92688471;
0.9367913;0.94257009;0.94587225;0.94772971;0.94876164;0.94932926;0.94963884;0.94980651;0.94989681;0.94994515;
0.94997096;0.94998467;0.94999194;0.94999576;0.94999778;0.94999886;0.94999939;0.94999969;0.94999981;0.94999987;
0.71249992;0.47499996;0.29687497;0.25072822;0.29835778;0.38833788;0.47710449;0.51282477;0.54216325;0.56676376;
0.57756722;0.58455706;0.5891397;0.5913704;0.59263456;0.59339321;0.59378201;0.59398937;0.59410745;0.59416926;
0.59420156;0.59421927;0.59422857;0.59423339;0.59423602;0.59423739;0.5942381;0.5942384;0.59423864;0.5942387;
0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;
0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;
0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;
0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;
0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.68317908;0.7721194;0.83882463;0.88329476;0.91108859;
0.92776489;0.93749273;0.94305152;0.94617832;0.94791543;0.94887084;0.94939196;0.94967425;0.94982624;0.94990766;
0.94995111;0.94997418;0.9499864;0.9499929;0.94999629;0.94999802;0.94999897;0.94999945;0.94999969;0.94999981;
0.71249986;0.4749999;0.29687494;0.17812598;0.17551391;0.24958149;0.34255159;0.37553561;0.40500575;0.41965836;
0.43137217;0.43351278;0.44056654;0.43564087;0.44285393;0.43359825;0.44152099;0.43250924;0.44075292;0.43222788;
0.44061604;0.43209714;0.4405396;0.43205869;0.44051766;0.43204772;0.44051197;0.43204427;0.44051006;0.43204319;
0.4405095;0.4320429;0.44050932;0.43204281;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;
0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;
0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;
0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;
0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.56999856;0.69737124;0.79237163;0.85552883;0.89493591;
0.91855371;0.9323197;0.94018126;0.94460136;0.94705606;0.94840568;0.94914162;0.9495402;0.94975483;0.94986975;
0.94993103;0.94996357;0.9499808;0.94998991;0.94999468;0.94999719;0.9499985;0.94999921;0.94999957;0.94999975;
0.71249986;0.4749999;0.29687494;0.17812496;0.10390623;0.063013941;0.10929843;0.20478493;0.25499123;0.25932163;
0.28812668;0.28808469;0.30500826;0.29546809;0.30990189;0.29946673;0.31178564;0.2998414;0.31218249;0.30042502;
0.3124072;0.30035505;0.31241921;0.30046356;0.31245402;0.3004306;0.31244826;0.30045375;0.31245464;0.30044383;
0.31245235;0.30044934;0.31245375;0.30044669;0.31245315;0.30044809;0.31245348;0.3004474;0.3124533;0.30044773;
0.31245339;0.30044758;0.31245333;0.30044764;0.31245336;0.30044758;0.31245336;0.30044764;0.31245339;0.30044764;
0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;
0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;
0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.47484148;0.63422811;0.75301772;0.83196068;0.88120627;
0.91071612;0.9279145;0.9377355;0.94325686;0.94632298;0.94800878;0.948928;0.94942582;0.9496938;0.94983733;
0.94991386;0.94995451;0.94997603;0.94998741;0.94999337;0.94999653;0.94999814;0.94999903;0.94999945;0.94999969;
0.71249986;0.4749999;0.29687494;0.17812496;0.10390623;0.059374988;0.033398431;0.018558927;0.077071562;0.13775903;
0.16907629;0.17390475;0.19630331;0.20163734;0.1901305;0.20778523;0.21097207;0.19699949;0.17682494;0.20223008;
0.2163346;0.20906454;0.18888699;0.20889707;0.21588069;0.20359606;0.18189704;0.20493542;0.21588051;0.20628239;
0.18529761;0.20692046;0.21587655;0.20485601;0.1834151;0.20582512;0.21585009;0.20556572;0.18433842;0.2063579;
0.21584341;0.20518148;0.18384178;0.20607033;0.21584097;0.20537566;0.18409392;0.20621616;0.21584107;0.2052746;
0.18396294;0.20614038;0.21584079;0.20532611;0.18402974;0.20617904;0.21584097;0.20529988;0.18399574;0.20615935;
0.21584088;0.20531325;0.1840131;0.20616941;0.215841;0.20530654;0.18400435;0.20616433;0.21584097;0.20531;
0.18400884;0.20616695;0.21584095;0.20530814;0.18400642;0.37017936;0.56167775;0.70663291;0.80371344;0.86455524;
0.90112686;0.92248803;0.93470633;0.94158429;0.94540775;0.94751167;0.94865972;0.94928181;0.94961685;0.94979644;
0.94989222;0.94994307;0.94997001;0.94998425;0.9499917;0.94999564;0.94999772;0.94999886;0.94999939;0.94999969;
0.71249986;0.4749999;0.29687494;0.17812496;0.10390623;0.059374988;0.033398431;0.018554684;0.010205076;0.0055664051;
0.0030151361;0.0016235348;0.00094350439;0.004923915;0.067135714;0.11608434;0.13493566;0.13089457;0.11473903;0.09494862;
0.078820735;0.11507607;0.13929966;0.14139009;0.12817976;0.10814263;0.088022158;0.075292498;0.11346488;0.13975716;
0.14318398;0.13053951;0.1105481;0.09016484;0.076800503;0.11429676;0.13998525;0.14303666;0.13021788;0.11018621;
0.089854404;0.076673627;0.11423995;0.13999313;0.14308576;0.13028514;0.11025658;0.089920238;0.076729223;0.11427168;
0.14000352;0.14308298;0.1302762;0.11024623;0.089911982;0.076728672;0.11427209;0.14000493;0.14308508;0.13027859;
0.11024863;0.089914382;0.076731361;0.1142737;0.14000557;0.14308512;0.13027835;0.11024833;0.089914165;0.076731503;
0.11427382;0.14000565;0.14308517;0.13027838;0.11024833;0.31517872;0.52511662;0.68382192;0.79004276;0.85658729;
0.89657658;0.91992974;0.93328559;0.94080317;0.94498175;0.947281;0.94853556;0.94921529;0.94958138;0.94977754;
0.94988215;0.94993776;0.94996727;0.94998282;0.94999099;0.94999528;0.94999754;0.94999874;0.94999933;0.94999963;
0.7124998;0.4749999;0.29687494;0.17812496;0.10390623;0.059374988;0.033398431;0.018554684;0.010205076;0.0055664051;
0.0030151361;0.0016235348;0.0008697508;0.00046386709;0.00024642941;0.00013046263;6.8855283e-05;3.6239624e-05;1.9025803e-05;9.9658973e-06;
5.2094465e-06;3.1543625e-06;1.6201902e-05;0.00020391071;0.0014688213;0.006118061;0.016360287;0.040130235;0.057569075;0.063840538;
0.061431937;0.054338913;0.045839205;0.038245931;0.03323492;0.032053582;0.034872673;0.040388189;0.046171222;0.05014414;
0.051457338;0.050432079;0.048023064;0.045344718;0.043301892;0.042379543;0.042707413;0.04395365;0.04549503;0.046708435;
0.047249153;0.047120776;0.046537437;0.045795169;0.045162164;0.04480695;0.044779789;0.045033835;0.045428775;0.045795597;
0.046017863;0.046063948;0.045964949;0.045787297;0.045604095;0.045472085;0.045419004;0.045442417;0.04551772;0.04561067;
0.045689844;0.045735255;0.045741513;0.045716014;0.045673762;0.27174476;0.49782628;0.66739011;0.78043354;0.85108602;
0.89347762;0.9182061;0.93233669;0.94028515;0.94470096;0.94712967;0.94845438;0.94917196;0.94955838;0.94976538;
0.94987583;0.94993448;0.94996554;0.94998193;0.94999051;0.94999504;0.94999743;0.94999868;0.94999933;0.94999963;
0.7124998;0.4749999;0.29687494;0.17812496;0.10390623;0.059374988;0.033398431;0.018554684;0.010205076;0.0055664051;
0.0030151361;0.0016235348;0.0008697508;0.00046386709;0.00024642941;0.00013046263;6.8855283e-05;3.6239624e-05;1.9025803e-05;9.9658973e-06;
5.2094465e-06;2.7179722e-06;1.4156105e-06;7.361175e-07;3.8221486e-07;1.9818549e-07;1.0263177e-07;5.3085401e-08;2.7427458e-08;1.4156107e-08;
7.299243e-09;3.7602161e-09;1.9354054e-09;9.9535136e-10;5.1150001e-10;2.6266217e-10;1.3478717e-10;6.9121625e-11;3.5424833e-11;1.8144427e-11;
9.2882186e-12;4.7521119e-12;2.4300572e-12;1.2420293e-12;6.3451496e-13;3.2400764e-13;1.653789e-13;8.4376991e-14;4.3032265e-14;2.1938018e-14;
1.1179951e-14;5.695447e-15;2.9004591e-15;1.4765974e-15;7.514826e-16;3.8233326e-16;1.944626e-16;9.8879291e-17;5.026364e-17;2.5543817e-17;
3.7064016e-08;1.3845496e-07;3.6226243e-07;7.9462131e-07;1.4701895e-06;2.5704474e-06;4.2691149e-06;6.6066668e-06;9.8834444e-06;1.4512781e-05;
2.0616517e-05;2.8063891e-05;3.785051e-05;5.0617222e-05;6.6360932e-05;0.2375537;0.4750371;0.65314865;0.77188939;0.84610224;
0.89062989;0.91660434;0.93144691;0.93979579;0.94443405;0.94698513;0.9483766;0.9491303;0.94953614;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
      };
     };
     float_Data @[9] {
      name="avg_s_eff";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=9;
      matrix_col_width=10;
      ar {
       name="ar";
      [5000] 0.1125;0.14889252;0.24589022;0.36897424;0.49165875;0.59944057;0.68685383;0.75381958;0.80290729;0.8376168;
0.86142516;0.87733608;0.88773239;0.89439374;0.89858985;0.9011941;0.90278935;0.90375543;0.90433455;0.90467858;
0.90488136;0.90499997;0.90506899;0.90510887;0.90513182;0.90514493;0.90515244;0.90515667;0.90515912;0.90516043;
0.9051612;0.90516162;0.90516186;0.90516198;0.90516204;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;
0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;
0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;
0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;
0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.91637158;0.92758107;0.93598819;0.94159293;0.9450959;
0.94719768;0.94842368;0.94912422;0.94951832;0.94973725;0.94985771;0.9499234;0.94995898;0.94997811;0.94998837;
0.94999385;0.94999677;0.94999826;0.94999909;0.94999951;0.94999969;0.94999981;0.94999987;0.94999993;0.94999993;
0.71249998;0.54879391;0.49591464;0.51950932;0.58067113;0.6524421;0.71998835;0.77692324;0.82177567;0.85551286;
0.88004589;0.89743149;0.90950483;0.91775393;0.92331624;0.92702651;0.92947936;0.93108898;0.9321388;0.93282002;
0.93326008;0.93354338;0.93372524;0.93384165;0.93391597;0.93396342;0.93399364;0.93401289;0.93402505;0.9340328;
0.93403769;0.93404078;0.93404275;0.934044;0.93404478;0.93404531;0.93404561;0.93404579;0.93404591;0.93404603;
0.93404609;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93803459;0.94202304;0.94501442;0.94700861;0.948255;
0.94900286;0.94943911;0.94968843;0.94982862;0.94990653;0.94994938;0.94997275;0.94998538;0.94999218;0.94999582;
0.94999778;0.9499988;0.94999933;0.94999963;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;0.94999993;
0.71249998;0.54893839;0.49630913;0.52024299;0.58184743;0.65418774;0.72244084;0.78020638;0.82597566;0.86066329;
0.88612652;0.90437698;0.91721922;0.92612624;0.93223333;0.93638217;0.93917966;0.94105464;0.94230509;0.94313574;
0.94368565;0.94404876;0.94428802;0.94444537;0.94454879;0.94461668;0.94466114;0.94469023;0.9447093;0.94472176;
0.94472992;0.94473523;0.94473875;0.94474101;0.9447425;0.94474351;0.94474411;0.94474453;0.94474483;0.944745;
0.94474512;0.94474518;0.94474524;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;
0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;
0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;
0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.94605899;0.94737267;0.94835794;0.94901478;0.94942528;
0.94967163;0.94981527;0.94989735;0.94994354;0.94996917;0.9499833;0.94999099;0.94999516;0.94999743;0.94999862;
0.94999927;0.94999957;0.94999975;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.71249998;0.54899138;0.49645358;0.52051008;0.58227122;0.65480804;0.72329909;0.78133827;0.82740432;0.86239588;
0.88815421;0.90667784;0.91976291;0.92887819;0.93515855;0.93944776;0.94235653;0.94431794;0.94563448;0.9465149;
0.94710195;0.94749236;0.94775152;0.9479233;0.94803697;0.94811213;0.94816178;0.94819456;0.9482162;0.9482305;
0.94823992;0.94824612;0.94825017;0.94825286;0.94825459;0.94825578;0.94825655;0.94825709;0.94825745;0.94825768;
0.9482578;0.94825792;0.94825798;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;
0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;
0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;
0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94869351;0.94912899;0.94945562;0.94967335;0.94980943;
0.94989109;0.94993871;0.94996595;0.94998127;0.9499898;0.94999444;0.94999701;0.94999838;0.94999915;0.94999957;
0.94999975;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.71249998;0.54897785;0.49641669;0.52044189;0.58216333;0.65465051;0.72308171;0.78105247;0.82704455;0.86196065;
0.88764572;0.90610164;0.91912651;0.92819023;0.93442756;0.93868184;0.94156295;0.9435029;0.94480294;0.9456709;
0.94624865;0.94663221;0.94688636;0.94705451;0.94716561;0.94723892;0.94728726;0.94731915;0.94734013;0.94735396;
0.94736302;0.94736898;0.94737291;0.94737554;0.9473772;0.94737834;0.94737911;0.94737959;0.94737995;0.94738019;
0.9473803;0.94738036;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;
0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;
0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;
0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.9480353;0.94869018;0.94918138;0.94950879;0.94971347;
0.94983625;0.9499079;0.94994885;0.94997191;0.94998467;0.9499917;0.94999552;0.9499976;0.94999874;0.94999933;
0.94999963;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.71249998;0.54889762;0.49619785;0.52003664;0.58151841;0.65370303;0.7217654;0.77930945;0.82483649;0.85927469;
0.88449478;0.90251964;0.91516125;0.92389637;0.92986059;0.93389392;0.93660027;0.93840462;0.9396013;0.9403916;
0.94091165;0.94125295;0.94147635;0.94162232;0.94171751;0.94177955;0.94181991;0.94184619;0.9418633;0.94187438;
0.9418816;0.94188631;0.94188935;0.94189131;0.94189262;0.94189346;0.94189399;0.94189429;0.94189453;0.94189465;
0.94189477;0.94189483;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94392115;0.94594741;0.94746715;0.94848025;0.94911349;
0.94949341;0.94971502;0.94984168;0.94991291;0.94995248;0.94997424;0.9499861;0.94999254;0.94999599;0.94999784;
0.94999886;0.94999939;0.94999969;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.71249998;0.54873747;0.49576014;0.51922023;0.58020258;0.65173668;0.71898133;0.77555394;0.81999975;0.85331047;
0.87742341;0.89441764;0.90614349;0.91409671;0.91941583;0.92293215;0.92523432;0.92672938;0.92769378;0.9283123;
0.92870712;0.92895806;0.92911702;0.92921746;0.9292807;0.92932045;0.92934537;0.92936099;0.92937076;0.92937684;
0.92938066;0.92938304;0.92938453;0.92938542;0.92938602;0.92938638;0.92938662;0.92938679;0.92938685;0.92938691;
0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;
0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;
0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;
0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.93454021;0.93969345;0.94355839;0.94613504;0.94774544;
0.94871169;0.94927537;0.94959742;0.94977856;0.94987923;0.9499346;0.94996476;0.94998109;0.94998991;0.94999462;
0.94999719;0.9499985;0.94999921;0.94999957;0.94999975;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;
0.71249998;0.47716123;0.37444049;0.38130355;0.44867456;0.53790736;0.62594873;0.70180452;0.76199663;0.80707514;
0.83936989;0.86169142;0.87666583;0.88646072;0.89273071;0.89667004;0.89910543;0.90059006;0.90148413;0.90201676;
0.90233111;0.90251505;0.90262187;0.90268344;0.90271872;0.90273881;0.90275025;0.90275669;0.90276033;0.90276235;
0.90276349;0.90276408;0.90276444;0.90276462;0.90276468;0.90276474;0.9027648;0.9027648;0.9027648;0.9027648;
0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;
0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;
0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;
0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.91457361;0.92638242;0.93523902;0.94114339;0.94483364;
0.94704777;0.94833934;0.94907743;0.94949257;0.94972324;0.94985008;0.94991928;0.94995677;0.94997692;0.94998771;
0.94999349;0.94999653;0.94999814;0.94999903;0.94999945;0.94999969;0.94999981;0.94999987;0.94999993;0.94999993;
0.71249998;0.47499996;0.37047717;0.3762092;0.44271737;0.53076792;0.6167078;0.68906057;0.74418688;0.78296328;
0.80844986;0.82426709;0.83363104;0.8389712;0.84193194;0.84354138;0.84440541;0.84486628;0.84511149;0.84524196;
0.8453114;0.84534842;0.84536815;0.84537858;0.84538412;0.84538698;0.84538847;0.84538925;0.84538966;0.84538984;
0.84538996;0.84539002;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;
0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;
0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;
0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;
0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.87154257;0.89769506;0.9173094;0.93038565;0.93855834;
0.94346189;0.94632232;0.94795686;0.94887626;0.94938707;0.94966799;0.94982123;0.9499042;0.94994891;0.94997287;
0.94998562;0.94999242;0.94999599;0.9499979;0.94999892;0.94999945;0.94999969;0.94999981;0.94999987;0.94999993;
0.71249998;0.47499996;0.36999035;0.37464845;0.43914226;0.5232594;0.60131025;0.6592285;0.6945529;0.71400642;
0.72468168;0.73077786;0.73431426;0.73631585;0.73740709;0.73798907;0.73829973;0.73846722;0.73855782;0.73860633;
0.73863196;0.73864543;0.73865253;0.73865628;0.73865825;0.73865926;0.7386598;0.7386601;0.73866022;0.73866028;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.79149526;0.84433019;0.88395637;0.91037381;0.92688471;
0.9367913;0.94257009;0.94587225;0.94772971;0.94876164;0.94932926;0.94963884;0.94980651;0.94989681;0.94994515;
0.94997096;0.94998467;0.94999194;0.94999576;0.94999778;0.94999886;0.94999939;0.94999969;0.94999981;0.94999987;
0.71249992;0.47499996;0.29687497;0.25072822;0.29835778;0.38833788;0.47710449;0.51282477;0.54216325;0.56676376;
0.57756722;0.58455706;0.5891397;0.5913704;0.59263456;0.59339321;0.59378201;0.59398937;0.59410745;0.59416926;
0.59420156;0.59421927;0.59422857;0.59423339;0.59423602;0.59423739;0.5942381;0.5942384;0.59423864;0.5942387;
0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;
0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;
0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;
0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;
0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.68317908;0.7721194;0.83882463;0.88329476;0.91108859;
0.92776489;0.93749273;0.94305152;0.94617832;0.94791543;0.94887084;0.94939196;0.94967425;0.94982624;0.94990766;
0.94995111;0.94997418;0.9499864;0.9499929;0.94999629;0.94999802;0.94999897;0.94999945;0.94999969;0.94999981;
0.71249986;0.4749999;0.29687494;0.17812598;0.17551391;0.24958149;0.34255159;0.37553561;0.40500575;0.41965836;
0.43137217;0.43351278;0.44056654;0.43564087;0.44285393;0.43359825;0.44152099;0.43250924;0.44075292;0.43222788;
0.44061604;0.43209714;0.4405396;0.43205869;0.44051766;0.43204772;0.44051197;0.43204427;0.44051006;0.43204319;
0.4405095;0.4320429;0.44050932;0.43204281;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;
0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;
0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;
0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;
0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.56999856;0.69737124;0.79237163;0.85552883;0.89493591;
0.91855371;0.9323197;0.94018126;0.94460136;0.94705606;0.94840568;0.94914162;0.9495402;0.94975483;0.94986975;
0.94993103;0.94996357;0.9499808;0.94998991;0.94999468;0.94999719;0.9499985;0.94999921;0.94999957;0.94999975;
0.71249986;0.4749999;0.29687494;0.17812496;0.10390623;0.063013941;0.10929843;0.20478493;0.25499123;0.25932163;
0.28812668;0.28808469;0.30500826;0.29546809;0.30990189;0.29946673;0.31178564;0.2998414;0.31218249;0.30042502;
0.3124072;0.30035505;0.31241921;0.30046356;0.31245402;0.3004306;0.31244826;0.30045375;0.31245464;0.30044383;
0.31245235;0.30044934;0.31245375;0.30044669;0.31245315;0.30044809;0.31245348;0.3004474;0.3124533;0.30044773;
0.31245339;0.30044758;0.31245333;0.30044764;0.31245336;0.30044758;0.31245336;0.30044764;0.31245339;0.30044764;
0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;
0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;
0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.47484148;0.63422811;0.75301772;0.83196068;0.88120627;
0.91071612;0.9279145;0.9377355;0.94325686;0.94632298;0.94800878;0.948928;0.94942582;0.9496938;0.94983733;
0.94991386;0.94995451;0.94997603;0.94998741;0.94999337;0.94999653;0.94999814;0.94999903;0.94999945;0.94999969;
0.71249986;0.4749999;0.29687494;0.17812496;0.10390623;0.059374988;0.033398431;0.018558927;0.077071562;0.13775903;
0.16907629;0.17390475;0.19630331;0.20163734;0.1901305;0.20778523;0.21097207;0.19699949;0.17682494;0.20223008;
0.2163346;0.20906454;0.18888699;0.20889707;0.21588069;0.20359606;0.18189704;0.20493542;0.21588051;0.20628239;
0.18529761;0.20692046;0.21587655;0.20485601;0.1834151;0.20582512;0.21585009;0.20556572;0.18433842;0.2063579;
0.21584341;0.20518148;0.18384178;0.20607033;0.21584097;0.20537566;0.18409392;0.20621616;0.21584107;0.2052746;
0.18396294;0.20614038;0.21584079;0.20532611;0.18402974;0.20617904;0.21584097;0.20529988;0.18399574;0.20615935;
0.21584088;0.20531325;0.1840131;0.20616941;0.215841;0.20530654;0.18400435;0.20616433;0.21584097;0.20531;
0.18400884;0.20616695;0.21584095;0.20530814;0.18400642;0.37017936;0.56167775;0.70663291;0.80371344;0.86455524;
0.90112686;0.92248803;0.93470633;0.94158429;0.94540775;0.94751167;0.94865972;0.94928181;0.94961685;0.94979644;
0.94989222;0.94994307;0.94997001;0.94998425;0.9499917;0.94999564;0.94999772;0.94999886;0.94999939;0.94999969;
0.71249986;0.4749999;0.29687494;0.17812496;0.10390623;0.059374988;0.033398431;0.018554684;0.010205076;0.0055664051;
0.0030151361;0.0016235348;0.00094350439;0.004923915;0.067135714;0.11608434;0.13493566;0.13089457;0.11473903;0.09494862;
0.078820735;0.11507607;0.13929966;0.14139009;0.12817976;0.10814263;0.088022158;0.075292498;0.11346488;0.13975716;
0.14318398;0.13053951;0.1105481;0.09016484;0.076800503;0.11429676;0.13998525;0.14303666;0.13021788;0.11018621;
0.089854404;0.076673627;0.11423995;0.13999313;0.14308576;0.13028514;0.11025658;0.089920238;0.076729223;0.11427168;
0.14000352;0.14308298;0.1302762;0.11024623;0.089911982;0.076728672;0.11427209;0.14000493;0.14308508;0.13027859;
0.11024863;0.089914382;0.076731361;0.1142737;0.14000557;0.14308512;0.13027835;0.11024833;0.089914165;0.076731503;
0.11427382;0.14000565;0.14308517;0.13027838;0.11024833;0.31517872;0.52511662;0.68382192;0.79004276;0.85658729;
0.89657658;0.91992974;0.93328559;0.94080317;0.94498175;0.947281;0.94853556;0.94921529;0.94958138;0.94977754;
0.94988215;0.94993776;0.94996727;0.94998282;0.94999099;0.94999528;0.94999754;0.94999874;0.94999933;0.94999963;
0.7124998;0.4749999;0.29687494;0.17812496;0.10390623;0.059374988;0.033398431;0.018554684;0.010205076;0.0055664051;
0.0030151361;0.0016235348;0.0008697508;0.00046386709;0.00024642941;0.00013046263;6.8855283e-05;3.6239624e-05;1.9025803e-05;9.9658973e-06;
5.2094465e-06;3.1543625e-06;1.6201902e-05;0.00020391071;0.0014688213;0.006118061;0.016360287;0.040130235;0.057569075;0.063840538;
0.061431937;0.054338913;0.045839205;0.038245931;0.03323492;0.032053582;0.034872673;0.040388189;0.046171222;0.05014414;
0.051457338;0.050432079;0.048023064;0.045344718;0.043301892;0.042379543;0.042707413;0.04395365;0.04549503;0.046708435;
0.047249153;0.047120776;0.046537437;0.045795169;0.045162164;0.04480695;0.044779789;0.045033835;0.045428775;0.045795597;
0.046017863;0.046063948;0.045964949;0.045787297;0.045604095;0.045472085;0.045419004;0.045442417;0.04551772;0.04561067;
0.045689844;0.045735255;0.045741513;0.045716014;0.045673762;0.27174476;0.49782628;0.66739011;0.78043354;0.85108602;
0.89347762;0.9182061;0.93233669;0.94028515;0.94470096;0.94712967;0.94845438;0.94917196;0.94955838;0.94976538;
0.94987583;0.94993448;0.94996554;0.94998193;0.94999051;0.94999504;0.94999743;0.94999868;0.94999933;0.94999963;
0.7124998;0.4749999;0.29687494;0.17812496;0.10390623;0.059374988;0.033398431;0.018554684;0.010205076;0.0055664051;
0.0030151361;0.0016235348;0.0008697508;0.00046386709;0.00024642941;0.00013046263;6.8855283e-05;3.6239624e-05;1.9025803e-05;9.9658973e-06;
5.2094465e-06;2.7179722e-06;1.4156105e-06;7.361175e-07;3.8221486e-07;1.9818549e-07;1.0263177e-07;5.3085401e-08;2.7427458e-08;1.4156107e-08;
7.299243e-09;3.7602161e-09;1.9354054e-09;9.9535136e-10;5.1150001e-10;2.6266217e-10;1.3478717e-10;6.9121625e-11;3.5424833e-11;1.8144427e-11;
9.2882186e-12;4.7521119e-12;2.4300572e-12;1.2420293e-12;6.3451496e-13;3.2400764e-13;1.653789e-13;8.4376991e-14;4.3032265e-14;2.1938018e-14;
1.1179951e-14;5.695447e-15;2.9004591e-15;1.4765974e-15;7.514826e-16;3.8233326e-16;1.944626e-16;9.8879291e-17;5.026364e-17;2.5543817e-17;
3.7064016e-08;1.3845496e-07;3.6226243e-07;7.9462131e-07;1.4701895e-06;2.5704474e-06;4.2691149e-06;6.6066668e-06;9.8834444e-06;1.4512781e-05;
2.0616517e-05;2.8063891e-05;3.785051e-05;5.0617222e-05;6.6360932e-05;0.2375537;0.4750371;0.65314865;0.77188939;0.84610224;
0.89062989;0.91660434;0.93144691;0.93979579;0.94443405;0.94698513;0.9483766;0.9491303;0.94953614;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
      };
     };
     float_Data @[10] {
      name="avg_l";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [5000] 0.1125;0.14889252;0.24589022;0.36897424;0.49165875;0.59944057;0.68685383;0.75381958;0.80290729;0.8376168;
0.86142516;0.87733608;0.88773239;0.89439374;0.89858985;0.9011941;0.90278935;0.90375543;0.90433455;0.90467858;
0.90488136;0.90499997;0.90506899;0.90510887;0.90513182;0.90514493;0.90515244;0.90515667;0.90515912;0.90516043;
0.9051612;0.90516162;0.90516186;0.90516198;0.90516204;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;
0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;
0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;
0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;
0.9051621;0.9051621;0.9051621;0.9051621;0.9051621;0.91637158;0.92758107;0.93598819;0.94159293;0.9450959;
0.94719768;0.94842368;0.94912422;0.94951832;0.94973725;0.94985771;0.9499234;0.94995898;0.94997811;0.94998837;
0.94999385;0.94999677;0.94999826;0.94999909;0.94999951;0.94999969;0.94999981;0.94999987;0.94999993;0.94999993;
0.71249998;0.54879391;0.49591464;0.51950932;0.58067113;0.6524421;0.71998835;0.77692324;0.82177567;0.85551286;
0.88004589;0.89743149;0.90950483;0.91775393;0.92331624;0.92702651;0.92947936;0.93108898;0.9321388;0.93282002;
0.93326008;0.93354338;0.93372524;0.93384165;0.93391597;0.93396342;0.93399364;0.93401289;0.93402505;0.9340328;
0.93403769;0.93404078;0.93404275;0.934044;0.93404478;0.93404531;0.93404561;0.93404579;0.93404591;0.93404603;
0.93404609;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;
0.93404615;0.93404615;0.93404615;0.93404615;0.93404615;0.93803459;0.94202304;0.94501442;0.94700861;0.948255;
0.94900286;0.94943911;0.94968843;0.94982862;0.94990653;0.94994938;0.94997275;0.94998538;0.94999218;0.94999582;
0.94999778;0.9499988;0.94999933;0.94999963;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;0.94999993;
0.71249998;0.54893839;0.49630913;0.52024299;0.58184743;0.65418774;0.72244084;0.78020638;0.82597566;0.86066329;
0.88612652;0.90437698;0.91721922;0.92612624;0.93223333;0.93638217;0.93917966;0.94105464;0.94230509;0.94313574;
0.94368565;0.94404876;0.94428802;0.94444537;0.94454879;0.94461668;0.94466114;0.94469023;0.9447093;0.94472176;
0.94472992;0.94473523;0.94473875;0.94474101;0.9447425;0.94474351;0.94474411;0.94474453;0.94474483;0.944745;
0.94474512;0.94474518;0.94474524;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;
0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;
0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;
0.9447453;0.9447453;0.9447453;0.9447453;0.9447453;0.94605899;0.94737267;0.94835794;0.94901478;0.94942528;
0.94967163;0.94981527;0.94989735;0.94994354;0.94996917;0.9499833;0.94999099;0.94999516;0.94999743;0.94999862;
0.94999927;0.94999957;0.94999975;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.71249998;0.54899138;0.49645358;0.52051008;0.58227122;0.65480804;0.72329909;0.78133827;0.82740432;0.86239588;
0.88815421;0.90667784;0.91976291;0.92887819;0.93515855;0.93944776;0.94235653;0.94431794;0.94563448;0.9465149;
0.94710195;0.94749236;0.94775152;0.9479233;0.94803697;0.94811213;0.94816178;0.94819456;0.9482162;0.9482305;
0.94823992;0.94824612;0.94825017;0.94825286;0.94825459;0.94825578;0.94825655;0.94825709;0.94825745;0.94825768;
0.9482578;0.94825792;0.94825798;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;
0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;
0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;
0.94825804;0.94825804;0.94825804;0.94825804;0.94825804;0.94869351;0.94912899;0.94945562;0.94967335;0.94980943;
0.94989109;0.94993871;0.94996595;0.94998127;0.9499898;0.94999444;0.94999701;0.94999838;0.94999915;0.94999957;
0.94999975;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.71249998;0.54897785;0.49641669;0.52044189;0.58216333;0.65465051;0.72308171;0.78105247;0.82704455;0.86196065;
0.88764572;0.90610164;0.91912651;0.92819023;0.93442756;0.93868184;0.94156295;0.9435029;0.94480294;0.9456709;
0.94624865;0.94663221;0.94688636;0.94705451;0.94716561;0.94723892;0.94728726;0.94731915;0.94734013;0.94735396;
0.94736302;0.94736898;0.94737291;0.94737554;0.9473772;0.94737834;0.94737911;0.94737959;0.94737995;0.94738019;
0.9473803;0.94738036;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;
0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;
0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;
0.94738042;0.94738042;0.94738042;0.94738042;0.94738042;0.9480353;0.94869018;0.94918138;0.94950879;0.94971347;
0.94983625;0.9499079;0.94994885;0.94997191;0.94998467;0.9499917;0.94999552;0.9499976;0.94999874;0.94999933;
0.94999963;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.71249998;0.54889762;0.49619785;0.52003664;0.58151841;0.65370303;0.7217654;0.77930945;0.82483649;0.85927469;
0.88449478;0.90251964;0.91516125;0.92389637;0.92986059;0.93389392;0.93660027;0.93840462;0.9396013;0.9403916;
0.94091165;0.94125295;0.94147635;0.94162232;0.94171751;0.94177955;0.94181991;0.94184619;0.9418633;0.94187438;
0.9418816;0.94188631;0.94188935;0.94189131;0.94189262;0.94189346;0.94189399;0.94189429;0.94189453;0.94189465;
0.94189477;0.94189483;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;
0.94189489;0.94189489;0.94189489;0.94189489;0.94189489;0.94392115;0.94594741;0.94746715;0.94848025;0.94911349;
0.94949341;0.94971502;0.94984168;0.94991291;0.94995248;0.94997424;0.9499861;0.94999254;0.94999599;0.94999784;
0.94999886;0.94999939;0.94999969;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;0.94999993;0.94999993;
0.71249998;0.54873747;0.49576014;0.51922023;0.58020258;0.65173668;0.71898133;0.77555394;0.81999975;0.85331047;
0.87742341;0.89441764;0.90614349;0.91409671;0.91941583;0.92293215;0.92523432;0.92672938;0.92769378;0.9283123;
0.92870712;0.92895806;0.92911702;0.92921746;0.9292807;0.92932045;0.92934537;0.92936099;0.92937076;0.92937684;
0.92938066;0.92938304;0.92938453;0.92938542;0.92938602;0.92938638;0.92938662;0.92938679;0.92938685;0.92938691;
0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;
0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;
0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;
0.92938697;0.92938697;0.92938697;0.92938697;0.92938697;0.93454021;0.93969345;0.94355839;0.94613504;0.94774544;
0.94871169;0.94927537;0.94959742;0.94977856;0.94987923;0.9499346;0.94996476;0.94998109;0.94998991;0.94999462;
0.94999719;0.9499985;0.94999921;0.94999957;0.94999975;0.94999981;0.94999987;0.94999993;0.94999993;0.94999993;
0.71249998;0.47716123;0.37444049;0.38130355;0.44867456;0.53790736;0.62594873;0.70180452;0.76199663;0.80707514;
0.83936989;0.86169142;0.87666583;0.88646072;0.89273071;0.89667004;0.89910543;0.90059006;0.90148413;0.90201676;
0.90233111;0.90251505;0.90262187;0.90268344;0.90271872;0.90273881;0.90275025;0.90275669;0.90276033;0.90276235;
0.90276349;0.90276408;0.90276444;0.90276462;0.90276468;0.90276474;0.9027648;0.9027648;0.9027648;0.9027648;
0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;
0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;
0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;
0.9027648;0.9027648;0.9027648;0.9027648;0.9027648;0.91457361;0.92638242;0.93523902;0.94114339;0.94483364;
0.94704777;0.94833934;0.94907743;0.94949257;0.94972324;0.94985008;0.94991928;0.94995677;0.94997692;0.94998771;
0.94999349;0.94999653;0.94999814;0.94999903;0.94999945;0.94999969;0.94999981;0.94999987;0.94999993;0.94999993;
0.71249998;0.47499996;0.37047717;0.3762092;0.44271737;0.53076792;0.6167078;0.68906057;0.74418688;0.78296328;
0.80844986;0.82426709;0.83363104;0.8389712;0.84193194;0.84354138;0.84440541;0.84486628;0.84511149;0.84524196;
0.8453114;0.84534842;0.84536815;0.84537858;0.84538412;0.84538698;0.84538847;0.84538925;0.84538966;0.84538984;
0.84538996;0.84539002;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;
0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;
0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;
0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;
0.84539008;0.84539008;0.84539008;0.84539008;0.84539008;0.87154257;0.89769506;0.9173094;0.93038565;0.93855834;
0.94346189;0.94632232;0.94795686;0.94887626;0.94938707;0.94966799;0.94982123;0.9499042;0.94994891;0.94997287;
0.94998562;0.94999242;0.94999599;0.9499979;0.94999892;0.94999945;0.94999969;0.94999981;0.94999987;0.94999993;
0.71249998;0.47499996;0.36999035;0.37464845;0.43914226;0.5232594;0.60131025;0.6592285;0.6945529;0.71400642;
0.72468168;0.73077786;0.73431426;0.73631585;0.73740709;0.73798907;0.73829973;0.73846722;0.73855782;0.73860633;
0.73863196;0.73864543;0.73865253;0.73865628;0.73865825;0.73865926;0.7386598;0.7386601;0.73866022;0.73866028;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;
0.73866034;0.73866034;0.73866034;0.73866034;0.73866034;0.79149526;0.84433019;0.88395637;0.91037381;0.92688471;
0.9367913;0.94257009;0.94587225;0.94772971;0.94876164;0.94932926;0.94963884;0.94980651;0.94989681;0.94994515;
0.94997096;0.94998467;0.94999194;0.94999576;0.94999778;0.94999886;0.94999939;0.94999969;0.94999981;0.94999987;
0.71249992;0.47499996;0.29687497;0.25072822;0.29835778;0.38833788;0.47710449;0.51282477;0.54216325;0.56676376;
0.57756722;0.58455706;0.5891397;0.5913704;0.59263456;0.59339321;0.59378201;0.59398937;0.59410745;0.59416926;
0.59420156;0.59421927;0.59422857;0.59423339;0.59423602;0.59423739;0.5942381;0.5942384;0.59423864;0.5942387;
0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;
0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;
0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;
0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;
0.59423876;0.59423876;0.59423876;0.59423876;0.59423876;0.68317908;0.7721194;0.83882463;0.88329476;0.91108859;
0.92776489;0.93749273;0.94305152;0.94617832;0.94791543;0.94887084;0.94939196;0.94967425;0.94982624;0.94990766;
0.94995111;0.94997418;0.9499864;0.9499929;0.94999629;0.94999802;0.94999897;0.94999945;0.94999969;0.94999981;
0.71249986;0.4749999;0.29687494;0.17812598;0.17551391;0.24958149;0.34255159;0.37553561;0.40500575;0.41965836;
0.43137217;0.43351278;0.44056654;0.43564087;0.44285393;0.43359825;0.44152099;0.43250924;0.44075292;0.43222788;
0.44061604;0.43209714;0.4405396;0.43205869;0.44051766;0.43204772;0.44051197;0.43204427;0.44051006;0.43204319;
0.4405095;0.4320429;0.44050932;0.43204281;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;
0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;
0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;
0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.43204278;
0.44050926;0.43204278;0.44050926;0.43204278;0.44050926;0.56999856;0.69737124;0.79237163;0.85552883;0.89493591;
0.91855371;0.9323197;0.94018126;0.94460136;0.94705606;0.94840568;0.94914162;0.9495402;0.94975483;0.94986975;
0.94993103;0.94996357;0.9499808;0.94998991;0.94999468;0.94999719;0.9499985;0.94999921;0.94999957;0.94999975;
0.71249986;0.4749999;0.29687494;0.17812496;0.10390623;0.063013941;0.10929843;0.20478493;0.25499123;0.25932163;
0.28812668;0.28808469;0.30500826;0.29546809;0.30990189;0.29946673;0.31178564;0.2998414;0.31218249;0.30042502;
0.3124072;0.30035505;0.31241921;0.30046356;0.31245402;0.3004306;0.31244826;0.30045375;0.31245464;0.30044383;
0.31245235;0.30044934;0.31245375;0.30044669;0.31245315;0.30044809;0.31245348;0.3004474;0.3124533;0.30044773;
0.31245339;0.30044758;0.31245333;0.30044764;0.31245336;0.30044758;0.31245336;0.30044764;0.31245339;0.30044764;
0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;
0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.30044764;
0.31245339;0.30044764;0.31245339;0.30044764;0.31245339;0.47484148;0.63422811;0.75301772;0.83196068;0.88120627;
0.91071612;0.9279145;0.9377355;0.94325686;0.94632298;0.94800878;0.948928;0.94942582;0.9496938;0.94983733;
0.94991386;0.94995451;0.94997603;0.94998741;0.94999337;0.94999653;0.94999814;0.94999903;0.94999945;0.94999969;
0.71249986;0.4749999;0.29687494;0.17812496;0.10390623;0.059374988;0.033398431;0.018558927;0.077071562;0.13775903;
0.16907629;0.17390475;0.19630331;0.20163734;0.1901305;0.20778523;0.21097207;0.19699949;0.17682494;0.20223008;
0.2163346;0.20906454;0.18888699;0.20889707;0.21588069;0.20359606;0.18189704;0.20493542;0.21588051;0.20628239;
0.18529761;0.20692046;0.21587655;0.20485601;0.1834151;0.20582512;0.21585009;0.20556572;0.18433842;0.2063579;
0.21584341;0.20518148;0.18384178;0.20607033;0.21584097;0.20537566;0.18409392;0.20621616;0.21584107;0.2052746;
0.18396294;0.20614038;0.21584079;0.20532611;0.18402974;0.20617904;0.21584097;0.20529988;0.18399574;0.20615935;
0.21584088;0.20531325;0.1840131;0.20616941;0.215841;0.20530654;0.18400435;0.20616433;0.21584097;0.20531;
0.18400884;0.20616695;0.21584095;0.20530814;0.18400642;0.37017936;0.56167775;0.70663291;0.80371344;0.86455524;
0.90112686;0.92248803;0.93470633;0.94158429;0.94540775;0.94751167;0.94865972;0.94928181;0.94961685;0.94979644;
0.94989222;0.94994307;0.94997001;0.94998425;0.9499917;0.94999564;0.94999772;0.94999886;0.94999939;0.94999969;
0.71249986;0.4749999;0.29687494;0.17812496;0.10390623;0.059374988;0.033398431;0.018554684;0.010205076;0.0055664051;
0.0030151361;0.0016235348;0.00094350439;0.004923915;0.067135714;0.11608434;0.13493566;0.13089457;0.11473903;0.09494862;
0.078820735;0.11507607;0.13929966;0.14139009;0.12817976;0.10814263;0.088022158;0.075292498;0.11346488;0.13975716;
0.14318398;0.13053951;0.1105481;0.09016484;0.076800503;0.11429676;0.13998525;0.14303666;0.13021788;0.11018621;
0.089854404;0.076673627;0.11423995;0.13999313;0.14308576;0.13028514;0.11025658;0.089920238;0.076729223;0.11427168;
0.14000352;0.14308298;0.1302762;0.11024623;0.089911982;0.076728672;0.11427209;0.14000493;0.14308508;0.13027859;
0.11024863;0.089914382;0.076731361;0.1142737;0.14000557;0.14308512;0.13027835;0.11024833;0.089914165;0.076731503;
0.11427382;0.14000565;0.14308517;0.13027838;0.11024833;0.31517872;0.52511662;0.68382192;0.79004276;0.85658729;
0.89657658;0.91992974;0.93328559;0.94080317;0.94498175;0.947281;0.94853556;0.94921529;0.94958138;0.94977754;
0.94988215;0.94993776;0.94996727;0.94998282;0.94999099;0.94999528;0.94999754;0.94999874;0.94999933;0.94999963;
0.7124998;0.4749999;0.29687494;0.17812496;0.10390623;0.059374988;0.033398431;0.018554684;0.010205076;0.0055664051;
0.0030151361;0.0016235348;0.0008697508;0.00046386709;0.00024642941;0.00013046263;6.8855283e-05;3.6239624e-05;1.9025803e-05;9.9658973e-06;
5.2094465e-06;3.1543625e-06;1.6201902e-05;0.00020391071;0.0014688213;0.006118061;0.016360287;0.040130235;0.057569075;0.063840538;
0.061431937;0.054338913;0.045839205;0.038245931;0.03323492;0.032053582;0.034872673;0.040388189;0.046171222;0.05014414;
0.051457338;0.050432079;0.048023064;0.045344718;0.043301892;0.042379543;0.042707413;0.04395365;0.04549503;0.046708435;
0.047249153;0.047120776;0.046537437;0.045795169;0.045162164;0.04480695;0.044779789;0.045033835;0.045428775;0.045795597;
0.046017863;0.046063948;0.045964949;0.045787297;0.045604095;0.045472085;0.045419004;0.045442417;0.04551772;0.04561067;
0.045689844;0.045735255;0.045741513;0.045716014;0.045673762;0.27174476;0.49782628;0.66739011;0.78043354;0.85108602;
0.89347762;0.9182061;0.93233669;0.94028515;0.94470096;0.94712967;0.94845438;0.94917196;0.94955838;0.94976538;
0.94987583;0.94993448;0.94996554;0.94998193;0.94999051;0.94999504;0.94999743;0.94999868;0.94999933;0.94999963;
0.7124998;0.4749999;0.29687494;0.17812496;0.10390623;0.059374988;0.033398431;0.018554684;0.010205076;0.0055664051;
0.0030151361;0.0016235348;0.0008697508;0.00046386709;0.00024642941;0.00013046263;6.8855283e-05;3.6239624e-05;1.9025803e-05;9.9658973e-06;
5.2094465e-06;2.7179722e-06;1.4156105e-06;7.361175e-07;3.8221486e-07;1.9818549e-07;1.0263177e-07;5.3085401e-08;2.7427458e-08;1.4156107e-08;
7.299243e-09;3.7602161e-09;1.9354054e-09;9.9535136e-10;5.1150001e-10;2.6266217e-10;1.3478717e-10;6.9121625e-11;3.5424833e-11;1.8144427e-11;
9.2882186e-12;4.7521119e-12;2.4300572e-12;1.2420293e-12;6.3451496e-13;3.2400764e-13;1.653789e-13;8.4376991e-14;4.3032265e-14;2.1938018e-14;
1.1179951e-14;5.695447e-15;2.9004591e-15;1.4765974e-15;7.514826e-16;3.8233326e-16;1.944626e-16;9.8879291e-17;5.026364e-17;2.5543817e-17;
3.7064016e-08;1.3845496e-07;3.6226243e-07;7.9462131e-07;1.4701895e-06;2.5704474e-06;4.2691149e-06;6.6066668e-06;9.8834444e-06;1.4512781e-05;
2.0616517e-05;2.8063891e-05;3.785051e-05;5.0617222e-05;6.6360932e-05;0.2375537;0.4750371;0.65314865;0.77188939;0.84610224;
0.89062989;0.91660434;0.93144691;0.93979579;0.94443405;0.94698513;0.9483766;0.9491303;0.94953614;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
0.71249974;0.47499985;0.29687491;0.17812495;0.10390622;0.059374984;0.033398427;0.018554682;0.010205075;0.0055664047;
0.0030151359;0.0016235347;0.00086975074;0.00046386707;0.00024642938;0.00013046261;6.8855268e-05;3.6239617e-05;1.90258e-05;9.9658955e-06;
5.2094456e-06;2.7179717e-06;1.4156103e-06;7.3611739e-07;3.8221481e-07;1.9818546e-07;1.0263176e-07;5.3085394e-08;2.7427454e-08;1.4156106e-08;
7.2992421e-09;3.7602157e-09;1.9354052e-09;9.9535125e-10;5.1149995e-10;2.6266214e-10;1.3478715e-10;6.9121618e-11;3.542483e-11;1.8144425e-11;
9.2882178e-12;4.7521115e-12;2.430057e-12;1.2420292e-12;6.345149e-13;3.2400761e-13;1.6537889e-13;8.4376984e-14;4.3032262e-14;2.1938016e-14;
1.1179951e-14;5.6954466e-15;2.9004589e-15;1.4765973e-15;7.5148255e-16;3.8233323e-16;1.9446259e-16;9.8879284e-17;5.0263637e-17;2.5543815e-17;
1.2977906e-17;6.5919524e-18;3.3474759e-18;1.6994878e-18;8.6261879e-19;4.3774688e-19;2.2209215e-19;1.1265543e-19;5.7132396e-20;2.8968537e-20;
1.4685438e-20;7.443304e-21;3.7719444e-21;1.9111184e-21;9.6813231e-22;0.2375;0.47499996;0.65312493;0.77187496;0.84609377;
0.890625;0.91660154;0.9314453;0.9397949;0.94443357;0.94698483;0.94837642;0.94913024;0.94953609;0.94975352;
0.94986951;0.94993114;0.94996375;0.94998097;0.94999003;0.9499948;0.94999731;0.94999862;0.94999927;0.94999957;
      };
     };
     float_Data @[11] {
      name="spike";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [5000] 0;1;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;1;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;1;0;
0;0;0;0;0;1;0;0;0;0;
0;0;1;0;0;0;0;0;0;1;
0;0;0;0;0;0;1;0;0;0;
0;0;0;1;0;0;0;0;0;0;
1;0;0;0;0;0;0;1;0;0;
0;0;0;0;1;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;1;0;
0;0;0;0;0;1;0;0;0;0;
0;0;1;0;0;0;0;0;0;1;
0;0;0;0;0;0;1;0;0;0;
0;0;0;1;0;0;0;0;0;0;
1;0;0;0;0;0;0;1;0;0;
0;0;0;0;1;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;1;0;
0;0;0;0;0;1;0;0;0;0;
0;0;1;0;0;0;0;0;0;1;
0;0;0;0;0;0;1;0;0;0;
0;0;0;1;0;0;0;0;0;0;
1;0;0;0;0;0;0;1;0;0;
0;0;0;0;1;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;1;0;
0;0;0;0;0;1;0;0;0;0;
0;0;1;0;0;0;0;0;0;1;
0;0;0;0;0;0;1;0;0;0;
0;0;0;1;0;0;0;0;0;0;
1;0;0;0;0;0;0;1;0;0;
0;0;0;0;1;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
      };
     };
     float_Data @[12] {
      name="adapt";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [5000] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
      };
     };
     float_Data @[13] {
      name="syn_tr";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [5000] 1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
      };
     };
     float_Data @[14] {
      name="syn_nr";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [5000] 1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
      };
     };
     float_Data @[15] {
      name="syn_pr";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [5000] 0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;0.2;
      };
     };
     float_Data @[16] {
      name="syn_kre";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [5000] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
      };
     };
     float_Data @[17] {
      name="vm_eq";
      col_flags=MARK|PIN|SAVE_DATA|AUTO_WIDTH;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=8;
      matrix_col_width=10;
      ar {
       name="ar";
      [5000] 0.45865801;0.52540976;0.57208335;0.59443772;0.59858131;0.59252828;0.58244377;0.57198101;0.56285566;0.55560732;
0.5501799;0.54627794;0.54355437;0.54169518;0.54044771;0.53962189;0.5390811;0.53873003;0.53850377;0.53835881;
0.53826642;0.53820771;0.53817058;0.53814715;0.53813243;0.53812313;0.53811735;0.53811371;0.53811145;0.53811002;
0.53810912;0.53810859;0.53810823;0.53810799;0.53810787;0.53810775;0.53810769;0.53810769;0.53810769;0.53810769;
0.53810769;0.53810769;0.53810769;0.53810769;0.53810769;0.53810769;0.53810769;0.53810769;0.53810769;0.53810769;
0.53810769;0.53810769;0.53810769;0.53810769;0.53810769;0.53810769;0.53810769;0.53810769;0.53810769;0.53810769;
0.53810769;0.53810769;0.53810769;0.53810769;0.53810769;0.53810769;0.53810769;0.53810769;0.53810769;0.53810769;
0.53810769;0.53810769;0.53810769;0.53810769;0.53810769;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.4429239;0.51256394;0.56697929;0.59696907;0.60681272;0.60445094;0.59655589;0.58729678;0.5787636;0.57174021;
0.56632638;0.56232625;0.55945575;0.55743903;0.55604452;0.55509204;0.55444777;0.55401546;0.55372727;0.55353624;
0.55341017;0.55332732;0.55327308;0.55323768;0.55321461;0.55319965;0.55318993;0.55318367;0.55317962;0.553177;
0.55317533;0.55317426;0.55317354;0.55317312;0.55317283;0.55317265;0.55317253;0.55317247;0.55317241;0.55317235;
0.55317235;0.55317235;0.55317235;0.55317235;0.55317235;0.55317235;0.55317235;0.55317235;0.55317235;0.55317235;
0.55317235;0.55317235;0.55317235;0.55317235;0.55317235;0.55317235;0.55317235;0.55317235;0.55317235;0.55317235;
0.55317235;0.55317235;0.55317235;0.55317235;0.55317235;0.55317235;0.55317235;0.55317235;0.55317235;0.55317235;
0.55317235;0.55317235;0.55317235;0.55317235;0.55317235;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.447256;0.52106375;0.57807183;0.60902977;0.61880594;0.61594236;0.60748017;0.59774297;0.58885223;0.58157361;
0.57597828;0.57184619;0.56887668;0.56678355;0.5653289;0.56432879;0.56364691;0.5631851;0.56287396;0.56266522;
0.56252569;0.56243271;0.56237096;0.56232995;0.56230283;0.56228489;0.56227309;0.56226528;0.56226015;0.56225675;
0.56225455;0.56225312;0.56225216;0.56225151;0.56225109;0.56225085;0.56225067;0.56225055;0.56225044;0.56225038;
0.56225038;0.56225038;0.56225038;0.56225038;0.56225038;0.56225038;0.56225038;0.56225038;0.56225038;0.56225038;
0.56225038;0.56225038;0.56225038;0.56225038;0.56225038;0.56225038;0.56225038;0.56225038;0.56225038;0.56225038;
0.56225038;0.56225038;0.56225038;0.56225038;0.56225038;0.56225038;0.56225038;0.56225038;0.56225038;0.56225038;
0.56225038;0.56225038;0.56225038;0.56225038;0.56225038;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.44902229;0.52450621;0.58252996;0.61383975;0.62355775;0.62047553;0.61178243;0.6018604;0.59283942;0.58547443;
0.57982278;0.57565314;0.57265747;0.57054508;0.56907558;0.56806368;0.56737226;0.5669027;0.56658536;0.56637174;
0.56622839;0.56613243;0.56606841;0.56602573;0.5659973;0.56597841;0.56596589;0.56595761;0.56595206;0.56594843;
0.56594604;0.56594443;0.56594336;0.56594265;0.56594217;0.56594187;0.56594169;0.56594157;0.56594151;0.56594145;
0.56594139;0.56594139;0.56594139;0.56594139;0.56594139;0.56594139;0.56594139;0.56594139;0.56594139;0.56594139;
0.56594139;0.56594139;0.56594139;0.56594139;0.56594139;0.56594139;0.56594139;0.56594139;0.56594139;0.56594139;
0.56594139;0.56594139;0.56594139;0.56594139;0.56594139;0.56594139;0.56594139;0.56594139;0.56594139;0.56594139;
0.56594139;0.56594139;0.56594139;0.56594139;0.56594139;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.44856107;0.52360857;0.5813694;0.61258972;0.62232453;0.61930013;0.61066729;0.600793;0.59180528;0.58446199;
0.57882416;0.57466358;0.57167411;0.56956619;0.56810015;0.56709099;0.56640178;0.56593406;0.56561816;0.56540567;
0.56526327;0.56516808;0.56510454;0.56506228;0.56503421;0.56501555;0.56500322;0.56499505;0.56498963;0.56498605;
0.56498367;0.56498212;0.5649811;0.56498039;0.56497991;0.56497961;0.56497943;0.56497931;0.56497926;0.5649792;
0.56497914;0.56497914;0.56497914;0.56497914;0.56497914;0.56497914;0.56497914;0.56497914;0.56497914;0.56497914;
0.56497914;0.56497914;0.56497914;0.56497914;0.56497914;0.56497914;0.56497914;0.56497914;0.56497914;0.56497914;
0.56497914;0.56497914;0.56497914;0.56497914;0.56497914;0.56497914;0.56497914;0.56497914;0.56497914;0.56497914;
0.56497914;0.56497914;0.56497914;0.56497914;0.56497914;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.44596469;0.51853853;0.57478899;0.60547411;0.61528176;0.61257297;0.6042797;0.59468114;0.58589095;0.57868147;
0.57313323;0.56903398;0.56608832;0.56401318;0.5625726;0.5615837;0.5609107;0.56045592;0.56015033;0.559946;
0.55980986;0.5597195;0.55965966;0.55962014;0.55959409;0.55957693;0.55956566;0.55955827;0.55955344;0.55955029;
0.5595482;0.55954683;0.55954593;0.5595454;0.55954504;0.5595448;0.55954462;0.5595445;0.55954444;0.55954438;
0.55954438;0.55954438;0.55954438;0.55954438;0.55954438;0.55954438;0.55954438;0.55954438;0.55954438;0.55954438;
0.55954438;0.55954438;0.55954438;0.55954438;0.55954438;0.55954438;0.55954438;0.55954438;0.55954438;0.55954438;
0.55954438;0.55954438;0.55954438;0.55954438;0.55954438;0.55954438;0.55954438;0.55954438;0.55954438;0.55954438;
0.55954438;0.55954438;0.55954438;0.55954438;0.55954438;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.44139853;0.509552;0.56301975;0.59263229;0.60247338;0.60027593;0.59258097;0.58349979;0.57510775;0.56819206;
0.56286043;0.55892396;0.55610353;0.55412644;0.55276334;0.5518356;0.5512107;0.55079329;0.55051643;0.55033392;
0.55021417;0.55013597;0.55008507;0.55005211;0.55003077;0.550017;0.55000818;0.55000252;0.54999888;0.54999655;
0.54999506;0.54999411;0.54999352;0.54999316;0.54999292;0.54999274;0.54999262;0.54999256;0.5499925;0.5499925;
0.5499925;0.5499925;0.5499925;0.5499925;0.5499925;0.5499925;0.5499925;0.5499925;0.5499925;0.5499925;
0.5499925;0.5499925;0.5499925;0.5499925;0.5499925;0.5499925;0.5499925;0.5499925;0.5499925;0.5499925;
0.5499925;0.5499925;0.5499925;0.5499925;0.5499925;0.5499925;0.5499925;0.5499925;0.5499925;0.5499925;
0.5499925;0.5499925;0.5499925;0.5499925;0.5499925;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.43507066;0.49695051;0.55772585;0.59638906;0.61134851;0.60962123;0.59931928;0.58634913;0.57401323;0.56371158;
0.55574334;0.54988474;0.54572928;0.54285926;0.54091686;0.5396229;0.53877157;0.53821707;0.53785872;0.53762865;
0.53748173;0.53738832;0.53732914;0.53729177;0.53726822;0.53725344;0.53724414;0.5372383;0.53723466;0.5372324;
0.53723097;0.53723007;0.53722954;0.53722918;0.53722894;0.53722882;0.53722876;0.5372287;0.53722864;0.53722864;
0.53722864;0.53722864;0.53722864;0.53722864;0.53722864;0.53722864;0.53722864;0.53722864;0.53722864;0.53722864;
0.53722864;0.53722864;0.53722864;0.53722864;0.53722864;0.53722864;0.53722864;0.53722864;0.53722864;0.53722864;
0.53722864;0.53722864;0.53722864;0.53722864;0.53722864;0.53722864;0.53722864;0.53722864;0.53722864;0.53722864;
0.53722864;0.53722864;0.53722864;0.53722864;0.53722864;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.42732954;0.48130131;0.53612769;0.57178128;0.58615756;0.58520377;0.57617962;0.56456512;0.55354416;0.54451859;
0.53777969;0.53305352;0.52987325;0.52778584;0.52643269;0.52555907;0.52499449;0.52462846;0.5243904;0.52423519;
0.52413386;0.52406764;0.52402443;0.52399617;0.5239777;0.52396566;0.52395779;0.52395266;0.52394933;0.52394712;
0.52394569;0.52394474;0.52394414;0.52394372;0.52394348;0.52394331;0.52394319;0.52394313;0.52394307;0.52394307;
0.52394307;0.52394307;0.52394307;0.52394307;0.52394307;0.52394307;0.52394307;0.52394307;0.52394307;0.52394307;
0.52394307;0.52394307;0.52394307;0.52394307;0.52394307;0.52394307;0.52394307;0.52394307;0.52394307;0.52394307;
0.52394307;0.52394307;0.52394307;0.52394307;0.52394307;0.52394307;0.52394307;0.52394307;0.52394307;0.52394307;
0.52394307;0.52394307;0.52394307;0.52394307;0.52394307;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.41871944;0.46359372;0.51081312;0.54199344;0.55487454;0.55441105;0.54699749;0.53780311;0.53012145;0.52499437;
0.52173465;0.51954025;0.51798236;0.51686931;0.51608765;0.51554567;0.51517022;0.51490891;0.51472646;0.51459908;
0.51451027;0.51444834;0.51440525;0.51437521;0.51435423;0.51433963;0.51432943;0.51432234;0.51431739;0.51431394;
0.51431149;0.51430982;0.51430863;0.5143078;0.51430726;0.51430684;0.51430655;0.51430637;0.51430625;0.51430613;
0.51430607;0.51430601;0.51430601;0.51430601;0.51430601;0.51430601;0.51430601;0.51430601;0.51430601;0.51430601;
0.51430601;0.51430601;0.51430601;0.51430601;0.51430601;0.51430601;0.51430601;0.51430601;0.51430601;0.51430601;
0.51430601;0.51430601;0.51430601;0.51430601;0.51430601;0.51430601;0.51430601;0.51430601;0.51430601;0.51430601;
0.51430601;0.51430601;0.51430601;0.51430601;0.51430601;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.40994164;0.44521418;0.48400402;0.52076691;0.54132962;0.54557592;0.53926623;0.52975827;0.52693683;0.52315456;
0.51910138;0.5168581;0.51499176;0.51348901;0.51243615;0.51163667;0.51102525;0.51057225;0.51023263;0.50997651;
0.5097847;0.50964087;0.50953281;0.50945175;0.50939095;0.50934535;0.50931108;0.50928539;0.50926614;0.50925165;
0.50924081;0.50923264;0.50922656;0.50922197;0.50921851;0.50921595;0.50921398;0.50921255;0.50921148;0.50921065;
0.50921005;0.50920957;0.50920922;0.50920898;0.5092088;0.50920862;0.5092085;0.50920844;0.50920838;0.50920832;
0.50920826;0.50920826;0.50920826;0.50920826;0.50920826;0.50920826;0.50920826;0.50920826;0.50920826;0.50920826;
0.50920826;0.50920826;0.50920826;0.50920826;0.50920826;0.50920826;0.50920826;0.50920826;0.50920826;0.50920826;
0.50920826;0.50920826;0.50920826;0.50920826;0.50920826;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.40171361;0.42768592;0.45793837;0.48742861;0.51478219;0.52742851;0.52619666;0.51848418;0.51775789;0.51526856;
0.5138638;0.51214284;0.51159966;0.51006889;0.51046365;0.50889552;0.51007938;0.50853324;0.5098151;0.50833207;
0.50961912;0.5081737;0.5095011;0.50807881;0.5094232;0.50801659;0.50937259;0.50797606;0.50933987;0.50794983;
0.50931859;0.50793284;0.50930482;0.50792181;0.50929588;0.5079146;0.50929004;0.50790995;0.50928628;0.50790697;
0.5092839;0.50790507;0.50928235;0.50790381;0.50928134;0.50790298;0.50928062;0.50790238;0.50928015;0.50790203;
0.50927985;0.50790179;0.50927967;0.50790167;0.50927955;0.50790155;0.50927949;0.50790149;0.50927943;0.50790143;
0.50927937;0.50790143;0.50927937;0.50790143;0.50927937;0.50790143;0.50927937;0.50790143;0.50927937;0.50790143;
0.50927937;0.50790143;0.50927937;0.50790143;0.50927937;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.39458206;0.41225883;0.43460101;0.45704457;0.47830519;0.49807444;0.51575768;0.52000296;0.51339364;0.51076138;
0.5130766;0.51006103;0.51078558;0.50825179;0.50965703;0.50712746;0.5084843;0.5062272;0.50782198;0.50561672;
0.50723684;0.50514823;0.50686669;0.50482166;0.50656933;0.50457734;0.50636828;0.50440401;0.50621504;0.50427634;
0.50610769;0.50418472;0.50602794;0.50411785;0.50597107;0.50406957;0.50592935;0.5040344;0.50589931;0.50400901;
0.50587744;0.50399053;0.50586158;0.50397712;0.50585008;0.5039674;0.50584173;0.50396037;0.50583571;0.50395525;
0.5058313;0.50395155;0.50582814;0.50394887;0.50582582;0.5039469;0.50582415;0.50394553;0.50582296;0.50394452;
0.50582206;0.50394374;0.50582141;0.5039432;0.50582099;0.50394285;0.50582063;0.50394255;0.50582039;0.50394231;
0.50582021;0.50394219;0.5058201;0.50394207;0.50581998;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.38881111;0.39961541;0.41520169;0.43141353;0.44707376;0.46186817;0.47574499;0.48873094;0.50087333;0.50133312;
0.49887624;0.49828574;0.50003487;0.49813104;0.4980239;0.50018793;0.49782586;0.49732116;0.49936947;0.50279933;
0.49944812;0.49733868;0.49812946;0.50110471;0.49818328;0.49694926;0.49852517;0.50193834;0.49878171;0.49708253;
0.49826002;0.50147367;0.49843022;0.4969722;0.49836677;0.50170255;0.49859914;0.49701568;0.49830148;0.50158042;
0.49850845;0.49699014;0.49833333;0.50164324;0.498555;0.49700284;0.49831659;0.50161082;0.49853098;0.49699622;
0.4983252;0.50162756;0.49854338;0.49699962;0.49832085;0.50161904;0.49853706;0.49699789;0.49832308;0.50162339;
0.49854028;0.49699879;0.49832195;0.50162119;0.49853867;0.49699834;0.49832252;0.50162232;0.49853951;0.49699858;
0.49832222;0.50162172;0.49853906;0.49699843;0.49832237;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.38439319;0.38983989;0.40003595;0.41114476;0.42208827;0.43256551;0.44250798;0.45191652;0.46081188;0.46921965;
0.47716588;0.48467568;0.49177295;0.49846876;0.50409722;0.49961606;0.49480873;0.49257872;0.49282396;0.49486637;
0.49801996;0.50138259;0.49689996;0.49329084;0.49221444;0.49330762;0.49590746;0.49932185;0.50241029;0.49774316;
0.49383888;0.49250686;0.49341094;0.49587759;0.49920544;0.50228155;0.49764416;0.49379069;0.49250102;0.49343488;
0.49592039;0.4992559;0.50231659;0.49767354;0.49381131;0.4925139;0.49344188;0.49592307;0.49925536;0.50231397;
0.49767178;0.4938111;0.49251491;0.49344373;0.49592537;0.49925768;0.5023154;0.49767303;0.49381208;0.49251565;
0.49344426;0.49592575;0.49925789;0.5023154;0.49767306;0.49381217;0.49251577;0.49344438;0.49592587;0.49925801;
0.50231546;0.49767309;0.49381217;0.49251577;0.49344441;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.38115317;0.38261747;0.38873845;0.39591628;0.40315306;0.41016608;0.41688237;0.42329103;0.42939919;0.43521893;
0.44076321;0.44604492;0.45107642;0.45586956;0.46043563;0.4647854;0.46892908;0.47287646;0.47663683;0.48021907;
0.48363158;0.48688242;0.48997918;0.49292704;0.49570712;0.49817464;0.4999181;0.50044018;0.49822006;0.49598593;
0.49468988;0.49438685;0.49485639;0.49583468;0.49705163;0.49821416;0.49900651;0.49922302;0.49888638;0.49825808;
0.49764827;0.49726486;0.49717432;0.49733561;0.49764258;0.49797112;0.49821964;0.4983173;0.49825937;0.49810115;
0.49792519;0.49779809;0.49774826;0.49777272;0.4978469;0.49793732;0.49801356;0.49805552;0.49805552;0.49802262;
0.49797651;0.49793616;0.49791262;0.49790898;0.49792165;0.49794307;0.49796489;0.49798056;0.49798694;0.49798432;
0.49797562;0.49796483;0.49795559;0.49795029;0.49794954;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37884936;0.37745467;0.38061473;0.38489836;0.38936788;0.39375719;0.3979938;0.40206179;0.40596163;0.40969849;
0.41327864;0.4167085;0.41999432;0.42314214;0.42615774;0.42904672;0.43181434;0.43446574;0.43700576;0.43943912;
0.44177029;0.44400352;0.44614297;0.44819257;0.45015609;0.45203713;0.45383918;0.45556554;0.45721939;0.45880377;
0.46032164;0.46177572;0.46316874;0.46450326;0.46578172;0.4670065;0.46817985;0.46930391;0.47038075;0.47141236;
0.47240067;0.47334746;0.47425449;0.47512341;0.47595584;0.47675332;0.47751731;0.47824919;0.47895035;0.47962207;
0.48026556;0.48088202;0.48147258;0.48203835;0.48258036;0.48309961;0.48359704;0.48407358;0.48453012;0.48496747;
0.48538646;0.48578784;0.48617235;0.48654068;0.4868935;0.48723146;0.48755512;0.48786503;0.48816174;0.48844573;
0.48871741;0.48897722;0.4892256;0.48946279;0.48968905;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.3772465;0.37384924;0.37491792;0.37713864;0.37961677;0.38209945;0.38451603;0.38684857;0.38909429;0.39125481;
0.39333287;0.3953315;0.39725366;0.3991023;0.40088022;0.4025901;0.40423456;0.40581611;0.40733716;0.40880001;
0.41020688;0.41155994;0.41286123;0.41411272;0.41531634;0.4164739;0.41758716;0.41865784;0.41968757;0.4206779;
0.42163032;0.42254633;0.42342728;0.42427453;0.42508936;0.42587301;0.42662668;0.42735153;0.42804864;0.42871907;
0.42936385;0.42998397;0.43058038;0.43115395;0.43170559;0.43223611;0.43274632;0.43323702;0.43370894;0.43416283;
0.43459934;0.43501914;0.4354229;0.43581119;0.43618464;0.43654379;0.4368892;0.43722141;0.43754089;0.43784815;
0.43814367;0.43842787;0.43870118;0.43896407;0.43921688;0.43946004;0.43969387;0.43991876;0.44013506;0.44034308;
0.44054314;0.44073555;0.44092059;0.44109854;0.4412697;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37614727;0.37137032;0.37098986;0.3717722;0.37285283;0.37398857;0.37511075;0.37620065;0.37725389;0.37827018;
0.37925038;0.38019565;0.38110718;0.3819862;0.38283384;0.38365123;0.38443944;0.38519952;0.38593245;0.38663921;
0.38732076;0.38797799;0.38861176;0.38922289;0.3898122;0.3903805;0.39092851;0.39145696;0.39196655;0.39245793;
0.39293179;0.39338872;0.39382935;0.39425424;0.39466396;0.39505908;0.39544007;0.39580747;0.39616176;0.39650342;
0.39683285;0.39715055;0.39745688;0.39775231;0.3980372;0.39831188;0.39857677;0.3988322;0.39907852;0.39931604;
0.3995451;0.39976597;0.39997897;0.40018436;0.40038243;0.40057343;0.40075761;0.4009352;0.40110645;0.40127158;
0.40143085;0.40158442;0.4017325;0.40187532;0.402013;0.4021458;0.40227386;0.40239733;0.40251639;0.40263122;
0.40274194;0.40284872;0.40295169;0.40305096;0.40314668;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.3753995;0.36968103;0.3683078;0.36810064;0.36821565;0.36841655;0.36863631;0.36885595;0.36907023;0.36927783;
0.36947855;0.36967251;0.3698599;0.37004095;0.37021583;0.37038478;0.37054801;0.37070569;0.37085801;0.37100518;
0.37114733;0.37128466;0.37141734;0.37154552;0.37166935;0.37178895;0.37190449;0.37201613;0.37212396;0.37222815;
0.37232879;0.372426;0.37251991;0.37261066;0.37269831;0.37278298;0.37286478;0.37294382;0.37302017;0.37309393;
0.37316519;0.373234;0.37330049;0.37336472;0.37342677;0.3734867;0.3735446;0.37360054;0.37365457;0.37370679;
0.37375721;0.37380594;0.37385303;0.37389851;0.37394243;0.37398487;0.37402588;0.37406549;0.37410375;0.37414071;
0.37417641;0.37421089;0.37424421;0.3742764;0.37430751;0.37433755;0.37436658;0.37439463;0.37442172;0.37444788;
0.37447315;0.37449756;0.37452117;0.37454396;0.37456599;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37489331;0.36853614;0.36648768;0.36560553;0.36505994;0.36461937;0.36421803;0.36383685;0.3634702;0.36311612;
0.36277381;0.36244276;0.36212257;0.36181289;0.36151335;0.36122364;0.36094341;0.36067235;0.36041018;0.36015663;
0.35991135;0.35967413;0.35944468;0.35922274;0.35900807;0.35880044;0.35859963;0.35840538;0.35821751;0.35803577;
0.35786;0.35769001;0.35752556;0.3573665;0.35721266;0.35706386;0.35691994;0.35678074;0.35664609;0.35651585;
0.35638991;0.35626808;0.35615024;0.35603628;0.35592604;0.3558194;0.35571626;0.35561651;0.35552001;0.35542667;
0.3553364;0.35524908;0.35516462;0.35508293;0.35500392;0.35492751;0.3548536;0.3547821;0.35471296;0.35464609;
0.35458139;0.35451883;0.3544583;0.35439977;0.35434315;0.35428837;0.35423541;0.35418418;0.35413462;0.3540867;
0.35404032;0.35399547;0.35395211;0.35391015;0.35386959;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.3745515;0.36776242;0.36525652;0.36391628;0.36292142;0.36204374;0.36121827;0.36042607;0.35966113;0.3589212;
0.35820508;0.35751191;0.35684091;0.35619137;0.35556257;0.35495389;0.35436466;0.35379428;0.35324213;0.35270762;
0.35219023;0.35168937;0.35120451;0.35073516;0.35028082;0.349841;0.34941524;0.34900311;0.34860414;0.34821793;
0.34784406;0.34748214;0.34713179;0.34679264;0.34646434;0.34614652;0.34583887;0.34554106;0.34525278;0.34497371;
0.34470356;0.34444204;0.3441889;0.34394383;0.34370661;0.34347698;0.34325469;0.34303951;0.34283119;0.34262955;
0.34243435;0.3422454;0.34206247;0.34188539;0.34171396;0.34154803;0.34138739;0.34123191;0.34108138;0.34093568;
0.34079462;0.3406581;0.34052593;0.34039798;0.34027413;0.34015423;0.34003818;0.33992583;0.33981708;0.33971179;
0.33960986;0.33951122;0.3394157;0.33932325;0.33923376;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37432092;0.36724019;0.36442503;0.36277467;0.36147526;0.36030084;0.3591871;0.35811508;0.35707867;0.35607538;
0.35510376;0.35416272;0.35325128;0.3523685;0.35151348;0.35068533;0.3498832;0.34910628;0.3483538;0.34762496;
0.34691903;0.34623531;0.34557307;0.34493163;0.34431037;0.34370863;0.34312582;0.3425613;0.34201455;0.34148499;
0.34097207;0.34047526;0.33999407;0.33952802;0.33907661;0.33863938;0.33821589;0.33780572;0.33740845;0.33702368;
0.336651;0.33629003;0.33594039;0.33560175;0.33527374;0.33495605;0.33464834;0.33435032;0.33406165;0.33378208;
0.33351126;0.33324897;0.33299494;0.33274889;0.33251056;0.33227974;0.33205616;0.33183962;0.33162987;0.33142671;
0.33122995;0.33103937;0.33085477;0.33067599;0.33050284;0.33033511;0.33017266;0.3300153;0.32986289;0.32971528;
0.32957232;0.32943386;0.32929975;0.32916984;0.32904401;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.3741653;0.3668876;0.36386344;0.3620033;0.36049771;0.35912225;0.357813;0.35655105;0.35533017;0.35414776;
0.35300225;0.35189235;0.35081697;0.34977499;0.34876537;0.34778714;0.34683931;0.34592092;0.34503105;0.34416884;
0.34333342;0.34252396;0.34173965;0.3409797;0.34024337;0.3395299;0.33883861;0.3381688;0.33751979;0.33689097;
0.33628166;0.3356913;0.33511928;0.33456501;0.33402798;0.33350763;0.33300346;0.33251494;0.33204162;0.33158299;
0.33113861;0.33070803;0.33029082;0.32988659;0.32949492;0.32911542;0.32874772;0.32839143;0.3280462;0.3277117;
0.3273876;0.32707357;0.32676929;0.32647449;0.32618883;0.32591206;0.32564387;0.32538402;0.32513225;0.32488829;
0.32465193;0.3244229;0.32420099;0.32398596;0.32377762;0.32357576;0.32338017;0.32319066;0.32300702;0.3228291;
0.32265669;0.32248965;0.32232779;0.32217097;0.32201904;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37406018;0.36664936;0.36348385;0.36148176;0.35983658;0.35832489;0.35688308;0.35549229;0.35414621;0.35284215;
0.35157844;0.35035372;0.34916678;0.34801641;0.34690151;0.34582096;0.34477374;0.34375879;0.34277514;0.34182179;
0.34089783;0.34000236;0.33913448;0.33829337;0.33747819;0.33668813;0.33592242;0.33518031;0.33446109;0.33376405;
0.33308846;0.3324337;0.33179912;0.33118412;0.33058807;0.33001038;0.32945052;0.32890791;0.32838202;0.32787234;
0.32737836;0.32689962;0.32643563;0.32598594;0.32555011;0.32512772;0.32471836;0.3243216;0.32393709;0.32356444;
0.32320327;0.32285324;0.322514;0.32218519;0.32186654;0.3215577;0.3212584;0.3209683;0.32068714;0.32041466;
0.32015058;0.31989464;0.3196466;0.31940618;0.31917319;0.31894737;0.31872851;0.3185164;0.31831083;0.3181116;
0.31791851;0.31773138;0.31755;0.31737423;0.31720388;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37398902;0.36648807;0.36322683;0.36112857;0.3593888;0.35778475;0.35625306;0.35477483;0.35334378;0.35195711;
0.35061312;0.34931037;0.34804755;0.34682345;0.3456369;0.34448671;0.34337181;0.34229109;0.34124348;0.34022799;
0.33924365;0.33828947;0.33736455;0.33646798;0.33559892;0.33475649;0.33393988;0.33314833;0.33238104;0.33163726;
0.33091629;0.33021742;0.32953998;0.32888332;0.32824677;0.32762975;0.32703164;0.32645187;0.32588989;0.32534513;
0.32481706;0.32430521;0.32380903;0.32332808;0.32286185;0.32240993;0.32197186;0.32154721;0.32113558;0.32073659;
0.32034981;0.3199749;0.31961149;0.31925923;0.31891775;0.31858674;0.31826589;0.31795487;0.31765339;0.31736115;
0.31707788;0.31680328;0.31653711;0.31627908;0.31602898;0.31578654;0.31555155;0.31532374;0.31510293;0.31488889;
0.31468141;0.31448027;0.31428531;0.31409633;0.31391314;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.3739408;0.36637875;0.36305261;0.36088911;0.35908511;0.35741836;0.3558256;0.35428798;0.35279918;0.35135636;
0.34995776;0.34860191;0.34728751;0.34601325;0.34477791;0.34358031;0.3424193;0.34129375;0.34020257;0.33914474;
0.33811921;0.337125;0.33616117;0.33522677;0.33432093;0.33344275;0.33259138;0.33176604;0.33096591;0.33019021;
0.32943821;0.32870919;0.32800242;0.32731724;0.326653;0.32600904;0.32538474;0.32477951;0.32419279;0.32362399;
0.32307255;0.32253796;0.3220197;0.32151726;0.32103017;0.32055798;0.32010022;0.31965643;0.31922621;0.31880912;
0.31840476;0.31801277;0.31763273;0.31726432;0.31690714;0.31656089;0.3162252;0.31589979;0.3155843;0.31527844;
0.31498194;0.31469449;0.31441581;0.31414565;0.31388375;0.31362984;0.3133837;0.31314507;0.31291375;0.31268948;
0.31247205;0.31226125;0.3120569;0.3118588;0.31166676;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37390798;0.3663044;0.36293408;0.36072621;0.35887852;0.35716912;0.35553482;0.35395679;0.35242867;0.35094762;
0.34951183;0.34811985;0.34677029;0.34546185;0.34419328;0.34296337;0.34177092;0.3406148;0.3394939;0.33840716;
0.33735353;0.33633202;0.33534163;0.33438143;0.33345047;0.33254787;0.33167279;0.33082438;0.3300018;0.32920429;
0.32843107;0.32768142;0.3269546;0.32624993;0.32556674;0.32490435;0.32426217;0.32363954;0.3230359;0.32245064;
0.3218832;0.32133305;0.32079968;0.32028255;0.31978118;0.31929508;0.31882378;0.31836686;0.31792384;0.31749433;
0.3170779;0.31667417;0.31628275;0.31590325;0.31553531;0.31517857;0.31483272;0.31449741;0.3141723;0.31385711;
0.31355152;0.31325525;0.31296799;0.31268948;0.31241947;0.31215769;0.31190389;0.31165782;0.31141925;0.31118795;
0.31096369;0.31074625;0.31053546;0.31033108;0.31013292;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37388566;0.36625373;0.36285335;0.36061522;0.35873777;0.35699928;0.35533667;0.35373107;0.35217613;0.350669;
0.34920785;0.34779119;0.34641764;0.34508586;0.34379458;0.34254259;0.34132868;0.3401517;0.33901051;0.33790404;
0.33683124;0.33579105;0.33478251;0.33380464;0.33285654;0.33193725;0.33104593;0.33018172;0.3293438;0.32853135;
0.32774365;0.32697991;0.32623938;0.32552138;0.32482523;0.32415023;0.32349578;0.32286122;0.32224599;0.32164946;
0.32107109;0.3205103;0.31996655;0.31943935;0.31892818;0.31843257;0.31795204;0.31748611;0.31703436;0.31659636;
0.31617168;0.3157599;0.31536067;0.31497356;0.31459823;0.31423432;0.31388149;0.31353939;0.31320769;0.31288609;
0.31257427;0.31227192;0.31197879;0.31169456;0.31141898;0.31115177;0.3108927;0.3106415;0.31039795;0.3101618;
0.30993283;0.30971083;0.3094956;0.30928689;0.30908453;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37387037;0.3662191;0.36279815;0.36053938;0.35864159;0.35688323;0.35520124;0.35357681;0.35200354;0.35047859;
0.3490001;0.34756657;0.34617662;0.3448289;0.34352213;0.34225506;0.34102648;0.33983523;0.33868018;0.33756021;
0.33647427;0.33542132;0.33440036;0.33341041;0.33245054;0.33151984;0.33061743;0.32974243;0.32889402;0.32807136;
0.3272737;0.32650027;0.32575035;0.3250232;0.32431817;0.32363454;0.32297167;0.32232895;0.32170576;0.32110152;
0.32051563;0.31994754;0.3193967;0.31886262;0.31834474;0.3178426;0.31735572;0.31688362;0.31642586;0.31598201;
0.31555167;0.31513438;0.31472978;0.31433746;0.31395707;0.31358823;0.3132306;0.31288385;0.31254762;0.31222162;
0.3119055;0.31159899;0.3113018;0.31101364;0.31073424;0.31046331;0.31020063;0.30994591;0.30969894;0.30945948;
0.30922729;0.30900216;0.30878386;0.3085722;0.30836698;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37385994;0.36619544;0.36276039;0.36048746;0.35857573;0.35680375;0.3551085;0.35347116;0.35188532;0.35034814;
0.34885776;0.34741268;0.34601146;0.3446528;0.34333539;0.34205797;0.34081933;0.3396183;0.33845371;0.33732447;
0.33622953;0.33516783;0.33413833;0.33314011;0.33217219;0.33123365;0.33032361;0.32944119;0.32858557;0.3277559;
0.32695141;0.32617137;0.32541502;0.32468161;0.32397047;0.3232809;0.32261229;0.32196397;0.32133532;0.32072577;
0.32013473;0.31956163;0.31900591;0.31846705;0.31794456;0.31743795;0.31694672;0.31647038;0.31600851;0.31556067;
0.31512642;0.31470534;0.31429705;0.31390116;0.31351727;0.31314504;0.31278414;0.31243417;0.31209484;0.31176579;
0.31144673;0.31113735;0.31083739;0.31054652;0.31026447;0.309991;0.30972582;0.30946869;0.30921936;0.3089776;
0.30874321;0.30851591;0.30829552;0.30808181;0.30787459;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37385276;0.36617914;0.36273444;0.36045176;0.35853046;0.35674912;0.35504475;0.35339853;0.35180408;0.3502585;
0.34875998;0.34730694;0.345898;0.34453183;0.34320712;0.34192258;0.34067702;0.33946925;0.33829814;0.33716255;
0.33606142;0.33499369;0.33395836;0.33295444;0.33198097;0.33103704;0.33012176;0.32923424;0.32837367;0.32753921;
0.32673004;0.32594544;0.32518464;0.32444692;0.32373157;0.32303795;0.32236537;0.32171318;0.32108077;0.32046756;
0.31987298;0.31929642;0.31873736;0.31819525;0.3176696;0.31715989;0.31666565;0.3161864;0.31572169;0.31527108;
0.31483415;0.31441048;0.31399965;0.31360129;0.31321502;0.31284046;0.31247726;0.31212509;0.31178361;0.31145248;
0.31113142;0.31082007;0.31051818;0.31022546;0.30994162;0.3096664;0.30939952;0.30914074;0.30888981;0.30864647;
0.30841053;0.30818173;0.30795988;0.30774477;0.30753618;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37384781;0.36616793;0.36271656;0.3604272;0.35849929;0.35671151;0.35500085;0.35334852;0.35174811;0.35019675;
0.3486926;0.3472341;0.34581986;0.34444851;0.34311876;0.34182933;0.340579;0.33936661;0.33819097;0.337051;
0.33594561;0.33487374;0.33383438;0.33282652;0.33184925;0.33090162;0.32998273;0.3290917;0.3282277;0.3273899;
0.32657751;0.32578978;0.32502592;0.32428524;0.323567;0.32287055;0.32219523;0.32154039;0.32090542;0.3202897;
0.31969267;0.31911373;0.31855235;0.31800801;0.31748018;0.31696835;0.31647205;0.31599081;0.31552413;0.31507161;
0.31463283;0.31420735;0.31379476;0.3133947;0.31300676;0.31263059;0.31226584;0.31191215;0.31156918;0.31123662;
0.31091416;0.31060147;0.31029826;0.31000426;0.30971918;0.30944273;0.30917466;0.30891472;0.30866268;0.30841827;
0.30818129;0.30795148;0.30772865;0.30751258;0.30730307;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37384439;0.36616018;0.36270422;0.36041021;0.35847777;0.35668555;0.35497057;0.35331404;0.35170954;0.35015419;
0.34864616;0.34718388;0.34576595;0.34439102;0.34305778;0.34176496;0.34051135;0.33929574;0.338117;0.33697399;
0.33586565;0.33479092;0.33374876;0.33273819;0.33175829;0.3308081;0.3298867;0.32899326;0.32812691;0.32728681;
0.32647219;0.32568228;0.3249163;0.32417357;0.32345334;0.32275495;0.32207775;0.32142109;0.32078433;0.32016689;
0.31956816;0.31898758;0.31842461;0.31787869;0.31734934;0.31683603;0.3163383;0.31585565;0.31538764;0.31493381;
0.31449375;0.31406704;0.31365326;0.31325203;0.31286296;0.31248569;0.31211987;0.31176513;0.31142116;0.31108761;
0.31076416;0.31045052;0.31014639;0.3098515;0.30956554;0.30928826;0.30901939;0.30875865;0.30850583;0.30826068;
0.30802295;0.30779243;0.30756891;0.30735216;0.30714199;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37384203;0.36615485;0.36269569;0.3603985;0.3584629;0.35666761;0.35494962;0.35329017;0.35168281;0.35012472;
0.34861398;0.34714907;0.34572861;0.3443512;0.34301555;0.3417204;0.3404645;0.33924669;0.3380658;0.33692071;
0.33581033;0.33473361;0.33368951;0.3326771;0.33169535;0.33074337;0.32982025;0.3289251;0.32805711;0.32721543;
0.32639927;0.32560784;0.3248404;0.32409623;0.32337463;0.3226749;0.32199639;0.32133844;0.32070044;0.32008177;
0.31948188;0.31890017;0.3183361;0.31778911;0.31725872;0.31674439;0.31624568;0.31576207;0.31529313;0.31483841;
0.31439745;0.31396988;0.31355527;0.31315324;0.31276339;0.31238535;0.31201878;0.31166333;0.31131864;0.3109844;
0.3106603;0.31034601;0.31004125;0.30974573;0.30945918;0.3091813;0.30891186;0.30865058;0.30839723;0.30815157;
0.30791333;0.30768234;0.30745834;0.30724114;0.30703053;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37384039;0.36615112;0.36268976;0.36039037;0.35845259;0.35665515;0.35493508;0.3532736;0.35166427;0.35010424;
0.34859166;0.34712496;0.34570274;0.34432361;0.34298629;0.3416895;0.34043202;0.33921266;0.33803025;0.33688369;
0.33577189;0.33469379;0.33364838;0.33263466;0.33165166;0.33069846;0.32977414;0.32887784;0.32800871;0.32716593;
0.32634869;0.32555622;0.32478777;0.32404262;0.32332006;0.32261941;0.32193998;0.32128114;0.32064229;0.32002279;
0.31942207;0.31883955;0.31827471;0.31772697;0.31719586;0.31668085;0.31618145;0.31569716;0.31522757;0.31477222;
0.31433067;0.3139025;0.31348729;0.31308469;0.31269428;0.3123157;0.3119486;0.31159264;0.31124747;0.31091276;
0.31058818;0.31027344;0.30996826;0.30967233;0.30938536;0.3091071;0.30883726;0.3085756;0.30832186;0.30807582;
0.30783725;0.30760589;0.30738157;0.30716404;0.3069531;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37383926;0.36614853;0.36268565;0.3603847;0.35844541;0.35664648;0.35492498;0.3532621;0.3516514;0.35009003;
0.34857613;0.34710816;0.34568471;0.34430438;0.3429659;0.34166798;0.3404094;0.33918896;0.33800554;0.33685797;
0.33574519;0.33466613;0.33361977;0.33260515;0.33162126;0.3306672;0.32974204;0.32884493;0.32797503;0.32713148;
0.3263135;0.32552031;0.32475117;0.32400534;0.32328209;0.32258078;0.32190073;0.32124129;0.32060185;0.31998178;
0.31938049;0.31879744;0.31823206;0.31768382;0.3171522;0.31663668;0.31613678;0.31565204;0.315182;0.3147262;
0.31428421;0.31385562;0.31344002;0.31303704;0.31264624;0.3122673;0.31189984;0.31154352;0.311198;0.31086296;
0.31053805;0.31022301;0.30991751;0.30962127;0.30933401;0.30905545;0.30878535;0.30852342;0.30826944;0.30802315;
0.30778435;0.30755275;0.30732819;0.30711043;0.30689928;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37383845;0.36614674;0.36268279;0.36038077;0.3584404;0.35664043;0.35491791;0.35325405;0.3516424;0.3500801;
0.34856531;0.34709647;0.34567216;0.344291;0.34295171;0.34165302;0.34039369;0.33917251;0.33798835;0.33684006;
0.33572659;0.33464688;0.3335999;0.33258462;0.33160013;0.33064547;0.32971975;0.32882208;0.32795161;0.32710752;
0.32628903;0.32549533;0.32472569;0.32397938;0.32325569;0.32255393;0.32187343;0.32121354;0.32057369;0.3199532;
0.31935152;0.31876808;0.31820232;0.31765372;0.31712174;0.3166059;0.31610566;0.3156206;0.31515023;0.31469414;
0.31425184;0.31382295;0.31340706;0.31300378;0.31261271;0.31223351;0.31186581;0.31150925;0.31116349;0.31082821;
0.3105031;0.31018782;0.3098821;0.30958566;0.30929819;0.30901945;0.30874914;0.30848703;0.30823287;0.30798641;
0.30774742;0.30751568;0.30729097;0.30707306;0.30686176;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37383789;0.36614546;0.36268076;0.36037797;0.35843685;0.35663617;0.35491294;0.35324839;0.35163608;0.35007316;
0.34855774;0.34708828;0.34566337;0.34428164;0.34294179;0.34164253;0.34038267;0.33916098;0.33797631;0.33682755;
0.3357136;0.33463341;0.33358595;0.33257023;0.33158529;0.33063021;0.32970408;0.32880601;0.32793516;0.32709071;
0.32627186;0.32547781;0.32470784;0.3239612;0.32323718;0.3225351;0.32185429;0.32119411;0.32055396;0.31993321;
0.31933126;0.31874755;0.31818154;0.31763268;0.31710044;0.31658435;0.31608388;0.31559858;0.315128;0.31467167;
0.31422916;0.31380007;0.313384;0.31298053;0.31258929;0.3122099;0.31184202;0.31148529;0.31113937;0.31080392;
0.31047866;0.31016323;0.30985737;0.30956078;0.30927318;0.30899429;0.30872387;0.30846164;0.30820733;0.30796075;
0.30772164;0.30748978;0.30726495;0.30704692;0.3068355;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.3738375;0.3661446;0.36267936;0.36037606;0.35843444;0.35663325;0.35490954;0.35324448;0.3516317;0.3500683;
0.34855244;0.34708256;0.34565723;0.34427509;0.34293485;0.34163523;0.34037498;0.33915293;0.3379679;0.33681878;
0.33570451;0.33462399;0.33357623;0.33256021;0.33157498;0.3306196;0.3296932;0.32879487;0.32792374;0.32707903;
0.32625991;0.32546562;0.32469541;0.32394853;0.32322428;0.32252198;0.32184097;0.32118058;0.32054022;0.31991926;
0.3193171;0.31873322;0.31816703;0.31761798;0.31708559;0.31656933;0.31606871;0.31558326;0.31511253;0.31465605;
0.31421342;0.31378421;0.31336799;0.31296438;0.31257302;0.31219351;0.31182551;0.31146866;0.31112263;0.31078708;
0.3104617;0.31014618;0.3098402;0.30954352;0.30925581;0.30897683;0.30870631;0.30844399;0.3081896;0.30794293;
0.30770373;0.30747178;0.30724686;0.30702877;0.30681726;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37383723;0.36614397;0.36267838;0.36037469;0.35843271;0.35663116;0.3549071;0.35324171;0.3516286;0.3500649;
0.34854871;0.34707853;0.34565291;0.3442705;0.34292996;0.34163004;0.34036952;0.33914721;0.33796194;0.33681259;
0.33569807;0.33461732;0.33356932;0.33255309;0.33156765;0.33061206;0.32968545;0.32878691;0.32791561;0.32707071;
0.32625142;0.32545695;0.32468656;0.3239395;0.3232151;0.32251266;0.32183149;0.32117099;0.32053047;0.31990936;
0.31930709;0.31872305;0.31815672;0.31760755;0.31707504;0.31655866;0.31605792;0.31557235;0.3151015;0.31464493;
0.31420219;0.31377286;0.31335655;0.31295285;0.31256139;0.3121818;0.31181371;0.31145677;0.31111065;0.31077501;
0.31044954;0.31013393;0.30982789;0.30953112;0.30924335;0.30896431;0.30869374;0.30843136;0.3081769;0.30793017;
0.30769092;0.30745891;0.30723393;0.30701578;0.30680424;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37383705;0.36614355;0.36267769;0.36037377;0.35843152;0.35662973;0.35490543;0.3532398;0.35162646;0.35006252;
0.34854612;0.3470757;0.34564987;0.34426725;0.34292653;0.34162644;0.34036574;0.33914325;0.3379578;0.33680826;
0.33569357;0.33461267;0.33356452;0.33254814;0.33156255;0.33060682;0.32968006;0.3287814;0.32790995;0.32706493;
0.32624552;0.32545093;0.32468042;0.32393324;0.32320872;0.32250616;0.32182488;0.32116425;0.32052365;0.31990245;
0.31930009;0.31871596;0.31814954;0.31760028;0.31706768;0.31655121;0.31605041;0.31556478;0.31509387;0.31463721;
0.31419441;0.31376502;0.31334865;0.31294489;0.31255338;0.31217372;0.31180558;0.31144857;0.31110239;0.3107667;
0.31044117;0.3101255;0.3098194;0.3095226;0.30923477;0.30895567;0.30868503;0.3084226;0.30816811;0.30792135;
0.30768207;0.30745003;0.30722502;0.30700684;0.30679527;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.3738369;0.36614323;0.36267719;0.36037308;0.35843065;0.35662869;0.3549042;0.35323843;0.35162494;0.35006085;
0.3485443;0.34707373;0.34564775;0.34426498;0.34292412;0.3416239;0.34036309;0.33914047;0.33795491;0.33680525;
0.33569044;0.33460942;0.33356115;0.33254465;0.33155897;0.33060315;0.3296763;0.32877752;0.32790598;0.32706085;
0.32624134;0.32544667;0.32467607;0.32392883;0.32320425;0.3225016;0.32182026;0.32115957;0.32051888;0.31989762;
0.3192952;0.31871101;0.31814453;0.31759521;0.31706256;0.31654602;0.31604517;0.31555948;0.31508851;0.31463182;
0.31418896;0.31375951;0.31334308;0.31293926;0.31254768;0.31216797;0.31179976;0.31144273;0.31109652;0.3107608;
0.31043524;0.31011954;0.30981341;0.30951655;0.30922869;0.30894956;0.3086789;0.30841643;0.30816191;0.30791512;
0.30767581;0.30744374;0.3072187;0.30700049;0.30678889;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37383682;0.36614302;0.36267686;0.3603726;0.35843006;0.35662797;0.35490337;0.35323748;0.35162386;0.35005966;
0.34854299;0.34707233;0.34564626;0.3442634;0.34292245;0.34162211;0.34036121;0.33913851;0.33795285;0.33680314;
0.33568826;0.33460715;0.33355883;0.33254227;0.3315565;0.33060062;0.32967368;0.32877484;0.32790324;0.32705805;
0.32623848;0.32544374;0.32467309;0.32392579;0.32320115;0.32249844;0.32181704;0.32115629;0.32051557;0.31989425;
0.31929177;0.31870756;0.31814104;0.3175917;0.31705898;0.31654242;0.3160415;0.31555575;0.31508473;0.31462798;
0.31418508;0.3137556;0.31333914;0.31293529;0.31254369;0.31216395;0.31179571;0.31143865;0.31109241;0.31075665;
0.31043106;0.31011534;0.30980918;0.30951232;0.30922443;0.30894527;0.30867457;0.30841208;0.30815753;0.30791071;
0.30767137;0.30743927;0.3072142;0.30699596;0.30678433;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37383676;0.36614287;0.36267659;0.36037225;0.35842961;0.35662743;0.35490274;0.35323676;0.35162306;0.35005876;
0.34854203;0.34707129;0.34564513;0.34426218;0.34292117;0.34162077;0.34035981;0.33913705;0.33795133;0.33680156;
0.33568662;0.33460546;0.33355707;0.33254045;0.33155465;0.33059871;0.32967174;0.32877284;0.32790118;0.32705596;
0.32623634;0.32544157;0.32467088;0.32392353;0.32319883;0.32249609;0.32181466;0.32115388;0.32051313;0.31989178;
0.31928927;0.31870499;0.31813845;0.31758907;0.31705633;0.31653973;0.31603879;0.31555304;0.31508201;0.31462523;
0.31418231;0.3137528;0.31333631;0.31293246;0.31254083;0.31216106;0.31179282;0.31143573;0.31108946;0.31075367;
0.31042808;0.31011236;0.3098062;0.30950931;0.30922142;0.30894226;0.30867153;0.30840904;0.30815449;0.30790764;
0.30766827;0.30743617;0.3072111;0.30699286;0.30678123;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.3738367;0.36614275;0.36267641;0.36037201;0.35842928;0.35662705;0.3549023;0.35323626;0.35162252;0.35005817;
0.34854138;0.3470706;0.34564438;0.34426141;0.34292033;0.34161991;0.34035888;0.33913606;0.33795032;0.33680049;
0.33568549;0.33460429;0.33355585;0.3325392;0.33155334;0.33059737;0.32967037;0.32877144;0.32789975;0.3270545;
0.32623485;0.32544005;0.32466933;0.32392195;0.32319722;0.32249445;0.32181299;0.32115218;0.3205114;0.31989002;
0.31928748;0.3187032;0.31813663;0.31758723;0.31705448;0.31653786;0.31603691;0.31555113;0.31508008;0.3146233;
0.31418034;0.31375083;0.31333432;0.31293043;0.3125388;0.31215903;0.31179076;0.31143367;0.3110874;0.31075162;
0.310426;0.31011024;0.30980405;0.30950716;0.30921924;0.30894005;0.30866933;0.3084068;0.30815223;0.30790538;
0.307666;0.3074339;0.30720884;0.30699056;0.30677891;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37383667;0.36614269;0.36267632;0.36037186;0.3584291;0.35662681;0.35490203;0.35323593;0.35162213;0.35005775;
0.34854093;0.3470701;0.34564385;0.34426084;0.34291974;0.34161925;0.3403582;0.33913535;0.33794954;0.33679968;
0.33568466;0.33460343;0.33355498;0.33253831;0.33155242;0.33059642;0.32966939;0.32877046;0.32789877;0.32705349;
0.3262338;0.32543898;0.32466823;0.32392085;0.32319611;0.32249334;0.32181185;0.32115102;0.32051021;0.31988883;
0.31928629;0.31870198;0.31813538;0.31758595;0.31705317;0.31653655;0.31603557;0.31554979;0.31507871;0.3146219;
0.31417894;0.3137494;0.31333289;0.312929;0.31253734;0.31215757;0.3117893;0.31143218;0.31108588;0.31075007;
0.31042445;0.31010869;0.3098025;0.30950558;0.30921766;0.30893847;0.30866775;0.30840522;0.30815065;0.3079038;
0.30766442;0.30743229;0.3072072;0.30698892;0.30677727;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37383664;0.36614263;0.36267623;0.36037174;0.35842896;0.35662663;0.35490182;0.35323569;0.35162187;0.35005745;
0.3485406;0.34706974;0.34564346;0.34426042;0.34291929;0.34161881;0.34035772;0.33913484;0.33794904;0.33679914;
0.33568412;0.33460286;0.33355439;0.33253768;0.33155179;0.33059576;0.3296687;0.32876974;0.32789803;0.32705271;
0.32623303;0.32543817;0.32466742;0.32392001;0.32319525;0.32249245;0.32181096;0.32115012;0.32050931;0.31988791;
0.31928533;0.31870103;0.31813443;0.31758499;0.31705222;0.31653559;0.31603462;0.31554881;0.31507772;0.31462091;
0.31417796;0.31374842;0.3133319;0.31292799;0.31253633;0.31215653;0.31178823;0.31143111;0.31108481;0.31074899;
0.31042337;0.31010762;0.30980143;0.30950451;0.30921659;0.3089374;0.30866668;0.30840415;0.30814958;0.30790272;
0.30766335;0.30743122;0.30720612;0.30698785;0.3067762;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37383664;0.3661426;0.36267617;0.36037168;0.35842887;0.35662651;0.35490167;0.35323554;0.35162172;0.3500573;
0.34854043;0.34706956;0.34564328;0.34426022;0.34291905;0.34161854;0.34035742;0.33913454;0.33794871;0.33679882;
0.33568376;0.3346025;0.333554;0.33253729;0.33155137;0.33059534;0.32966828;0.32876933;0.32789761;0.3270523;
0.32623258;0.32543772;0.32466695;0.32391953;0.32319477;0.32249197;0.32181045;0.32114959;0.32050875;0.31988734;
0.31928477;0.31870046;0.31813386;0.31758443;0.31705162;0.31653497;0.31603399;0.31554818;0.3150771;0.31462029;
0.3141773;0.31374776;0.31333125;0.31292734;0.31253567;0.31215587;0.31178758;0.31143045;0.31108415;0.31074834;
0.31042269;0.31010693;0.30980074;0.30950382;0.3092159;0.30893672;0.30866596;0.30840343;0.30814886;0.30790201;
0.30766264;0.30743051;0.30720541;0.30698714;0.30677548;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.37383661;0.36614254;0.36267608;0.36037156;0.35842875;0.35662639;0.35490155;0.35323539;0.35162154;0.3500571;
0.34854022;0.34706932;0.34564301;0.34425995;0.34291878;0.34161827;0.34035715;0.33913425;0.33794841;0.33679852;
0.33568347;0.33460221;0.3335537;0.33253697;0.33155105;0.33059499;0.32966793;0.32876894;0.32789719;0.32705188;
0.32623217;0.32543731;0.32466653;0.32391912;0.32319435;0.32249156;0.32181004;0.32114917;0.32050833;0.31988692;
0.31928435;0.31870002;0.31813338;0.31758395;0.31705114;0.31653449;0.31603348;0.31554767;0.31507659;0.31461978;
0.3141768;0.31374726;0.31333071;0.3129268;0.31253514;0.31215534;0.31178704;0.31142992;0.31108361;0.3107478;
0.31042215;0.31010637;0.30980018;0.30950326;0.30921534;0.30893615;0.30866539;0.30840287;0.30814829;0.30790141;
0.30766204;0.30742991;0.30720481;0.30698654;0.30677488;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;0.50950003;
      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    row_height=1;
    max_col_width=50;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [5000] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;19;
20;21;22;23;24;25;26;27;28;29;
30;31;32;33;34;35;36;37;38;39;
40;41;42;43;44;45;46;47;48;49;
50;51;52;53;54;55;56;57;58;59;
60;61;62;63;64;65;66;67;68;69;
70;71;72;73;74;75;76;77;78;79;
80;81;82;83;84;85;86;87;88;89;
90;91;92;93;94;95;96;97;98;99;
100;101;102;103;104;105;106;107;108;109;
110;111;112;113;114;115;116;117;118;119;
120;121;122;123;124;125;126;127;128;129;
130;131;132;133;134;135;136;137;138;139;
140;141;142;143;144;145;146;147;148;149;
150;151;152;153;154;155;156;157;158;159;
160;161;162;163;164;165;166;167;168;169;
170;171;172;173;174;175;176;177;178;179;
180;181;182;183;184;185;186;187;188;189;
190;191;192;193;194;195;196;197;198;199;
200;201;202;203;204;205;206;207;208;209;
210;211;212;213;214;215;216;217;218;219;
220;221;222;223;224;225;226;227;228;229;
230;231;232;233;234;235;236;237;238;239;
240;241;242;243;244;245;246;247;248;249;
250;251;252;253;254;255;256;257;258;259;
260;261;262;263;264;265;266;267;268;269;
270;271;272;273;274;275;276;277;278;279;
280;281;282;283;284;285;286;287;288;289;
290;291;292;293;294;295;296;297;298;299;
300;301;302;303;304;305;306;307;308;309;
310;311;312;313;314;315;316;317;318;319;
320;321;322;323;324;325;326;327;328;329;
330;331;332;333;334;335;336;337;338;339;
340;341;342;343;344;345;346;347;348;349;
350;351;352;353;354;355;356;357;358;359;
360;361;362;363;364;365;366;367;368;369;
370;371;372;373;374;375;376;377;378;379;
380;381;382;383;384;385;386;387;388;389;
390;391;392;393;394;395;396;397;398;399;
400;401;402;403;404;405;406;407;408;409;
410;411;412;413;414;415;416;417;418;419;
420;421;422;423;424;425;426;427;428;429;
430;431;432;433;434;435;436;437;438;439;
440;441;442;443;444;445;446;447;448;449;
450;451;452;453;454;455;456;457;458;459;
460;461;462;463;464;465;466;467;468;469;
470;471;472;473;474;475;476;477;478;479;
480;481;482;483;484;485;486;487;488;489;
490;491;492;493;494;495;496;497;498;499;
500;501;502;503;504;505;506;507;508;509;
510;511;512;513;514;515;516;517;518;519;
520;521;522;523;524;525;526;527;528;529;
530;531;532;533;534;535;536;537;538;539;
540;541;542;543;544;545;546;547;548;549;
550;551;552;553;554;555;556;557;558;559;
560;561;562;563;564;565;566;567;568;569;
570;571;572;573;574;575;576;577;578;579;
580;581;582;583;584;585;586;587;588;589;
590;591;592;593;594;595;596;597;598;599;
600;601;602;603;604;605;606;607;608;609;
610;611;612;613;614;615;616;617;618;619;
620;621;622;623;624;625;626;627;628;629;
630;631;632;633;634;635;636;637;638;639;
640;641;642;643;644;645;646;647;648;649;
650;651;652;653;654;655;656;657;658;659;
660;661;662;663;664;665;666;667;668;669;
670;671;672;673;674;675;676;677;678;679;
680;681;682;683;684;685;686;687;688;689;
690;691;692;693;694;695;696;697;698;699;
700;701;702;703;704;705;706;707;708;709;
710;711;712;713;714;715;716;717;718;719;
720;721;722;723;724;725;726;727;728;729;
730;731;732;733;734;735;736;737;738;739;
740;741;742;743;744;745;746;747;748;749;
750;751;752;753;754;755;756;757;758;759;
760;761;762;763;764;765;766;767;768;769;
770;771;772;773;774;775;776;777;778;779;
780;781;782;783;784;785;786;787;788;789;
790;791;792;793;794;795;796;797;798;799;
800;801;802;803;804;805;806;807;808;809;
810;811;812;813;814;815;816;817;818;819;
820;821;822;823;824;825;826;827;828;829;
830;831;832;833;834;835;836;837;838;839;
840;841;842;843;844;845;846;847;848;849;
850;851;852;853;854;855;856;857;858;859;
860;861;862;863;864;865;866;867;868;869;
870;871;872;873;874;875;876;877;878;879;
880;881;882;883;884;885;886;887;888;889;
890;891;892;893;894;895;896;897;898;899;
900;901;902;903;904;905;906;907;908;909;
910;911;912;913;914;915;916;917;918;919;
920;921;922;923;924;925;926;927;928;929;
930;931;932;933;934;935;936;937;938;939;
940;941;942;943;944;945;946;947;948;949;
950;951;952;953;954;955;956;957;958;959;
960;961;962;963;964;965;966;967;968;969;
970;971;972;973;974;975;976;977;978;979;
980;981;982;983;984;985;986;987;988;989;
990;991;992;993;994;995;996;997;998;999;
1000;1001;1002;1003;1004;1005;1006;1007;1008;1009;
1010;1011;1012;1013;1014;1015;1016;1017;1018;1019;
1020;1021;1022;1023;1024;1025;1026;1027;1028;1029;
1030;1031;1032;1033;1034;1035;1036;1037;1038;1039;
1040;1041;1042;1043;1044;1045;1046;1047;1048;1049;
1050;1051;1052;1053;1054;1055;1056;1057;1058;1059;
1060;1061;1062;1063;1064;1065;1066;1067;1068;1069;
1070;1071;1072;1073;1074;1075;1076;1077;1078;1079;
1080;1081;1082;1083;1084;1085;1086;1087;1088;1089;
1090;1091;1092;1093;1094;1095;1096;1097;1098;1099;
1100;1101;1102;1103;1104;1105;1106;1107;1108;1109;
1110;1111;1112;1113;1114;1115;1116;1117;1118;1119;
1120;1121;1122;1123;1124;1125;1126;1127;1128;1129;
1130;1131;1132;1133;1134;1135;1136;1137;1138;1139;
1140;1141;1142;1143;1144;1145;1146;1147;1148;1149;
1150;1151;1152;1153;1154;1155;1156;1157;1158;1159;
1160;1161;1162;1163;1164;1165;1166;1167;1168;1169;
1170;1171;1172;1173;1174;1175;1176;1177;1178;1179;
1180;1181;1182;1183;1184;1185;1186;1187;1188;1189;
1190;1191;1192;1193;1194;1195;1196;1197;1198;1199;
1200;1201;1202;1203;1204;1205;1206;1207;1208;1209;
1210;1211;1212;1213;1214;1215;1216;1217;1218;1219;
1220;1221;1222;1223;1224;1225;1226;1227;1228;1229;
1230;1231;1232;1233;1234;1235;1236;1237;1238;1239;
1240;1241;1242;1243;1244;1245;1246;1247;1248;1249;
1250;1251;1252;1253;1254;1255;1256;1257;1258;1259;
1260;1261;1262;1263;1264;1265;1266;1267;1268;1269;
1270;1271;1272;1273;1274;1275;1276;1277;1278;1279;
1280;1281;1282;1283;1284;1285;1286;1287;1288;1289;
1290;1291;1292;1293;1294;1295;1296;1297;1298;1299;
1300;1301;1302;1303;1304;1305;1306;1307;1308;1309;
1310;1311;1312;1313;1314;1315;1316;1317;1318;1319;
1320;1321;1322;1323;1324;1325;1326;1327;1328;1329;
1330;1331;1332;1333;1334;1335;1336;1337;1338;1339;
1340;1341;1342;1343;1344;1345;1346;1347;1348;1349;
1350;1351;1352;1353;1354;1355;1356;1357;1358;1359;
1360;1361;1362;1363;1364;1365;1366;1367;1368;1369;
1370;1371;1372;1373;1374;1375;1376;1377;1378;1379;
1380;1381;1382;1383;1384;1385;1386;1387;1388;1389;
1390;1391;1392;1393;1394;1395;1396;1397;1398;1399;
1400;1401;1402;1403;1404;1405;1406;1407;1408;1409;
1410;1411;1412;1413;1414;1415;1416;1417;1418;1419;
1420;1421;1422;1423;1424;1425;1426;1427;1428;1429;
1430;1431;1432;1433;1434;1435;1436;1437;1438;1439;
1440;1441;1442;1443;1444;1445;1446;1447;1448;1449;
1450;1451;1452;1453;1454;1455;1456;1457;1458;1459;
1460;1461;1462;1463;1464;1465;1466;1467;1468;1469;
1470;1471;1472;1473;1474;1475;1476;1477;1478;1479;
1480;1481;1482;1483;1484;1485;1486;1487;1488;1489;
1490;1491;1492;1493;1494;1495;1496;1497;1498;1499;
1500;1501;1502;1503;1504;1505;1506;1507;1508;1509;
1510;1511;1512;1513;1514;1515;1516;1517;1518;1519;
1520;1521;1522;1523;1524;1525;1526;1527;1528;1529;
1530;1531;1532;1533;1534;1535;1536;1537;1538;1539;
1540;1541;1542;1543;1544;1545;1546;1547;1548;1549;
1550;1551;1552;1553;1554;1555;1556;1557;1558;1559;
1560;1561;1562;1563;1564;1565;1566;1567;1568;1569;
1570;1571;1572;1573;1574;1575;1576;1577;1578;1579;
1580;1581;1582;1583;1584;1585;1586;1587;1588;1589;
1590;1591;1592;1593;1594;1595;1596;1597;1598;1599;
1600;1601;1602;1603;1604;1605;1606;1607;1608;1609;
1610;1611;1612;1613;1614;1615;1616;1617;1618;1619;
1620;1621;1622;1623;1624;1625;1626;1627;1628;1629;
1630;1631;1632;1633;1634;1635;1636;1637;1638;1639;
1640;1641;1642;1643;1644;1645;1646;1647;1648;1649;
1650;1651;1652;1653;1654;1655;1656;1657;1658;1659;
1660;1661;1662;1663;1664;1665;1666;1667;1668;1669;
1670;1671;1672;1673;1674;1675;1676;1677;1678;1679;
1680;1681;1682;1683;1684;1685;1686;1687;1688;1689;
1690;1691;1692;1693;1694;1695;1696;1697;1698;1699;
1700;1701;1702;1703;1704;1705;1706;1707;1708;1709;
1710;1711;1712;1713;1714;1715;1716;1717;1718;1719;
1720;1721;1722;1723;1724;1725;1726;1727;1728;1729;
1730;1731;1732;1733;1734;1735;1736;1737;1738;1739;
1740;1741;1742;1743;1744;1745;1746;1747;1748;1749;
1750;1751;1752;1753;1754;1755;1756;1757;1758;1759;
1760;1761;1762;1763;1764;1765;1766;1767;1768;1769;
1770;1771;1772;1773;1774;1775;1776;1777;1778;1779;
1780;1781;1782;1783;1784;1785;1786;1787;1788;1789;
1790;1791;1792;1793;1794;1795;1796;1797;1798;1799;
1800;1801;1802;1803;1804;1805;1806;1807;1808;1809;
1810;1811;1812;1813;1814;1815;1816;1817;1818;1819;
1820;1821;1822;1823;1824;1825;1826;1827;1828;1829;
1830;1831;1832;1833;1834;1835;1836;1837;1838;1839;
1840;1841;1842;1843;1844;1845;1846;1847;1848;1849;
1850;1851;1852;1853;1854;1855;1856;1857;1858;1859;
1860;1861;1862;1863;1864;1865;1866;1867;1868;1869;
1870;1871;1872;1873;1874;1875;1876;1877;1878;1879;
1880;1881;1882;1883;1884;1885;1886;1887;1888;1889;
1890;1891;1892;1893;1894;1895;1896;1897;1898;1899;
1900;1901;1902;1903;1904;1905;1906;1907;1908;1909;
1910;1911;1912;1913;1914;1915;1916;1917;1918;1919;
1920;1921;1922;1923;1924;1925;1926;1927;1928;1929;
1930;1931;1932;1933;1934;1935;1936;1937;1938;1939;
1940;1941;1942;1943;1944;1945;1946;1947;1948;1949;
1950;1951;1952;1953;1954;1955;1956;1957;1958;1959;
1960;1961;1962;1963;1964;1965;1966;1967;1968;1969;
1970;1971;1972;1973;1974;1975;1976;1977;1978;1979;
1980;1981;1982;1983;1984;1985;1986;1987;1988;1989;
1990;1991;1992;1993;1994;1995;1996;1997;1998;1999;
2000;2001;2002;2003;2004;2005;2006;2007;2008;2009;
2010;2011;2012;2013;2014;2015;2016;2017;2018;2019;
2020;2021;2022;2023;2024;2025;2026;2027;2028;2029;
2030;2031;2032;2033;2034;2035;2036;2037;2038;2039;
2040;2041;2042;2043;2044;2045;2046;2047;2048;2049;
2050;2051;2052;2053;2054;2055;2056;2057;2058;2059;
2060;2061;2062;2063;2064;2065;2066;2067;2068;2069;
2070;2071;2072;2073;2074;2075;2076;2077;2078;2079;
2080;2081;2082;2083;2084;2085;2086;2087;2088;2089;
2090;2091;2092;2093;2094;2095;2096;2097;2098;2099;
2100;2101;2102;2103;2104;2105;2106;2107;2108;2109;
2110;2111;2112;2113;2114;2115;2116;2117;2118;2119;
2120;2121;2122;2123;2124;2125;2126;2127;2128;2129;
2130;2131;2132;2133;2134;2135;2136;2137;2138;2139;
2140;2141;2142;2143;2144;2145;2146;2147;2148;2149;
2150;2151;2152;2153;2154;2155;2156;2157;2158;2159;
2160;2161;2162;2163;2164;2165;2166;2167;2168;2169;
2170;2171;2172;2173;2174;2175;2176;2177;2178;2179;
2180;2181;2182;2183;2184;2185;2186;2187;2188;2189;
2190;2191;2192;2193;2194;2195;2196;2197;2198;2199;
2200;2201;2202;2203;2204;2205;2206;2207;2208;2209;
2210;2211;2212;2213;2214;2215;2216;2217;2218;2219;
2220;2221;2222;2223;2224;2225;2226;2227;2228;2229;
2230;2231;2232;2233;2234;2235;2236;2237;2238;2239;
2240;2241;2242;2243;2244;2245;2246;2247;2248;2249;
2250;2251;2252;2253;2254;2255;2256;2257;2258;2259;
2260;2261;2262;2263;2264;2265;2266;2267;2268;2269;
2270;2271;2272;2273;2274;2275;2276;2277;2278;2279;
2280;2281;2282;2283;2284;2285;2286;2287;2288;2289;
2290;2291;2292;2293;2294;2295;2296;2297;2298;2299;
2300;2301;2302;2303;2304;2305;2306;2307;2308;2309;
2310;2311;2312;2313;2314;2315;2316;2317;2318;2319;
2320;2321;2322;2323;2324;2325;2326;2327;2328;2329;
2330;2331;2332;2333;2334;2335;2336;2337;2338;2339;
2340;2341;2342;2343;2344;2345;2346;2347;2348;2349;
2350;2351;2352;2353;2354;2355;2356;2357;2358;2359;
2360;2361;2362;2363;2364;2365;2366;2367;2368;2369;
2370;2371;2372;2373;2374;2375;2376;2377;2378;2379;
2380;2381;2382;2383;2384;2385;2386;2387;2388;2389;
2390;2391;2392;2393;2394;2395;2396;2397;2398;2399;
2400;2401;2402;2403;2404;2405;2406;2407;2408;2409;
2410;2411;2412;2413;2414;2415;2416;2417;2418;2419;
2420;2421;2422;2423;2424;2425;2426;2427;2428;2429;
2430;2431;2432;2433;2434;2435;2436;2437;2438;2439;
2440;2441;2442;2443;2444;2445;2446;2447;2448;2449;
2450;2451;2452;2453;2454;2455;2456;2457;2458;2459;
2460;2461;2462;2463;2464;2465;2466;2467;2468;2469;
2470;2471;2472;2473;2474;2475;2476;2477;2478;2479;
2480;2481;2482;2483;2484;2485;2486;2487;2488;2489;
2490;2491;2492;2493;2494;2495;2496;2497;2498;2499;
2500;2501;2502;2503;2504;2505;2506;2507;2508;2509;
2510;2511;2512;2513;2514;2515;2516;2517;2518;2519;
2520;2521;2522;2523;2524;2525;2526;2527;2528;2529;
2530;2531;2532;2533;2534;2535;2536;2537;2538;2539;
2540;2541;2542;2543;2544;2545;2546;2547;2548;2549;
2550;2551;2552;2553;2554;2555;2556;2557;2558;2559;
2560;2561;2562;2563;2564;2565;2566;2567;2568;2569;
2570;2571;2572;2573;2574;2575;2576;2577;2578;2579;
2580;2581;2582;2583;2584;2585;2586;2587;2588;2589;
2590;2591;2592;2593;2594;2595;2596;2597;2598;2599;
2600;2601;2602;2603;2604;2605;2606;2607;2608;2609;
2610;2611;2612;2613;2614;2615;2616;2617;2618;2619;
2620;2621;2622;2623;2624;2625;2626;2627;2628;2629;
2630;2631;2632;2633;2634;2635;2636;2637;2638;2639;
2640;2641;2642;2643;2644;2645;2646;2647;2648;2649;
2650;2651;2652;2653;2654;2655;2656;2657;2658;2659;
2660;2661;2662;2663;2664;2665;2666;2667;2668;2669;
2670;2671;2672;2673;2674;2675;2676;2677;2678;2679;
2680;2681;2682;2683;2684;2685;2686;2687;2688;2689;
2690;2691;2692;2693;2694;2695;2696;2697;2698;2699;
2700;2701;2702;2703;2704;2705;2706;2707;2708;2709;
2710;2711;2712;2713;2714;2715;2716;2717;2718;2719;
2720;2721;2722;2723;2724;2725;2726;2727;2728;2729;
2730;2731;2732;2733;2734;2735;2736;2737;2738;2739;
2740;2741;2742;2743;2744;2745;2746;2747;2748;2749;
2750;2751;2752;2753;2754;2755;2756;2757;2758;2759;
2760;2761;2762;2763;2764;2765;2766;2767;2768;2769;
2770;2771;2772;2773;2774;2775;2776;2777;2778;2779;
2780;2781;2782;2783;2784;2785;2786;2787;2788;2789;
2790;2791;2792;2793;2794;2795;2796;2797;2798;2799;
2800;2801;2802;2803;2804;2805;2806;2807;2808;2809;
2810;2811;2812;2813;2814;2815;2816;2817;2818;2819;
2820;2821;2822;2823;2824;2825;2826;2827;2828;2829;
2830;2831;2832;2833;2834;2835;2836;2837;2838;2839;
2840;2841;2842;2843;2844;2845;2846;2847;2848;2849;
2850;2851;2852;2853;2854;2855;2856;2857;2858;2859;
2860;2861;2862;2863;2864;2865;2866;2867;2868;2869;
2870;2871;2872;2873;2874;2875;2876;2877;2878;2879;
2880;2881;2882;2883;2884;2885;2886;2887;2888;2889;
2890;2891;2892;2893;2894;2895;2896;2897;2898;2899;
2900;2901;2902;2903;2904;2905;2906;2907;2908;2909;
2910;2911;2912;2913;2914;2915;2916;2917;2918;2919;
2920;2921;2922;2923;2924;2925;2926;2927;2928;2929;
2930;2931;2932;2933;2934;2935;2936;2937;2938;2939;
2940;2941;2942;2943;2944;2945;2946;2947;2948;2949;
2950;2951;2952;2953;2954;2955;2956;2957;2958;2959;
2960;2961;2962;2963;2964;2965;2966;2967;2968;2969;
2970;2971;2972;2973;2974;2975;2976;2977;2978;2979;
2980;2981;2982;2983;2984;2985;2986;2987;2988;2989;
2990;2991;2992;2993;2994;2995;2996;2997;2998;2999;
3000;3001;3002;3003;3004;3005;3006;3007;3008;3009;
3010;3011;3012;3013;3014;3015;3016;3017;3018;3019;
3020;3021;3022;3023;3024;3025;3026;3027;3028;3029;
3030;3031;3032;3033;3034;3035;3036;3037;3038;3039;
3040;3041;3042;3043;3044;3045;3046;3047;3048;3049;
3050;3051;3052;3053;3054;3055;3056;3057;3058;3059;
3060;3061;3062;3063;3064;3065;3066;3067;3068;3069;
3070;3071;3072;3073;3074;3075;3076;3077;3078;3079;
3080;3081;3082;3083;3084;3085;3086;3087;3088;3089;
3090;3091;3092;3093;3094;3095;3096;3097;3098;3099;
3100;3101;3102;3103;3104;3105;3106;3107;3108;3109;
3110;3111;3112;3113;3114;3115;3116;3117;3118;3119;
3120;3121;3122;3123;3124;3125;3126;3127;3128;3129;
3130;3131;3132;3133;3134;3135;3136;3137;3138;3139;
3140;3141;3142;3143;3144;3145;3146;3147;3148;3149;
3150;3151;3152;3153;3154;3155;3156;3157;3158;3159;
3160;3161;3162;3163;3164;3165;3166;3167;3168;3169;
3170;3171;3172;3173;3174;3175;3176;3177;3178;3179;
3180;3181;3182;3183;3184;3185;3186;3187;3188;3189;
3190;3191;3192;3193;3194;3195;3196;3197;3198;3199;
3200;3201;3202;3203;3204;3205;3206;3207;3208;3209;
3210;3211;3212;3213;3214;3215;3216;3217;3218;3219;
3220;3221;3222;3223;3224;3225;3226;3227;3228;3229;
3230;3231;3232;3233;3234;3235;3236;3237;3238;3239;
3240;3241;3242;3243;3244;3245;3246;3247;3248;3249;
3250;3251;3252;3253;3254;3255;3256;3257;3258;3259;
3260;3261;3262;3263;3264;3265;3266;3267;3268;3269;
3270;3271;3272;3273;3274;3275;3276;3277;3278;3279;
3280;3281;3282;3283;3284;3285;3286;3287;3288;3289;
3290;3291;3292;3293;3294;3295;3296;3297;3298;3299;
3300;3301;3302;3303;3304;3305;3306;3307;3308;3309;
3310;3311;3312;3313;3314;3315;3316;3317;3318;3319;
3320;3321;3322;3323;3324;3325;3326;3327;3328;3329;
3330;3331;3332;3333;3334;3335;3336;3337;3338;3339;
3340;3341;3342;3343;3344;3345;3346;3347;3348;3349;
3350;3351;3352;3353;3354;3355;3356;3357;3358;3359;
3360;3361;3362;3363;3364;3365;3366;3367;3368;3369;
3370;3371;3372;3373;3374;3375;3376;3377;3378;3379;
3380;3381;3382;3383;3384;3385;3386;3387;3388;3389;
3390;3391;3392;3393;3394;3395;3396;3397;3398;3399;
3400;3401;3402;3403;3404;3405;3406;3407;3408;3409;
3410;3411;3412;3413;3414;3415;3416;3417;3418;3419;
3420;3421;3422;3423;3424;3425;3426;3427;3428;3429;
3430;3431;3432;3433;3434;3435;3436;3437;3438;3439;
3440;3441;3442;3443;3444;3445;3446;3447;3448;3449;
3450;3451;3452;3453;3454;3455;3456;3457;3458;3459;
3460;3461;3462;3463;3464;3465;3466;3467;3468;3469;
3470;3471;3472;3473;3474;3475;3476;3477;3478;3479;
3480;3481;3482;3483;3484;3485;3486;3487;3488;3489;
3490;3491;3492;3493;3494;3495;3496;3497;3498;3499;
3500;3501;3502;3503;3504;3505;3506;3507;3508;3509;
3510;3511;3512;3513;3514;3515;3516;3517;3518;3519;
3520;3521;3522;3523;3524;3525;3526;3527;3528;3529;
3530;3531;3532;3533;3534;3535;3536;3537;3538;3539;
3540;3541;3542;3543;3544;3545;3546;3547;3548;3549;
3550;3551;3552;3553;3554;3555;3556;3557;3558;3559;
3560;3561;3562;3563;3564;3565;3566;3567;3568;3569;
3570;3571;3572;3573;3574;3575;3576;3577;3578;3579;
3580;3581;3582;3583;3584;3585;3586;3587;3588;3589;
3590;3591;3592;3593;3594;3595;3596;3597;3598;3599;
3600;3601;3602;3603;3604;3605;3606;3607;3608;3609;
3610;3611;3612;3613;3614;3615;3616;3617;3618;3619;
3620;3621;3622;3623;3624;3625;3626;3627;3628;3629;
3630;3631;3632;3633;3634;3635;3636;3637;3638;3639;
3640;3641;3642;3643;3644;3645;3646;3647;3648;3649;
3650;3651;3652;3653;3654;3655;3656;3657;3658;3659;
3660;3661;3662;3663;3664;3665;3666;3667;3668;3669;
3670;3671;3672;3673;3674;3675;3676;3677;3678;3679;
3680;3681;3682;3683;3684;3685;3686;3687;3688;3689;
3690;3691;3692;3693;3694;3695;3696;3697;3698;3699;
3700;3701;3702;3703;3704;3705;3706;3707;3708;3709;
3710;3711;3712;3713;3714;3715;3716;3717;3718;3719;
3720;3721;3722;3723;3724;3725;3726;3727;3728;3729;
3730;3731;3732;3733;3734;3735;3736;3737;3738;3739;
3740;3741;3742;3743;3744;3745;3746;3747;3748;3749;
3750;3751;3752;3753;3754;3755;3756;3757;3758;3759;
3760;3761;3762;3763;3764;3765;3766;3767;3768;3769;
3770;3771;3772;3773;3774;3775;3776;3777;3778;3779;
3780;3781;3782;3783;3784;3785;3786;3787;3788;3789;
3790;3791;3792;3793;3794;3795;3796;3797;3798;3799;
3800;3801;3802;3803;3804;3805;3806;3807;3808;3809;
3810;3811;3812;3813;3814;3815;3816;3817;3818;3819;
3820;3821;3822;3823;3824;3825;3826;3827;3828;3829;
3830;3831;3832;3833;3834;3835;3836;3837;3838;3839;
3840;3841;3842;3843;3844;3845;3846;3847;3848;3849;
3850;3851;3852;3853;3854;3855;3856;3857;3858;3859;
3860;3861;3862;3863;3864;3865;3866;3867;3868;3869;
3870;3871;3872;3873;3874;3875;3876;3877;3878;3879;
3880;3881;3882;3883;3884;3885;3886;3887;3888;3889;
3890;3891;3892;3893;3894;3895;3896;3897;3898;3899;
3900;3901;3902;3903;3904;3905;3906;3907;3908;3909;
3910;3911;3912;3913;3914;3915;3916;3917;3918;3919;
3920;3921;3922;3923;3924;3925;3926;3927;3928;3929;
3930;3931;3932;3933;3934;3935;3936;3937;3938;3939;
3940;3941;3942;3943;3944;3945;3946;3947;3948;3949;
3950;3951;3952;3953;3954;3955;3956;3957;3958;3959;
3960;3961;3962;3963;3964;3965;3966;3967;3968;3969;
3970;3971;3972;3973;3974;3975;3976;3977;3978;3979;
3980;3981;3982;3983;3984;3985;3986;3987;3988;3989;
3990;3991;3992;3993;3994;3995;3996;3997;3998;3999;
4000;4001;4002;4003;4004;4005;4006;4007;4008;4009;
4010;4011;4012;4013;4014;4015;4016;4017;4018;4019;
4020;4021;4022;4023;4024;4025;4026;4027;4028;4029;
4030;4031;4032;4033;4034;4035;4036;4037;4038;4039;
4040;4041;4042;4043;4044;4045;4046;4047;4048;4049;
4050;4051;4052;4053;4054;4055;4056;4057;4058;4059;
4060;4061;4062;4063;4064;4065;4066;4067;4068;4069;
4070;4071;4072;4073;4074;4075;4076;4077;4078;4079;
4080;4081;4082;4083;4084;4085;4086;4087;4088;4089;
4090;4091;4092;4093;4094;4095;4096;4097;4098;4099;
4100;4101;4102;4103;4104;4105;4106;4107;4108;4109;
4110;4111;4112;4113;4114;4115;4116;4117;4118;4119;
4120;4121;4122;4123;4124;4125;4126;4127;4128;4129;
4130;4131;4132;4133;4134;4135;4136;4137;4138;4139;
4140;4141;4142;4143;4144;4145;4146;4147;4148;4149;
4150;4151;4152;4153;4154;4155;4156;4157;4158;4159;
4160;4161;4162;4163;4164;4165;4166;4167;4168;4169;
4170;4171;4172;4173;4174;4175;4176;4177;4178;4179;
4180;4181;4182;4183;4184;4185;4186;4187;4188;4189;
4190;4191;4192;4193;4194;4195;4196;4197;4198;4199;
4200;4201;4202;4203;4204;4205;4206;4207;4208;4209;
4210;4211;4212;4213;4214;4215;4216;4217;4218;4219;
4220;4221;4222;4223;4224;4225;4226;4227;4228;4229;
4230;4231;4232;4233;4234;4235;4236;4237;4238;4239;
4240;4241;4242;4243;4244;4245;4246;4247;4248;4249;
4250;4251;4252;4253;4254;4255;4256;4257;4258;4259;
4260;4261;4262;4263;4264;4265;4266;4267;4268;4269;
4270;4271;4272;4273;4274;4275;4276;4277;4278;4279;
4280;4281;4282;4283;4284;4285;4286;4287;4288;4289;
4290;4291;4292;4293;4294;4295;4296;4297;4298;4299;
4300;4301;4302;4303;4304;4305;4306;4307;4308;4309;
4310;4311;4312;4313;4314;4315;4316;4317;4318;4319;
4320;4321;4322;4323;4324;4325;4326;4327;4328;4329;
4330;4331;4332;4333;4334;4335;4336;4337;4338;4339;
4340;4341;4342;4343;4344;4345;4346;4347;4348;4349;
4350;4351;4352;4353;4354;4355;4356;4357;4358;4359;
4360;4361;4362;4363;4364;4365;4366;4367;4368;4369;
4370;4371;4372;4373;4374;4375;4376;4377;4378;4379;
4380;4381;4382;4383;4384;4385;4386;4387;4388;4389;
4390;4391;4392;4393;4394;4395;4396;4397;4398;4399;
4400;4401;4402;4403;4404;4405;4406;4407;4408;4409;
4410;4411;4412;4413;4414;4415;4416;4417;4418;4419;
4420;4421;4422;4423;4424;4425;4426;4427;4428;4429;
4430;4431;4432;4433;4434;4435;4436;4437;4438;4439;
4440;4441;4442;4443;4444;4445;4446;4447;4448;4449;
4450;4451;4452;4453;4454;4455;4456;4457;4458;4459;
4460;4461;4462;4463;4464;4465;4466;4467;4468;4469;
4470;4471;4472;4473;4474;4475;4476;4477;4478;4479;
4480;4481;4482;4483;4484;4485;4486;4487;4488;4489;
4490;4491;4492;4493;4494;4495;4496;4497;4498;4499;
4500;4501;4502;4503;4504;4505;4506;4507;4508;4509;
4510;4511;4512;4513;4514;4515;4516;4517;4518;4519;
4520;4521;4522;4523;4524;4525;4526;4527;4528;4529;
4530;4531;4532;4533;4534;4535;4536;4537;4538;4539;
4540;4541;4542;4543;4544;4545;4546;4547;4548;4549;
4550;4551;4552;4553;4554;4555;4556;4557;4558;4559;
4560;4561;4562;4563;4564;4565;4566;4567;4568;4569;
4570;4571;4572;4573;4574;4575;4576;4577;4578;4579;
4580;4581;4582;4583;4584;4585;4586;4587;4588;4589;
4590;4591;4592;4593;4594;4595;4596;4597;4598;4599;
4600;4601;4602;4603;4604;4605;4606;4607;4608;4609;
4610;4611;4612;4613;4614;4615;4616;4617;4618;4619;
4620;4621;4622;4623;4624;4625;4626;4627;4628;4629;
4630;4631;4632;4633;4634;4635;4636;4637;4638;4639;
4640;4641;4642;4643;4644;4645;4646;4647;4648;4649;
4650;4651;4652;4653;4654;4655;4656;4657;4658;4659;
4660;4661;4662;4663;4664;4665;4666;4667;4668;4669;
4670;4671;4672;4673;4674;4675;4676;4677;4678;4679;
4680;4681;4682;4683;4684;4685;4686;4687;4688;4689;
4690;4691;4692;4693;4694;4695;4696;4697;4698;4699;
4700;4701;4702;4703;4704;4705;4706;4707;4708;4709;
4710;4711;4712;4713;4714;4715;4716;4717;4718;4719;
4720;4721;4722;4723;4724;4725;4726;4727;4728;4729;
4730;4731;4732;4733;4734;4735;4736;4737;4738;4739;
4740;4741;4742;4743;4744;4745;4746;4747;4748;4749;
4750;4751;4752;4753;4754;4755;4756;4757;4758;4759;
4760;4761;4762;4763;4764;4765;4766;4767;4768;4769;
4770;4771;4772;4773;4774;4775;4776;4777;4778;4779;
4780;4781;4782;4783;4784;4785;4786;4787;4788;4789;
4790;4791;4792;4793;4794;4795;4796;4797;4798;4799;
4800;4801;4802;4803;4804;4805;4806;4807;4808;4809;
4810;4811;4812;4813;4814;4815;4816;4817;4818;4819;
4820;4821;4822;4823;4824;4825;4826;4827;4828;4829;
4830;4831;4832;4833;4834;4835;4836;4837;4838;4839;
4840;4841;4842;4843;4844;4845;4846;4847;4848;4849;
4850;4851;4852;4853;4854;4855;4856;4857;4858;4859;
4860;4861;4862;4863;4864;4865;4866;4867;4868;4869;
4870;4871;4872;4873;4874;4875;4876;4877;4878;4879;
4880;4881;4882;4883;4884;4885;4886;4887;4888;4889;
4890;4891;4892;4893;4894;4895;4896;4897;4898;4899;
4900;4901;4902;4903;4904;4905;4906;4907;4908;4909;
4910;4911;4912;4913;4914;4915;4916;4917;4918;4919;
4920;4921;4922;4923;4924;4925;4926;4927;4928;4929;
4930;4931;4932;4933;4934;4935;4936;4937;4938;4939;
4940;4941;4942;4943;4944;4945;4946;4947;4948;4949;
4950;4951;4952;4953;4954;4955;4956;4957;4958;4959;
4960;4961;4962;4963;4964;4965;4966;4967;4968;4969;
4970;4971;4972;4973;4974;4975;4976;4977;4978;4979;
4980;4981;4982;4983;4984;4985;4986;4987;4988;4989;
4990;4991;4992;4993;4994;4995;4996;4997;4998;4999;
    };
    last_sort_spec {
     name="last_sort_spec";
     ops {
      name="ops";
      el_typ=DataSortEl;
      el_def=0;
     };
    };
    row_with_hilite=-1;
   };
  };
  DataTable_Group @.gp[2] {
   name="AnalysisData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
  };
 };
 programs {
  name="programs";
  el_typ=Program;
  el_def=0;
  tags=;
  desc=;
  debug_mode=0;
  Program @[0] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserData_DocLink;
    el_def=0;
    UserData_DocLink @[0] {name="DocLink": doc=.programs[0].doc$$: };
   };
   name="SetDefaults";
   short_nm="SDflts";
   tags=;
   desc="restores default initial parameters in the simulation";
   version {
    major=0;
    minor=0;
    step=0;
   };
   author="Randall C. O'Reilly";
   email="emergent-users@grey.colorado.edu";
   flags=0;
   stop_step_cond {
    expr=;
   };
   objs {
    name="objs";
    el_typ=taNBase;
    el_def=0;
   };
   objs_vars {
    name="objs_vars";
    el_typ=ProgVar;
    el_def=0;
   };
   types {
    name="types";
    el_typ=DynEnumType;
    el_def=0;
    DynEnumType @[0] {
     name="EnvType";
     desc=;
     enums {
      name="enums";
      el_typ=DynEnumItem;
      el_def=0;
      DynEnumItem @[0] {
       name="EASY";
       value=0;
       desc=;
      };
      DynEnumItem @[1] {
       name="HARD";
       value=1;
       desc=;
      };
      DynEnumItem @[2] {
       name="IMPOSSIBLE";
       value=2;
       desc=;
      };
     };
     bits=0;
    };
    DynEnumType @[1] {
     name="LearnRule";
     desc=;
     enums {
      name="enums";
      el_typ=DynEnumItem;
      el_def=0;
      DynEnumItem @[0] {
       name="HEBB";
       value=0;
       desc=;
      };
      DynEnumItem @[1] {
       name="ERR_DRIVEN";
       value=1;
       desc=;
      };
     };
     bits=0;
    };
   };
   args {
    name="args";
    el_typ=ProgVar;
    el_def=0;
   };
   vars {
    name="vars";
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="train";
     var_type=T_Object;
     object_type=Program;
     object_val=$.programs.gp[0][1]$;
     object_scope=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[1] {
     name="env_type";
     var_type=T_DynEnum;
     object_scope=NULL;
     dyn_enum_val {
      user_data_=NULL;
      enum_type=.programs[0].types[0]$$;
      value=0;
     };
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[2] {
     name="input_data";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.data.gp[0][0]$$;
     object_scope=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[3] {
     name="MyControlPanel";
     var_type=T_Object;
     object_type=ControlPanel;
     object_val=.ctrl_panels[0]$$;
     object_scope=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[4] {
     name="con_spec";
     var_type=T_Object;
     object_type=LeabraConSpec;
     object_val=$.networks[0].specs[1]$;
     object_scope=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[5] {
     name="gain";
     var_type=T_Real;
     real_val=6;
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc="weight sigmoid (wt_sig) gain";
     init_from=NULL;
    };
    ProgVar @[6] {
     name="off";
     var_type=T_Real;
     real_val=1;
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc="weight sigmoid (wt_sig) offset";
     init_from=NULL;
    };
    ProgVar @[7] {
     name="network";
     var_type=T_Object;
     object_type=LeabraNetwork;
     object_val=.networks[0]$$;
     object_scope=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[8] {
     name="learn_rule";
     var_type=T_DynEnum;
     object_scope=NULL;
     dyn_enum_val {
      user_data_=NULL;
      enum_type=.programs[0].types[1]$$;
      value=0;
     };
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[9] {
     name="max_epoch";
     var_type=T_Int;
     int_val=30;
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   functions {
    name="functions";
    el_typ=Function;
    el_def=0;
   };
   init_code {
    name="init_code";
    el_typ=ProgCode;
    el_def=0;
   };
   prog_code {
    name="prog_code";
    el_typ=ProgCode;
    el_def=0;
    MethodCall @[0] {
     name="MethodCall_trainSetVarenvtypeenvtype";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="train->SetVar(\"env_type\", env_type)";
     result_var=NULL;
     obj=.programs[0].vars[0]$$;
     method=Program::SetVar;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="taString&";
       name="var_nm";
       required=1;
       def_val="\"\"";
       prev_expr=;
       expr {
	expr="\"env_type\"";
       };
      };
      ProgArg @[1] {
       arg_type=const_Variant_ref;
       type="Variant&";
       name="value";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="env_type";
       };
      };
     };
     meth_sig="bool SetVar(taString& var_nm, Variant& value)";
     meth_desc=" set the value of a program variable (only top-level variables in vars or args) -- can be called from within a running program";
    };
    MemberAssign @[1] {
     name="MemberAssign_conspecwtsiggaingain";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="con_spec.wt_sig.gain = gain";
     obj=.programs[0].vars[4]$$;
     path="wt_sig.gain";
     expr {
      expr="gain";
     };
     update_after=0;
    };
    MemberAssign @[2] {
     name="MemberAssign_conspecwtsigoffoff";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="con_spec.wt_sig.off = off";
     obj=$.programs[0].vars[4]$;
     path="wt_sig.off";
     expr {
      expr="off";
     };
     update_after=0;
    };
    MethodCall @[3] {
     name="MethodCall_trainSetVarinputdatainputdata";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="train->SetVar(\"input_data\", input_data)";
     result_var=NULL;
     obj=$.programs[0].vars[0]$;
     method=Program::SetVar;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="taString&";
       name="var_nm";
       required=1;
       def_val="\"\"";
       prev_expr=;
       expr {
	expr="\"input_data\"";
       };
      };
      ProgArg @[1] {
       arg_type=const_Variant_ref;
       type="Variant&";
       name="value";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="input_data";
       };
      };
     };
     meth_sig="bool SetVar(taString& var_nm, Variant& value)";
     meth_desc=" set the value of a program variable (only top-level variables in vars or args) -- can be called from within a running program";
    };
    MethodCall @[4] {
     name="MethodCall_trainSetVarnetworknetwork";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="train->SetVar(\"network\", network)";
     result_var=NULL;
     obj=$.programs[0].vars[0]$;
     method=Program::SetVar;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="taString&";
       name="var_nm";
       required=1;
       def_val="\"\"";
       prev_expr=;
       expr {
	expr="\"network\"";
       };
      };
      ProgArg @[1] {
       arg_type=const_Variant_ref;
       type="Variant&";
       name="value";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="network";
       };
      };
     };
     meth_sig="bool SetVar(taString& var_nm, Variant& value)";
     meth_desc=" set the value of a program variable (only top-level variables in vars or args) -- can be called from within a running program";
    };
    MethodCall @[5] {
     name="MethodCall_trainSetVarmaxepochmaxepoch";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="train->SetVar(\"max_epoch\", max_epoch)";
     result_var=NULL;
     obj=$.programs[0].vars[0]$;
     method=Program::SetVar;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="taString&";
       name="var_nm";
       required=1;
       def_val="\"\"";
       prev_expr=;
       expr {
	expr="\"max_epoch\"";
       };
      };
      ProgArg @[1] {
       arg_type=const_Variant_ref;
       type="Variant&";
       name="value";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="max_epoch";
       };
      };
     };
     meth_sig="bool SetVar(taString& var_nm, Variant& value)";
     meth_desc=" set the value of a program variable (only top-level variables in vars or args) -- can be called from within a running program";
    };
    MethodCall @[6] {
     name="MethodCall_trainInit";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="train->Init()";
     result_var=NULL;
     obj=$.programs[0].vars[0]$;
     method=Program::Init;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
     };
     meth_sig="void Init()";
     meth_desc=" run init_code, global variables retain current values unless reset in the init_code";
    };
    ProgramCall @[7] {
     name="ProgramCall_SetLearnRulenetw_utdatalearnrule";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="SetLearnRule(network, input_data, learn_rule)";
     prog_args {
      name="prog_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=LeabraNetwork;
       type="LeabraNetwork*";
       name="network";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="network";
       };
      };
      ProgArg @[1] {
       arg_type=DataTable;
       type="DataTable*";
       name="input_data";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="input_data";
       };
      };
      ProgArg @[2] {
       arg_type=DynEnum;
       type="LearnRule";
       name="learn_rule";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="learn_rule";
       };
      };
     };
     target=$.programs[1]$;
     targ_ld_init="*SetLearnRule*";
    };
   };
   step_prog=NULL;
   step_n=1;
   doc {
    name="doc";
    desc=;
    web_doc=0;
    wiki=;
    url="local";
    full_url="local";
    text_size=1;
    text=;
    html_text=;
   };
  };
  Program @[1] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserData_DocLink;
    el_def=0;
    UserData_DocLink @[0] {name="DocLink": doc=.programs[1].doc$$: };
   };
   name="SetLearnRule";
   short_nm="SLrRl";
   tags=;
   desc="sets the learning mix values between HEBB and ERR";
   version {
    major=0;
    minor=0;
    step=0;
   };
   author="Randall C. O'Reilly";
   email="emergent-users@grey.colorado.edu";
   flags=0;
   stop_step_cond {
    expr=;
   };
   objs {
    name="objs";
    el_typ=taNBase;
    el_def=0;
   };
   objs_vars {
    name="objs_vars";
    el_typ=ProgVar;
    el_def=0;
   };
   types {
    name="types";
    el_typ=DynEnumType;
    el_def=0;
    DynEnumType @[0] {
     name="LearnRule";
     desc=;
     enums {
      name="enums";
      el_typ=DynEnumItem;
      el_def=0;
      DynEnumItem @[0] {
       name="HEBB";
       value=0;
       desc=;
      };
      DynEnumItem @[1] {
       name="ERR_DRIVEN";
       value=1;
       desc=;
      };
     };
     bits=0;
    };
   };
   args {
    name="args";
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="network";
     var_type=T_Object;
     object_type=LeabraNetwork;
     object_val=$.networks[0]$;
     object_scope=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[1] {
     name="input_data";
     var_type=T_Object;
     object_type=DataTable;
     object_val=$.data.gp[0][0]$;
     object_scope=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL|PGRM_ARG;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[2] {
     name="learn_rule";
     var_type=T_DynEnum;
     object_scope=NULL;
     dyn_enum_val {
      user_data_=NULL;
      enum_type=.programs[1].types[0]$$;
      value=0;
     };
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   vars {
    name="vars";
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="MyControlPanel";
     var_type=T_Object;
     object_type=ControlPanel;
     object_val=$.ctrl_panels[0]$;
     object_scope=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[1] {
     name="con_spec";
     var_type=T_Object;
     object_type=LeabraConSpec;
     object_val=$.networks[0].specs[1]$;
     object_scope=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   functions {
    name="functions";
    el_typ=Function;
    el_def=0;
   };
   init_code {
    name="init_code";
    el_typ=ProgCode;
    el_def=0;
   };
   prog_code {
    name="prog_code";
    el_typ=ProgCode;
    el_def=0;
    AssignExpr @[0] {
     name="AssignExpr_conspecnetworkspecsConSpec";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="con_spec = network.specs.ConSpec";
     result_var=.programs[1].vars[1]$$;
     expr {
      expr="network.specs.ConSpec";
     };
    };
    Switch @[1] {
     name="Switch_switchlearnrule";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="switch(learn_rule)";
     switch_var=.programs[1].args[2]$$;
     cases {
      name="cases";
      el_typ=CaseBlock;
      el_def=0;
      CaseBlock @[0] {
       name="CaseBlock_caseHEBB";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="case: HEBB";
       prog_code {
	name="prog_code";
	el_typ=ProgCode;
	el_def=0;
	MemberAssign @[0] {
	 name="MemberAssign_conspecxcalllrn1";
	 desc="set Hebb to 100%";
	 flags=CAN_REVERT_TO_CODE;
	 code_string="con_spec.xcal.l_lrn = 1";
	 obj=$.programs[1].vars[1]$;
	 path="xcal.l_lrn";
	 expr {
	  expr="1";
	 };
	 update_after=1;
	};
	MemberAssign @[1] {
	 name="MemberAssign_conspecxcalmlrn0";
	 desc="err 0";
	 flags=CAN_REVERT_TO_CODE;
	 code_string="con_spec.xcal.m_lrn = 0";
	 obj=$.programs[1].vars[1]$;
	 path="xcal.m_lrn";
	 expr {
	  expr="0";
	 };
	 update_after=1;
	};
	MemberAssign @[2] {
	 name="MemberAssign_networkspecsBiasSpec0lrate0";
	 desc="bias weights learning rate needs to be 0 if Hebbian learning is used";
	 flags=CAN_REVERT_TO_CODE;
	 code_string="network.specs.BiasSpec_0.lrate = 0";
	 obj=.programs[1].args[0]$$;
	 path="specs.BiasSpec_0.lrate";
	 expr {
	  expr="0";
	 };
	 update_after=1;
	};
	MemberAssign @[3] {
	 name="MemberAssign_networkspecsConSpec0lrate004";
	 desc="bias weights learning rate needs to be 0 if Hebbian learning is used";
	 flags=CAN_REVERT_TO_CODE;
	 code_string="network.specs.ConSpec_0.lrate = 0.04";
	 obj=$.programs[1].args[0]$;
	 path="specs.ConSpec_0.lrate";
	 expr {
	  expr="0.04";
	 };
	 update_after=1;
	};
       };
       case_val {
	expr="HEBB";
       };
       is_default=0;
      };
      CaseBlock @[1] {
       name="CaseBlock_caseERRDRIVEN";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="case: ERR_DRIVEN";
       prog_code {
	name="prog_code";
	el_typ=ProgCode;
	el_def=0;
	MemberAssign @[0] {
	 name="MemberAssign_conspecxcalllrn0";
	 desc="set Hebb to 0%";
	 flags=CAN_REVERT_TO_CODE;
	 code_string="con_spec.xcal.l_lrn = 0";
	 obj=$.programs[1].vars[1]$;
	 path="xcal.l_lrn";
	 expr {
	  expr="0";
	 };
	 update_after=1;
	};
	MemberAssign @[1] {
	 name="MemberAssign_conspecxcalmlrn1";
	 desc="err 100%";
	 flags=CAN_REVERT_TO_CODE;
	 code_string="con_spec.xcal.m_lrn = 1";
	 obj=$.programs[1].vars[1]$;
	 path="xcal.m_lrn";
	 expr {
	  expr="1";
	 };
	 update_after=1;
	};
	MemberAssign @[2] {
	 name="MemberAssign_networkspecsBiasSpec0lrate004";
	 desc="bias weights learning rate needs to be 0 if Hebbian learning is used";
	 flags=CAN_REVERT_TO_CODE;
	 code_string="network.specs.BiasSpec_0.lrate = 0.04";
	 obj=$.programs[1].args[0]$;
	 path="specs.BiasSpec_0.lrate";
	 expr {
	  expr="0.04";
	 };
	 update_after=1;
	};
	MemberAssign @[3] {
	 name="MemberAssign_networkspecsConSpec0lrate004";
	 desc="bias weights learning rate needs to be 0 if Hebbian learning is used";
	 flags=CAN_REVERT_TO_CODE;
	 code_string="network.specs.ConSpec_0.lrate = 0.04";
	 obj=$.programs[1].args[0]$;
	 path="specs.ConSpec_0.lrate";
	 expr {
	  expr="0.04";
	 };
	 update_after=1;
	};
       };
       case_val {
	expr="ERR_DRIVEN";
       };
       is_default=0;
      };
     };
    };
    MethodCall @[2] {
     name="MethodCall_networkUpdateAllSpecstrue";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="network->UpdateAllSpecs(true)";
     result_var=NULL;
     obj=$.programs[1].args[0]$;
     method=Network::UpdateAllSpecs;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=bool;
       type="bool";
       name="force";
       required=0;
       def_val="false";
       prev_expr=;
       expr {
	expr="true";
       };
      };
     };
     meth_sig="bool UpdateAllSpecs(bool force = false)";
     meth_desc=" update all unit and con specs -- just calls above two functions";
    };
    MethodCall @[3] {
     name="MethodCall_MyControlPanelUpdateAfterEdit";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="MyControlPanel->UpdateAfterEdit()";
     result_var=NULL;
     obj=.programs[1].vars[0]$$;
     method=taBase::UpdateAfterEdit;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
     };
     meth_sig="void UpdateAfterEdit()";
     meth_desc=" (aka UAE) called after editing, or any user change to members (eg. in the interface, script)";
    };
   };
   step_prog=NULL;
   step_n=1;
   doc {
    name="doc";
    desc=;
    web_doc=0;
    wiki=;
    url="local";
    full_url="local";
    text_size=1;
    text=;
    html_text=;
   };
  };
  Program @[2] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_1";
    el_typ=UserData_DocLink;
    el_def=0;
    UserData_DocLink @[0] {name="DocLink": doc=.programs[2].doc$$: };
   };
   name="SaveOutput";
   short_nm="Svtpt";
   tags=;
   desc=;
   version {
    major=0;
    minor=0;
    step=0;
   };
   author=;
   email=;
   flags=NO_STOP_STEP|OBJS_UPDT_GUI;
   stop_step_cond {
    expr=;
   };
   objs {
    name="objs";
    el_typ=DataTable;
    el_def=0;
   };
   objs_vars {
    name="objs_vars";
    el_typ=ProgVar;
    el_def=0;
   };
   types {
    name="types";
    el_typ=DynEnumType;
    el_def=0;
   };
   args {
    name="args";
    el_typ=ProgVar;
    el_def=0;
   };
   vars {
    name="vars";
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="file_name";
     var_type=T_String;
     string_val="output";
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[1] {
     name="cycle_output_data";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.data.gp[1][3]$$;
     object_scope=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[2] {
     name="trial_output_data";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.data.gp[1][0]$$;
     object_scope=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[3] {
     name="file_name_cycle";
     var_type=T_String;
     string_val=;
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   functions {
    name="functions";
    el_typ=Function;
    el_def=0;
   };
   init_code {
    name="init_code";
    el_typ=ProgCode;
    el_def=0;
   };
   prog_code {
    name="prog_code";
    el_typ=ProgCode;
    el_def=0;
    LocalVars @[0] {
     name="LocalVars_LocalVars0vars";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="LocalVars (0 vars)";
     local_vars {
      name="local_vars";
      el_typ=ProgVar;
      el_def=0;
     };
    };
    MethodCall @[1] {
     name="MethodCall_trialoutputdataSaveDatafilename";
     desc=;
     flags=0;
     code_string=;
     result_var=NULL;
     obj=.programs[2].vars[2]$$;
     method=DataTable::SaveData;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="taString&";
       name="fname";
       required=0;
       def_val="\"\"";
       prev_expr=;
       expr {
	expr="file_name";
       };
      };
      ProgArg @[1] {
       arg_type=DataTable::Delimiters;
       type="DataTable::Delimiters";
       name="delim";
       required=0;
       def_val="DataTable::TAB";
       prev_expr=;
       expr {
	expr=;
       };
      };
      ProgArg @[2] {
       arg_type=bool;
       type="bool";
       name="quote_str";
       required=0;
       def_val="true";
       prev_expr=;
       expr {
	expr=;
       };
      };
      ProgArg @[3] {
       arg_type=bool;
       type="bool";
       name="save_headers";
       required=0;
       def_val="true";
       prev_expr=;
       expr {
	expr=;
       };
      };
     };
     meth_sig="void SaveData(taString& fname, DataTable::Delimiters delim = TAB, bool quote_str = true, bool save_headers = true)";
     meth_desc=" saves data, one line per rec, with delimiter between columns, and optionally quoting strings; if save_headers then the _H: header line is saved and data lines have _D:, else they are bare";
    };
    MethodCall @[2] {
     name="MethodCall_filenamecyclecatfilename";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="file_name_cycle.cat(file_name, \"_cycle\")";
     result_var=NULL;
     obj=.programs[2].vars[3]$$;
     method=taString::cat;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="taString&";
       name="y";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="file_name";
       };
      };
     };
     meth_sig="taString_ref cat(taString& y)";
     meth_desc=" concatenate (add) string to end of this one";
    };
    MethodCall @[3] {
     name="MethodCall_filenamecyclecatcycle";
     desc=;
     flags=0;
     code_string=;
     result_var=NULL;
     obj=$.programs[2].vars[3]$;
     method=taString::cat;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="taString&";
       name="y";
       required=1;
       def_val=;
       prev_expr=;
       expr {
	expr="\"_cycle\"";
       };
      };
     };
     meth_sig="taString_ref cat(taString& y)";
     meth_desc=" concatenate (add) string to end of this one";
    };
    MethodCall @[4] {
     name="MethodCall_cycleoutputdataS_tafilenamecycle";
     desc=;
     flags=0;
     code_string=;
     result_var=NULL;
     obj=.programs[2].vars[1]$$;
     method=DataTable::SaveData;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="taString&";
       name="fname";
       required=0;
       def_val="\"\"";
       prev_expr=;
       expr {
	expr="file_name_cycle";
       };
      };
      ProgArg @[1] {
       arg_type=DataTable::Delimiters;
       type="DataTable::Delimiters";
       name="delim";
       required=0;
       def_val="DataTable::TAB";
       prev_expr=;
       expr {
	expr=;
       };
      };
      ProgArg @[2] {
       arg_type=bool;
       type="bool";
       name="quote_str";
       required=0;
       def_val="true";
       prev_expr=;
       expr {
	expr=;
       };
      };
      ProgArg @[3] {
       arg_type=bool;
       type="bool";
       name="save_headers";
       required=0;
       def_val="true";
       prev_expr=;
       expr {
	expr=;
       };
      };
     };
     meth_sig="void SaveData(taString& fname, DataTable::Delimiters delim = TAB, bool quote_str = true, bool save_headers = true)";
     meth_desc=" saves data, one line per rec, with delimiter between columns, and optionally quoting strings; if save_headers then the _H: header line is saved and data lines have _D:, else they are bare";
    };
   };
   step_prog=NULL;
   step_n=1;
   doc {
    name="doc";
    desc=;
    web_doc=0;
    wiki=;
    url="local";
    full_url="local";
    text_size=1;
    text="<html>
<head></head>
<body>
== Enter Title Here ==
</body>
</html>
";
    html_text="<html>
<head></head>
<body>
<h2> Enter Title Here </h2>
</body>
</html>
";
   };
  };
  Program @[3] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_1";
    el_typ=UserData_DocLink;
    el_def=0;
    UserData_DocLink @[0] {name="DocLink": doc=.programs[3].doc$$: };
   };
   name="SetInhib";
   short_nm="Stnhb";
   tags=;
   desc=;
   version {
    major=0;
    minor=0;
    step=0;
   };
   author=;
   email=;
   flags=NO_STOP_STEP|OBJS_UPDT_GUI;
   stop_step_cond {
    expr=;
   };
   objs {
    name="objs";
    el_typ=DataTable;
    el_def=0;
   };
   objs_vars {
    name="objs_vars";
    el_typ=ProgVar;
    el_def=0;
   };
   types {
    name="types";
    el_typ=DynEnumType;
    el_def=0;
   };
   args {
    name="args";
    el_typ=ProgVar;
    el_def=0;
   };
   vars {
    name="vars";
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="inhib_on";
     var_type=T_Bool;
     bool_val=1;
     object_scope=NULL;
     flags=SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[1] {
     name="input_layer";
     var_type=T_Object;
     object_type=LeabraLayerSpec;
     object_val=$.networks[0].specs[2]$;
     object_scope=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[2] {
     name="pat_assoc_net";
     var_type=T_Object;
     object_type=LeabraNetwork;
     object_val=$.networks[0]$;
     object_scope=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   functions {
    name="functions";
    el_typ=Function;
    el_def=0;
   };
   init_code {
    name="init_code";
    el_typ=ProgCode;
    el_def=0;
   };
   prog_code {
    name="prog_code";
    el_typ=ProgCode;
    el_def=0;
    LocalVars @[0] {
     name="LocalVars_LocalVars0vars";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="LocalVars (0 vars)";
     local_vars {
      name="local_vars";
      el_typ=ProgVar;
      el_def=0;
     };
    };
    MemberAssign @[1] {
     name="MemberAssign_inputlayerlayinhiboninhibon";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="input_layer.lay_inhib.on = inhib_on";
     obj=.programs[3].vars[1]$$;
     path="lay_inhib.on";
     expr {
      expr="inhib_on";
     };
     update_after=1;
    };
    MemberAssign @[2] {
     name="MemberAssign_patassocnettimescycleqtrfalse";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="pat_assoc_net.times.cycle_qtr = false";
     obj=.programs[3].vars[2]$$;
     path="times.cycle_qtr";
     expr {
      expr="false";
     };
     update_after=0;
    };
   };
   step_prog=NULL;
   step_n=1;
   doc {
    name="doc";
    desc=;
    web_doc=0;
    wiki=;
    url="local";
    full_url="local";
    text_size=1;
    text="<html>
<head></head>
<body>
== Enter Title Here ==
</body>
</html>
";
    html_text="<html>
<head></head>
<body>
<h2> Enter Title Here </h2>
</body>
</html>
";
   };
  };
  Program_Group @.gp[0] {
   name="LeabraAll_Std";
   el_typ=Program;
   el_def=0;
   tags="Leabra, Std, All";
   desc="The full set of programs for training a standard Leabra network";
   debug_mode=0;
   Program @[0] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[0][0].doc$$: };
    };
    name="LeabraBatch";
    short_nm="Batch";
    tags="Leabra, Std";
    desc="Iterate over training runs (a batch of training runs) -- just a simple loop that calls training program";
    version {
     major=8;
     minor=0;
     step=0;
    };
    author="Randall C. O'Reilly";
    email="emergent-users@grey.colorado.edu";
    flags=0;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="network to operate on -- updates batch counter on network and passes it to train program";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[0][0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="datatable with training patterns -- not used by this program, but passed to train program";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="batch";
      var_type=T_Int;
      int_val=0;
      object_scope=NULL;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="batch counter";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="batch_start";
      var_type=T_Int;
      int_val=0;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="batch number to start on";
      init_from=NULL;
     };
     ProgVar @[2] {
      name="n_batches";
      var_type=T_Int;
      int_val=10;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="number of batches to run";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     NetCounterInit @[0] {
      name="NetCounterInit_NetCounterInitbatch";
      desc="initializes local batch counter and batch field on network";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Counter Init: batch";
      network_var=.programs.gp[0][0].args[0]$$;
      local_ctr_var=.programs.gp[0][0].vars[0]$$;
      counter=Network::batch;
      update_after=0;
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars1vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (1 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="i";
	var_type=T_Int;
	int_val=0;
	object_scope=NULL;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
     };
     AssignExpr @[1] {
      name="AssignExpr_batchbatchstart";
      desc="start at the start";
      flags=CAN_REVERT_TO_CODE;
      code_string="batch = batch_start";
      result_var=$.programs.gp[0][0].vars[0]$;
      expr {
       expr="batch_start";
      };
     };
     MemberAssign @[2] {
      name="MemberAssign_networkbatchbatch";
      desc="update network";
      flags=CAN_REVERT_TO_CODE;
      code_string="network.batch = batch";
      obj=$.programs.gp[0][0].args[0]$;
      path="batch";
      expr {
       expr="batch";
      };
      update_after=0;
     };
     ForLoop @[3] {
      name="ForLoop_fori0inbatchesi";
      desc="main loop over training runs";
      flags=CAN_REVERT_TO_CODE;
      code_string="for (i=0; i<n_batches; i++)";
      loop_code {
       name="loop_code";
       el_typ=ProgCode;
       el_def=0;
       ProgramCall @[0] {
	name="ProgramCall_LeabraTrainnetworkinputdatatrue";
	desc="run the training program -- sets the network and input_data args";
	flags=CAN_REVERT_TO_CODE;
	code_string="LeabraTrain(network, input_data, true)";
	prog_args {
	 name="prog_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="network";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="input_data";
	  };
	 };
	 ProgArg @[2] {
	  arg_type=bool;
	  type="bool";
	  name="no_prompts";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="true";
	  };
	 };
	};
	target=$.programs.gp[0][1]$;
	targ_ld_init="*LeabraTrain*";
       };
       NetCounterIncr @[1] {
	name="NetCounterIncr_NetCounterIncrbatch";
	desc="increment the local batch counter and copy to network";
	flags=CAN_REVERT_TO_CODE;
	code_string="Net Counter Incr: batch";
	network_var=$.programs.gp[0][0].args[0]$;
	local_ctr_var=$.programs.gp[0][0].vars[0]$;
	counter=Network::batch;
	update_after=0;
       };
      };
      init {
       expr="i=0";
      };
      test {
       expr="i<n_batches";
      };
      iter {
       expr="i++";
      };
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=1;
     wiki="emergent";
     url="LeabraBatch";
     full_url="https://grey.colorado.edu/emergent/index.php/LeabraBatch";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[1] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[0][1].doc$$: };
    };
    name="LeabraTrain";
    short_nm="Train";
    tags="Leabra, Train, RndSeedList";
    desc="A complete training run of a Leabra network: iterating over epochs until the network has learned the task.  Also has a list of random seeds that are tied to the network batch counter, providing consistent runs regardless of what happens in the training of each network, or where it is run (e.g., on different processors)";
    version {
     major=8;
     minor=0;
     step=0;
    };
    author="Randall C. O'Reilly";
    email="emergent-users@grey.colorado.edu";
    flags=0;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=RndSeed;
     el_def=0;
     RndSeed_List @[0] {
      name="rnd_seeds";
      seeds {
       name="seeds";
       el_typ=RndSeed;
       el_def=0;
       RndSeed @[0] {
	name="RndSeed_1";
	rnd_seed=2878175685;
       };
       RndSeed @[1] {
	name="RndSeed_2";
	rnd_seed=2878175686;
       };
       RndSeed @[2] {
	name="RndSeed_3";
	rnd_seed=2878175687;
       };
       RndSeed @[3] {
	name="RndSeed_4";
	rnd_seed=2878175688;
       };
       RndSeed @[4] {
	name="RndSeed_5";
	rnd_seed=2878175689;
       };
       RndSeed @[5] {
	name="RndSeed_6";
	rnd_seed=2878175690;
       };
       RndSeed @[6] {
	name="RndSeed_7";
	rnd_seed=2878175691;
       };
       RndSeed @[7] {
	name="RndSeed_8";
	rnd_seed=2878175692;
       };
       RndSeed @[8] {
	name="RndSeed_9";
	rnd_seed=2878175693;
       };
       RndSeed @[9] {
	name="RndSeed_10";
	rnd_seed=2878175694;
       };
       RndSeed @[10] {
	name="RndSeed_11";
	rnd_seed=2878175695;
       };
       RndSeed @[11] {
	name="RndSeed_12";
	rnd_seed=2878175696;
       };
       RndSeed @[12] {
	name="RndSeed_13";
	rnd_seed=2878175697;
       };
       RndSeed @[13] {
	name="RndSeed_14";
	rnd_seed=2878175698;
       };
       RndSeed @[14] {
	name="RndSeed_15";
	rnd_seed=2878175699;
       };
       RndSeed @[15] {
	name="RndSeed_16";
	rnd_seed=2878175700;
       };
       RndSeed @[16] {
	name="RndSeed_17";
	rnd_seed=2878175701;
       };
       RndSeed @[17] {
	name="RndSeed_18";
	rnd_seed=2878175702;
       };
       RndSeed @[18] {
	name="RndSeed_19";
	rnd_seed=2878175703;
       };
       RndSeed @[19] {
	name="RndSeed_20";
	rnd_seed=2878175704;
       };
       RndSeed @[20] {
	name="RndSeed_21";
	rnd_seed=2878175705;
       };
       RndSeed @[21] {
	name="RndSeed_22";
	rnd_seed=2878175706;
       };
       RndSeed @[22] {
	name="RndSeed_23";
	rnd_seed=2878175707;
       };
       RndSeed @[23] {
	name="RndSeed_24";
	rnd_seed=2878175708;
       };
       RndSeed @[24] {
	name="RndSeed_25";
	rnd_seed=2878175709;
       };
      };
     };
     RndSeed @[1] {
      name="rnd_seed";
      rnd_seed=1487269306;
     };
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="rnd_seeds";
      var_type=T_Object;
      object_type=RndSeed_List;
      object_val=.programs.gp[0][1].objs[0]$$;
      object_scope=NULL;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="rnd_seed";
      var_type=T_Object;
      object_type=RndSeed;
      object_val=.programs.gp[0][1].objs[1]$$;
      object_scope=NULL;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
     DynEnumType @[0] {
      name="RndInitType";
      desc=;
      enums {
       name="enums";
       el_typ=DynEnumItem;
       el_def=0;
       DynEnumItem @[0] {
	name="OLD_SEED";
	value=0;
	desc="use stored random seed value (recreates same sequence every time)";
       };
       DynEnumItem @[1] {
	name="NEW_SEED";
	value=1;
	desc="generate new random seed (new sequence of random numbers)";
       };
       DynEnumItem @[2] {
	name="BATCH_SEEDS";
	value=2;
	desc="use a fixed list of random seeds with the current batch number selecting the seed to use -- provides a consistent set of initial conditions for each batch regardless..";
       };
      };
      bits=0;
     };
     DynEnumType @[1] {
      name="EnvType";
      desc=;
      enums {
       name="enums";
       el_typ=DynEnumItem;
       el_def=0;
       DynEnumItem @[0] {
	name="EASY";
	value=0;
	desc=;
       };
       DynEnumItem @[1] {
	name="HARD";
	value=1;
	desc=;
       };
       DynEnumItem @[2] {
	name="IMPOSSIBLE";
	value=2;
	desc=;
       };
      };
      bits=0;
     };
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[0][0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[2] {
      name="no_prompts";
      var_type=T_Bool;
      bool_val=0;
      object_scope=NULL;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="If train is called by other programs (e.g., Batch), they should set this to true -- otherwise it is reset to false in Init";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="max_epoch";
      var_type=T_Int;
      int_val=50;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="epoch";
      var_type=T_Int;
      int_val=50;
      object_scope=NULL;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[2] {
      name="train_mode";
      var_type=T_HardEnum;
      int_val=1;
      object_scope=NULL;
      hard_enum_type=Network::TrainMode;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[3] {
      name="rnd_init";
      var_type=T_DynEnum;
      object_scope=NULL;
      dyn_enum_val {
       user_data_=NULL;
       enum_type=.programs.gp[0][1].types[0]$$;
       value=1;
      };
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="how to initialize the random numbers when the Init button is pressed";
      init_from=NULL;
     };
     ProgVar @[4] {
      name="err_stopcrit";
      var_type=T_Real;
      real_val=0;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="stopping criterion for training, in terms of count of trials with errors in the epoch (nework cnt_err)";
      init_from=NULL;
     };
     ProgVar @[5] {
      name="n_under_thr";
      var_type=T_Int;
      int_val=500;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="number of times network needs to be under stopcrit threshold to actually stop";
      init_from=NULL;
     };
     ProgVar @[6] {
      name="save_final_wts";
      var_type=T_Bool;
      bool_val=0;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="save the network's weights at the end of training?  ";
      init_from=NULL;
     };
     ProgVar @[7] {
      name="save_wts_interval";
      var_type=T_Int;
      int_val=-1;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="save the weights every this many epochs, if number is >= 1 (otherwise do not save weights)";
      init_from=NULL;
     };
     ProgVar @[8] {
      name="n_under_cnt";
      var_type=T_Int;
      int_val=0;
      object_scope=NULL;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="current under threshold counter";
      init_from=NULL;
     };
     ProgVar @[9] {
      name="train_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=.networks[0].train_time$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[10] {
      name="env_type";
      var_type=T_DynEnum;
      object_scope=NULL;
      dyn_enum_val {
       user_data_=NULL;
       enum_type=.programs.gp[0][1].types[1]$$;
       value=0;
      };
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[11] {
      name="input_data_gp";
      var_type=T_Object;
      object_type=DataTable_Group;
      object_val=.data.gp[0]$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
     Function @[0] {
      name="GetRandomSeed";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="GetRandomSeed() returns: int";
      return_type=T_Int;
      object_type=taOBase;
      args {
       name="args";
       el_typ=ProgVar;
       el_def=0;
      };
      fun_code {
       name="fun_code";
       el_typ=ProgCode;
       el_def=0;
       LocalVars @[0] {
	name="LocalVars_LocalVars0vars";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="LocalVars (0 vars)";
	local_vars {
	 name="local_vars";
	 el_typ=ProgVar;
	 el_def=0;
	};
       };
       Switch @[1] {
	name="Switch_switchrndinit";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="switch(rnd_init)";
	switch_var=.programs.gp[0][1].vars[3]$$;
	cases {
	 name="cases";
	 el_typ=CaseBlock;
	 el_def=0;
	 CaseBlock @[0] {
	  name="CaseBlock_caseOLDSEED";
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  code_string="case: OLD_SEED";
	  prog_code {
	   name="prog_code";
	   el_typ=ProgCode;
	   el_def=0;
	   MethodCall @[0] {
	    name="MethodCall_rndseedOldSeed";
	    desc="restore previous random seed (all runs produce same results) -- click on rnd_seed object to generate a new seed to use for this if you want";
	    flags=CAN_REVERT_TO_CODE;
	    code_string="rnd_seed->OldSeed()";
	    result_var=NULL;
	    obj=.programs.gp[0][1].objs_vars[1]$$;
	    method=RndSeed::OldSeed;
	    meth_args {
	     name="meth_args";
	     el_typ=ProgArg;
	     el_def=0;
	    };
	    meth_sig="void OldSeed()";
	    meth_desc=" restore current seed to random num generator";
	   };
	  };
	  case_val {
	   expr="OLD_SEED";
	  };
	  is_default=0;
	 };
	 CaseBlock @[1] {
	  name="CaseBlock_caseNEWSEED";
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  code_string="case: NEW_SEED";
	  prog_code {
	   name="prog_code";
	   el_typ=ProgCode;
	   el_def=0;
	   MethodCall @[0] {
	    name="MethodCall_rndseedNewSeed";
	    desc="new random numbers each time";
	    flags=CAN_REVERT_TO_CODE;
	    code_string="rnd_seed->NewSeed()";
	    result_var=NULL;
	    obj=$.programs.gp[0][1].objs_vars[1]$;
	    method=RndSeed::NewSeed;
	    meth_args {
	     name="meth_args";
	     el_typ=ProgArg;
	     el_def=0;
	    };
	    meth_sig="void NewSeed()";
	    meth_desc=" set the seed to a new random value (based on time and process id)";
	   };
	  };
	  case_val {
	   expr="NEW_SEED";
	  };
	  is_default=0;
	 };
	 CaseBlock @[2] {
	  name="CaseBlock_caseBATCHSEEDS";
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  code_string="case: BATCH_SEEDS";
	  prog_code {
	   name="prog_code";
	   el_typ=ProgCode;
	   el_def=0;
	   MethodCall @[0] {
	    name="MethodCall_rndseedsUseSeedn_dseedsseedssize";
	    desc="restore previous random seed (all runs produce same results); change to NewSeed to have new random numbers each time";
	    flags=CAN_REVERT_TO_CODE;
	    code_string="rnd_seeds->UseSeed(network.batch % rnd_seeds.seeds.size)";
	    result_var=NULL;
	    obj=.programs.gp[0][1].objs_vars[0]$$;
	    method=RndSeed_List::UseSeed;
	    meth_args {
	     name="meth_args";
	     el_typ=ProgArg;
	     el_def=0;
	     ProgArg @[0] {
	      arg_type=int;
	      type="int";
	      name="idx";
	      required=1;
	      def_val=;
	      prev_expr=;
	      expr {
	       expr="network.batch % rnd_seeds.seeds.size";
	      };
	     };
	    };
	    meth_sig="void UseSeed(int idx)";
	    meth_desc=" use seed at given index in the list (does OldSeed on it); wraps around (modulus) if idx is > list size (issues warning)";
	   };
	  };
	  case_val {
	   expr="BATCH_SEEDS";
	  };
	  is_default=0;
	 };
	};
       };
      };
     };
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     AssignExpr @[0] {
      name="AssignExpr_nopromptsfalse";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="no_prompts = false";
      result_var=.programs.gp[0][1].args[2]$$;
      expr {
       expr="false";
      };
     };
     MethodCall @[1] {
      name="MethodCall_networkCheckConfigfalse";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="network->CheckConfig(false)";
      result_var=NULL;
      obj=.programs.gp[0][1].args[0]$$;
      method=taBase::CheckConfig;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="false";
	};
       };
      };
      meth_sig="bool CheckConfig(bool quiet = false)";
      meth_desc=" check the configuration of this object and all its children (defaults to no confirm of success)";
     };
     AssignExpr @[2] {
      name="AssignExpr_traintimernetworktraintime";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="train_timer = network.train_time";
      result_var=.programs.gp[0][1].vars[9]$$;
      expr {
       expr="network.train_time";
      };
     };
     AssignExpr @[3] {
      name="AssignExpr_nundercnt0";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="n_under_cnt = 0";
      result_var=.programs.gp[0][1].vars[8]$$;
      expr {
       expr="0";
      };
     };
     FunctionCall @[4] {
      name="FunctionCall_GetRandomSeed";
      desc="initialize random seed";
      flags=CAN_REVERT_TO_CODE;
      code_string="GetRandomSeed()";
      result_var=NULL;
      fun=.programs.gp[0][1].functions[0]$$;
      fun_args {
       name="fun_args";
       el_typ=ProgArg;
       el_def=0;
      };
     };
     WtInitPrompt @[5] {
      name="WtInitPrompt_ifguiDoyouwantto_eNetworkWeights";
      desc="don't initialize weights without checking";
      flags=CAN_REVERT_TO_CODE;
      code_string="if (gui && \"Do you want to Initialize Network Weights\")";
      prompt="Do you want to Initialize Network Weights";
      yes_label="Yes";
      no_label="No";
      yes_code {
       name="yes_code";
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	name="MethodCall_networkBuild";
	desc="need to have built network by now in any case, so do it here to make double sure -- prevents errs when loading project with startup program";
	flags=CAN_REVERT_TO_CODE;
	code_string="network->Build()";
	result_var=NULL;
	obj=$.programs.gp[0][1].args[0]$;
	method=Network::Build;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	};
	meth_sig="void Build()";
	meth_desc=" Build the network units and Connect them (calls CheckSpecs/BuildLayers/Units/Prjns and Connect)";
       };
       MethodCall @[1] {
	name="MethodCall_networkInitWeights";
	desc="initialize network weights: could also load pre-set weights or something else here";
	flags=CAN_REVERT_TO_CODE;
	code_string="network->Init_Weights()";
	result_var=NULL;
	obj=$.programs.gp[0][1].args[0]$;
	method=Network::Init_Weights;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	};
	meth_sig="void Init_Weights()";
	meth_desc=" Initialize the weights -- also inits acts, counters and stats -- does unit level threaded and then does Layers after";
       };
       PrintExpr @[2] {
	name="PrintExpr_Printnetworkname_ghtsInitialized";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="Print network.name << \" Weights Initialized\"";
	expr {
	 expr="network.name << \" Weights Initialized\"";
	};
	debug=0;
       };
      };
     };
     AssignExpr @[6] {
      name="AssignExpr_epochnetworkepoch";
      desc="grab the official network epoch counter: will be initialized if needed by now";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch = network.epoch";
      result_var=.programs.gp[0][1].vars[1]$$;
      expr {
       expr="network.epoch";
      };
     };
     MemberMethodCall @[7] {
      name="MemberMethodCall_networkspecsConS_UpdateAfterEdit";
      desc="update in case wt_sig params changed";
      flags=NON_STD|CAN_REVERT_TO_CODE;
      code_string="network.specs.ConSpec_0.UpdateAfterEdit()";
      obj=$.programs.gp[0][1].args[0]$;
      path="specs.ConSpec_0";
      result_var=NULL;
      method=taList_impl::UpdateAfterEdit;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void UpdateAfterEdit()";
      meth_desc=" (aka UAE) called after editing, or any user change to members (eg. in the interface, script) we skip the taOBase version, and inherit only taBase (DPF: what does that mean?)";
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     Switch @[0] {
      name="Switch_switchenvtype";
      desc=;
      flags=NON_STD|CAN_REVERT_TO_CODE;
      code_string="switch(env_type)";
      switch_var=.programs.gp[0][1].vars[10]$$;
      cases {
       name="cases";
       el_typ=CaseBlock;
       el_def=0;
       CaseBlock @[0] {
	name="CaseBlock_caseEASY";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="case: EASY";
	prog_code {
	 name="prog_code";
	 el_typ=ProgCode;
	 el_def=0;
	 AssignExpr @[0] {
	  name="AssignExpr_inputdatainputdatagpEasyEnv";
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  code_string="input_data = input_data_gp[\"EasyEnv\"]";
	  result_var=.programs.gp[0][1].args[1]$$;
	  expr {
	   expr="input_data_gp[\"EasyEnv\"]";
	  };
	 };
	};
	case_val {
	 expr="EASY";
	};
	is_default=0;
       };
       CaseBlock @[1] {
	name="CaseBlock_caseHARD";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="case: HARD";
	prog_code {
	 name="prog_code";
	 el_typ=ProgCode;
	 el_def=0;
	 AssignExpr @[0] {
	  name="AssignExpr_inputdatainputdatagpHardEnv";
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  code_string="input_data = input_data_gp[\"HardEnv\"]";
	  result_var=$.programs.gp[0][1].args[1]$;
	  expr {
	   expr="input_data_gp[\"HardEnv\"]";
	  };
	 };
	};
	case_val {
	 expr="HARD";
	};
	is_default=0;
       };
       CaseBlock @[2] {
	name="CaseBlock_caseIMPOSSIBLE";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="case: IMPOSSIBLE";
	prog_code {
	 name="prog_code";
	 el_typ=ProgCode;
	 el_def=0;
	 AssignExpr @[0] {
	  name="AssignExpr_inputdatainputda_gpImpossibleEnv";
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  code_string="input_data = input_data_gp[\"ImpossibleEnv\"]";
	  result_var=$.programs.gp[0][1].args[1]$;
	  expr {
	   expr="input_data_gp[\"ImpossibleEnv\"]";
	  };
	 };
	};
	case_val {
	 expr="IMPOSSIBLE";
	};
	is_default=0;
       };
      };
     };
     AssignExpr @[1] {
      name="AssignExpr_traintimernetworktraintime";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="train_timer = network.train_time";
      result_var=$.programs.gp[0][1].vars[9]$;
      expr {
       expr="network.train_time";
      };
     };
     MethodCall @[2] {
      name="MethodCall_traintimerStartTimertrue";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="train_timer->StartTimer(true)";
      result_var=NULL;
      obj=$.programs.gp[0][1].vars[9]$;
      method=TimeUsed::StartTimer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_used";
	required=0;
	def_val="true";
	prev_expr=;
	expr {
	 expr="true";
	};
       };
      };
      meth_sig="void StartTimer(bool reset_used = true)";
      meth_desc=" record the current time as the starting time, and optionally reset the time used information";
     };
     AssignExpr @[3] {
      name="AssignExpr_nundercnt0";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="n_under_cnt = 0";
      result_var=$.programs.gp[0][1].vars[8]$;
      expr {
       expr="0";
      };
     };
     MemberAssign @[4] {
      name="MemberAssign_networktrainmodetrainmode";
      desc="set network's training mode to our local value";
      flags=CAN_REVERT_TO_CODE;
      code_string="network.train_mode = train_mode";
      obj=$.programs.gp[0][1].args[0]$;
      path="train_mode";
      expr {
       expr="train_mode";
      };
      update_after=0;
     };
     FunctionCall @[5] {
      name="FunctionCall_GetRandomSeed";
      desc="initialize random seed";
      flags=CAN_REVERT_TO_CODE;
      code_string="GetRandomSeed()";
      result_var=NULL;
      fun=$.programs.gp[0][1].functions[0]$;
      fun_args {
       name="fun_args";
       el_typ=ProgArg;
       el_def=0;
      };
     };
     If @[6] {
      name="If_ifnoprompts";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="if (no_prompts)";
      cond {
       expr="no_prompts";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	name="MethodCall_networkInitWeights";
	desc="initialize network weights: could also load pre-set weights or something else here";
	flags=CAN_REVERT_TO_CODE;
	code_string="network->Init_Weights()";
	result_var=NULL;
	obj=$.programs.gp[0][1].args[0]$;
	method=Network::Init_Weights;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	};
	meth_sig="void Init_Weights()";
	meth_desc=" Initialize the weights -- also inits acts, counters and stats -- does unit level threaded and then does Layers after";
       };
       PrintExpr @[1] {
	name="PrintExpr_Printnetworkname_ghtsInitialized";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="Print network.name << \" Weights Initialized\"";
	expr {
	 expr="network.name << \" Weights Initialized\"";
	};
	debug=0;
       };
      };
     };
     AssignExpr @[7] {
      name="AssignExpr_epochnetworkepoch";
      desc="grab the official network epoch counter: will be initialized if needed by now";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch = network.epoch";
      result_var=$.programs.gp[0][1].vars[1]$;
      expr {
       expr="network.epoch";
      };
     };
     WhileLoop @[8] {
      name="WhileLoop_whileepochmaxepoch";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="while (epoch < max_epoch)";
      loop_code {
       name="loop_code";
       el_typ=ProgCode;
       el_def=0;
       ProgramCall @[0] {
	name="ProgramCall_LeabraEpochnetworkinputdata";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="LeabraEpoch(network, input_data)";
	prog_args {
	 name="prog_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="network";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="input_data";
	  };
	 };
	};
	target=.programs.gp[0][2]$$;
	targ_ld_init="*LeabraEpoch*";
       };
       NetCounterIncr @[1] {
	name="NetCounterIncr_NetCounterIncrepoch";
	desc="increment the epoch counter";
	flags=CAN_REVERT_TO_CODE;
	code_string="Net Counter Incr: epoch";
	network_var=$.programs.gp[0][1].args[0]$;
	local_ctr_var=$.programs.gp[0][1].vars[1]$;
	counter=Network::epoch;
	update_after=0;
       };
       If @[2] {
	name="If_ifnetworkcnterrerrstopcrit";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="if (network.cnt_err <= err_stopcrit)";
	cond {
	 expr="network.cnt_err <= err_stopcrit";
	};
	true_code {
	 name="true_code";
	 el_typ=ProgCode;
	 el_def=0;
	 VarIncr @[0] {
	  name="VarIncr_nundercnt1";
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  code_string="n_under_cnt += 1";
	  var=$.programs.gp[0][1].vars[8]$;
	  expr {
	   expr="1";
	  };
	 };
	 IfBreak @[1] {
	  name="IfBreak_ifnundercntnunderthrbreak";
	  desc="stop if errors go below stopping criterion (note: could use sse or avg_sse here too)";
	  flags=CAN_REVERT_TO_CODE;
	  code_string="if(n_under_cnt >=  n_under_thr) break";
	  cond {
	   expr="n_under_cnt >=  n_under_thr";
	  };
	 };
	};
       };
       Else @[3] {
	name="Else_If_ifnetworkcnterrerrstopcrit";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="else";
	cond {
	 expr=;
	};
	true_code {
	 name="true_code";
	 el_typ=ProgCode;
	 el_def=0;
	 AssignExpr @[0] {
	  name="AssignExpr_nundercnt0";
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  code_string="n_under_cnt = 0";
	  result_var=$.programs.gp[0][1].vars[8]$;
	  expr {
	   expr="0";
	  };
	 };
	};
       };
       If @[4] {
	name="If_ifsavewtsinterval1";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="if (save_wts_interval >= 1)";
	cond {
	 expr="save_wts_interval >= 1";
	};
	true_code {
	 name="true_code";
	 el_typ=ProgCode;
	 el_def=0;
	 If @[0] {
	  name="If_ifepochsavewtsinterval0";
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  code_string="if (epoch % save_wts_interval == 0)";
	  cond {
	   expr="epoch % save_wts_interval == 0";
	  };
	  true_code {
	   name="true_code";
	   el_typ=ProgCode;
	   el_def=0;
	   ProgramCall @[0] {
	    name="ProgramCall_SaveWeightsnetwork";
	    desc=;
	    flags=CAN_REVERT_TO_CODE;
	    code_string="SaveWeights(network)";
	    prog_args {
	     name="prog_args";
	     el_typ=ProgArg;
	     el_def=0;
	     ProgArg @[0] {
	      arg_type=Network;
	      type="LeabraNetwork*";
	      name="network";
	      required=1;
	      def_val=;
	      prev_expr=;
	      expr {
	       expr="network";
	      };
	     };
	    };
	    target=.programs.gp[0][9]$$;
	    targ_ld_init="*SaveWeights*";
	   };
	  };
	 };
	};
       };
      };
      test {
       expr="epoch < max_epoch";
      };
     };
     If @[9] {
      name="If_ifsavefinalwts";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="if (save_final_wts)";
      cond {
       expr="save_final_wts";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       ProgramCall @[0] {
	name="ProgramCall_SaveWeightsnetwork";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="SaveWeights(network)";
	prog_args {
	 name="prog_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=Network;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="network";
	  };
	 };
	};
	target=$.programs.gp[0][9]$;
	targ_ld_init="*SaveWeights*";
       };
      };
     };
     MethodCall @[10] {
      name="MethodCall_traintimerEndTimer";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="train_timer->EndTimer()";
      result_var=NULL;
      obj=$.programs.gp[0][1].vars[9]$;
      method=TimeUsed::EndTimer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void EndTimer()";
      meth_desc=" record the current time as the ending time, and compute difference as the time used";
     };
    };
    step_prog=.programs.gp[0][5]$$;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=1;
     wiki="emergent";
     url="LeabraTrain";
     full_url="https://grey.colorado.edu/emergent/index.php/LeabraTrain";
     text_size=1;
     text=;
     html_text="<!DOCTYPE html><html lang=\"en\" dir=\"ltr\" class=\"client-js\"><head>
<meta charset=\"UTF-8\">
<title>LeabraTrain - emergent</title>
<script>document.documentElement.className = document.documentElement.className.replace( /(^|\\s)client-nojs(\\s|$)/, \"$1client-js$2\" );</script>
<script>window.RLQ = window.RLQ || []; window.RLQ.push( function () {
mw.config.set({\"wgCanonicalNamespace\":\"\",\"wgCanonicalSpecialPageName\":!1,\"wgNamespaceNumber\":0,\"wgPageName\":\"LeabraTrain\",\"wgTitle\":\"LeabraTrain\",\"wgCurRevisionId\":11266,\"wgRevisionId\":11266,\"wgArticleId\":2767,\"wgIsArticle\":!0,\"wgIsRedirect\":!1,\"wgAction\":\"view\",\"wgUserName\":\"Oreilly\",\"wgUserGroups\":[\"bureaucrat\",\"svnadmins\",\"sysop\",\"*\",\"user\",\"autoconfirmed\"],\"wgCategories\":[],\"wgBreakFrames\":!1,\"wgPageContentLanguage\":\"en\",\"wgPageContentModel\":\"wikitext\",\"wgSeparatorTransformTable\":[\"\",\"\"],\"wgDigitTransformTable\":[\"\",\"\"],\"wgDefaultDateFormat\":\"dmy\",\"wgMonthNames\":[\"\",\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"wgMonthNamesShort\":[\"\",\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"wgRelevantPageName\":\"LeabraTrain\",\"wgRelevantArticleId\":2767,\"wgUserId\":3,\"wgUserEditCount\":2418,\"wgUserRegistration\":1178051527000,\"wgUserNewMsgRevisionId\":null,\"wgIsProbablyEditable\":!0,
\"wgRestrictionEdit\":[],\"wgRestrictionMove\":[],\"sfgAutocompleteValues\":[],\"sfgAutocompleteOnAllChars\":!1,\"sfgFieldProperties\":[],\"sfgDependentFields\":[],\"sfgShowOnSelect\":[],\"sfgScriptPath\":\"/emergent/extensions/SemanticForms\",\"wgSVGEditEditor\":\"http://svg-edit.googlecode.com/svn/trunk/editor/svg-editor.html\",\"wgHeaderTabsTabIndexes\":[],\"wgWikiEditorEnabledModules\":{\"toolbar\":!0,\"dialogs\":!0,\"preview\":!0,\"publish\":!1},\"wgCategoryTreePageCategoryOptions\":\"{\\\"mode\\\":0,\\\"hideprefix\\\":20,\\\"showcount\\\":true,\\\"namespaces\\\":false}\"});mw.loader.implement(\"user.options\",function($,jQuery){mw.user.options.set({\"ccmeonemails\":\"1\",\"enotifminoredits\":\"1\",\"imagesize\":\"0\",\"previewontop\":\"\",\"rows\":\"30\",\"thumbsize\":\"0\",\"underline\":\"0\",\"watchmoves\":\"1\",\"editsection\":\"1\",\"rememberpassword\":\"1\",\"timecorrection\":\"ZoneInfo|-360|America/Denver\",\"watchlisttoken\":\"14fd6c804d78e99930123181974c128b983adb9e\"});});mw.loader.implement(\"user.tokens\",function($,jQuery){mw.user.tokens.set({\"editToken\":\"3b26cf5f182fe7fb29af6a6ca01dd6cb57342b95+\\\\\",\"patrolToken\":\"6f879f5a78cf8bf62c088b26f37a826a57342b95+\\\\\",\"watchToken\":\"0f5971aae38fcb23ba50cc900260a01757342b95+\\\\\"});});mw.loader.load([\"ext.smw.style\",\"ext.smw.tooltips\",\"mediawiki.page.startup\",\"mediawiki.legacy.wikibits\",\"skins.vector.js\"]);
} );</script>
<link rel=\"stylesheet\" href=\"/emergent/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.sectionAnchor%7Cmediawiki.skinning.interface%7Cskins.vector.styles&amp;only=styles&amp;skin=vector\">
<link rel=\"stylesheet\" href=\"/emergent/extensions/HeaderTabs/skins/ext.headertabs.large.css\">
<meta name=\"ResourceLoaderDynamicStyles\" content=\"\">
<link rel=\"stylesheet\" href=\"/emergent/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector\">
<style>a{text-decoration:none}</style>
<script async=\"\" src=\"/emergent/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector\"></script>
<meta name=\"generator\" content=\"MediaWiki 1.26.2\">
<link rel=\"ExportRDF\" type=\"application/rdf+xml\" title=\"LeabraTrain\" href=\"/emergent/index.php?title=Special:ExportRDF/LeabraTrain&amp;xmlmime=rdf\">
<link rel=\"alternate\" type=\"application/x-wiki\" title=\"Edit\" href=\"/emergent/index.php?title=LeabraTrain&amp;action=edit\">
<link rel=\"edit\" title=\"Edit\" href=\"/emergent/index.php?title=LeabraTrain&amp;action=edit\">
<link rel=\"shortcut icon\" href=\"/emergent/favicon.ico\">
<link rel=\"search\" type=\"application/opensearchdescription+xml\" href=\"/emergent/opensearch_desc.php\" title=\"emergent (en)\">
<link rel=\"EditURI\" type=\"application/rsd+xml\" href=\"https://grey.colorado.edu/emergent/api.php?action=rsd\">
<link rel=\"alternate\" type=\"application/atom+xml\" title=\"emergent Atom feed\" href=\"/emergent/index.php?title=Special:RecentChanges&amp;feed=atom\">
<!--[if lt IE 7]><style type=\"text/css\">body{behavior:url(\"/emergent/skins/Vector/csshover.min.htc\")}</style><![endif]-->
<script src=\"/emergent/load.php?debug=false&amp;lang=en&amp;modules=jquery%2Cmediawiki&amp;only=scripts&amp;skin=vector&amp;version=EaPOpX%2FG\"></script></head>
<body class=\"mediawiki ltr sitedir-ltr ns-0 ns-subject page-LeabraTrain skin-vector action-view\">
		<div id=\"mw-page-base\" class=\"noprint\"></div>
		<div id=\"mw-head-base\" class=\"noprint\"></div>
		<div id=\"content\" class=\"mw-body\" role=\"main\">
			<a id=\"top\"></a>

						<div class=\"mw-indicators\">
</div>
			<h1 id=\"firstHeading\" class=\"firstHeading\" lang=\"en\">LeabraTrain</h1>
									<div id=\"bodyContent\" class=\"mw-body-content\">
									<div id=\"siteSub\">From emergent</div>
								<div id=\"contentSub\"></div>
												<div id=\"jump-to-nav\" class=\"mw-jump\">
					Jump to:					<a href=\"#mw-head\">navigation</a>, 					<a href=\"#p-search\">search</a>
				</div>
				<div id=\"mw-content-text\" lang=\"en\" dir=\"ltr\" class=\"mw-content-ltr\"><p>LeabraTrain is the standard <a href=\"/emergent/index.php/Program\" title=\"Program\">Program</a> for training <a href=\"/emergent/index.php/Leabra\" title=\"Leabra\">Leabra</a> networks.  It iterates over <a href=\"/emergent/index.php?title=LeabraEpoch&amp;action=edit&amp;redlink=1\" class=\"new\" title=\"LeabraEpoch (page does not exist)\">LeabraEpoch</a> epochs, optionally until a training criterion has been met, or for a specified maximum number of epochs.
</p><p>You can easily customize this program to do different things at different points in the training process, for example by examining the network.epoch value (or the local copy of that value, epoch).
</p>
<!-- 
NewPP limit report
Cached time: 20160512070701
Cache expiry: 86400
Dynamic content: false
CPU time usage: 0.011 seconds
Real time usage: 0.014 seconds
Preprocessor visited node count: 1/1000000
Preprocessor generated node count: 4/1000000
Post?expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 1/40
Expensive parser function count: 0/100
-->

<!-- 
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 - -total
-->

<!-- Saved in parser cache with key pdpwiki:pcache:idhash:2767-0!*!0!*!*!*!* and timestamp 20160512070701 and revision id 11266
 -->
</div>					<div class=\"printfooter\">
						Retrieved from \"<a dir=\"ltr\" href=\"https://grey.colorado.edu/emergent/index.php?title=LeabraTrain&amp;oldid=11266\">https://grey.colorado.edu/emergent/index.php?title=LeabraTrain&amp;oldid=11266</a>\"					</div>
				<div id=\"catlinks\" class=\"catlinks catlinks-allhidden\"></div>				<div class=\"visualClear\"></div>
							</div>
		</div>
		<div id=\"mw-navigation\">
			<h2>Navigation menu</h2>

			<div id=\"mw-head\">
									<div id=\"p-personal\" role=\"navigation\" class=\"\" aria-labelledby=\"p-personal-label\">
						<h3 id=\"p-personal-label\">Personal tools</h3>
						<ul>
							<li id=\"pt-userpage\"><a href=\"/emergent/index.php/User:Oreilly\" dir=\"auto\" title=\"Your user page [.]\" accesskey=\".\">Oreilly</a></li><li id=\"pt-mytalk\"><a href=\"/emergent/index.php/User_talk:Oreilly\" class=\"new\" title=\"Your talk page [n]\" accesskey=\"n\">Talk</a></li><li id=\"pt-preferences\"><a href=\"/emergent/index.php/Special:Preferences\" title=\"Your preferences\">Preferences</a></li><li id=\"pt-watchlist\"><a href=\"/emergent/index.php/Special:Watchlist\" title=\"A list of pages you are monitoring for changes [l]\" accesskey=\"l\">Watchlist</a></li><li id=\"pt-mycontris\"><a href=\"/emergent/index.php/Special:Contributions/Oreilly\" title=\"A list of your contributions [y]\" accesskey=\"y\">Contributions</a></li><li id=\"pt-logout\"><a href=\"/emergent/index.php?title=Special:UserLogout&amp;returnto=LeabraTrain\" title=\"Log out\">Log out</a></li>						</ul>
					</div>
									<div id=\"left-navigation\">
										<div id=\"p-namespaces\" role=\"navigation\" class=\"vectorTabs\" aria-labelledby=\"p-namespaces-label\">
						<h3 id=\"p-namespaces-label\">Namespaces</h3>
						<ul>
															<li id=\"ca-nstab-main\" class=\"selected\"><span><a href=\"/emergent/index.php/LeabraTrain\" title=\"View the content page [c]\" accesskey=\"c\">Page</a></span></li>
															<li id=\"ca-talk\" class=\"new\"><span><a href=\"/emergent/index.php?title=Talk:LeabraTrain&amp;action=edit&amp;redlink=1\" title=\"Discussion about the content page [t]\" accesskey=\"t\" rel=\"discussion\">Discussion</a></span></li>
													</ul>
					</div>
										<div id=\"p-variants\" role=\"navigation\" class=\"vectorMenu emptyPortlet\" aria-labelledby=\"p-variants-label\">
												<h3 id=\"p-variants-label\">
							<span>Variants</span><a href=\"#\"></a>
						</h3>

						<div class=\"menu\">
							<ul>
															</ul>
						</div>
					</div>
									</div>
				<div id=\"right-navigation\">
										<div id=\"p-views\" role=\"navigation\" class=\"vectorTabs\" aria-labelledby=\"p-views-label\">
						<h3 id=\"p-views-label\">Views</h3>
						<ul>
															<li id=\"ca-view\" class=\"selected\"><span><a href=\"/emergent/index.php/LeabraTrain\">Read</a></span></li>
															<li id=\"ca-edit\"><span><a href=\"/emergent/index.php?title=LeabraTrain&amp;action=edit\" title=\"Edit this page [e]\" accesskey=\"e\">Edit</a></span></li>
															<li id=\"ca-history\" class=\"collapsible\"><span><a href=\"/emergent/index.php?title=LeabraTrain&amp;action=history\" title=\"Past revisions of this page [h]\" accesskey=\"h\">View history</a></span></li>
															<li id=\"ca-unwatch\" class=\"icon\"><span><a href=\"/emergent/index.php?title=LeabraTrain&amp;action=unwatch&amp;token=c6d7363e22d4c0d44ac7ca2a8c59165157342b95%2B%5C\" title=\"Remove this page from your watchlist [w]\" accesskey=\"w\">Unwatch</a></span></li>
													</ul>
					</div>
										<div id=\"p-cactions\" role=\"navigation\" class=\"vectorMenu\" aria-labelledby=\"p-cactions-label\">
						<h3 id=\"p-cactions-label\"><span>More</span><a href=\"#\"></a></h3>

						<div class=\"menu\">
							<ul>
																	<li id=\"ca-delete\">
										<a href=\"/emergent/index.php?title=LeabraTrain&amp;action=delete\" title=\"Delete this page [d]\" accesskey=\"d\">Delete</a>
									</li>
																	<li id=\"ca-move\">
										<a href=\"/emergent/index.php/Special:MovePage/LeabraTrain\" title=\"Move this page [m]\" accesskey=\"m\">Move</a>
									</li>
																	<li id=\"ca-protect\">
										<a href=\"/emergent/index.php?title=LeabraTrain&amp;action=protect\" title=\"Protect this page [=]\" accesskey=\"=\">Protect</a>
									</li>
																	<li id=\"ca-purge\">
										<a href=\"/emergent/index.php?title=LeabraTrain&amp;action=purge\">Refresh</a>
									</li>
															</ul>
						</div>
					</div>
										<div id=\"p-search\" role=\"search\">
						<h3>
							<label for=\"searchInput\">Search</label>
						</h3>

						<form action=\"/emergent/index.php\" id=\"searchform\">
							<div id=\"simpleSearch\">
							<input type=\"search\" name=\"search\" placeholder=\"Search\" title=\"Search emergent [f]\" accesskey=\"f\" id=\"searchInput\"><input type=\"hidden\" value=\"Special:Search\" name=\"title\"><input type=\"submit\" name=\"fulltext\" value=\"Search\" title=\"Search the pages for this text\" id=\"mw-searchButton\" class=\"searchButton mw-fallbackSearchButton\"><input type=\"submit\" name=\"go\" value=\"Go\" title=\"Go to a page with this exact name if it exists\" id=\"searchButton\" class=\"searchButton\">							</div>
						</form>
					</div>
									</div>
			</div>
			<div id=\"mw-panel\">
				<div id=\"p-logo\" role=\"banner\"><a class=\"mw-wiki-logo\" href=\"/emergent/index.php/Main_Page\" title=\"Visit the main page\"></a></div>
						<div class=\"portal\" role=\"navigation\" id=\"p-navigation\" aria-labelledby=\"p-navigation-label\">
			<h3 id=\"p-navigation-label\">Navigation</h3>

			<div class=\"body\">
									<ul>
						<li id=\"n-mainpage-description\"><a href=\"/emergent/index.php/Main_Page\" title=\"Visit the main page [z]\" accesskey=\"z\">Main page</a></li><li id=\"n-recentchanges\"><a href=\"/emergent/index.php/Special:RecentChanges\" title=\"A list of recent changes in the wiki [r]\" accesskey=\"r\">Recent changes</a></li><li id=\"n-Documentation\"><a href=\"/emergent/index.php/User_hub\">Documentation</a></li><li id=\"n-Submit-a-bug\"><a href=\"/emergent/index.php/How_to_submit_a_bug_report\">Submit a bug</a></li><li id=\"n-Bug-tracker\"><a href=\"//grey.colorado.edu/cgi-bin/bugzilla/index.cgi\" rel=\"nofollow\">Bug tracker</a></li><li id=\"n-Mailing-list\"><a href=\"//grey.colorado.edu/cgi-bin/mailman/listinfo/emergent-users\" rel=\"nofollow\">Mailing list</a></li>					</ul>
							</div>
		</div>
			<div class=\"portal\" role=\"navigation\" id=\"p-tb\" aria-labelledby=\"p-tb-label\">
			<h3 id=\"p-tb-label\">Tools</h3>

			<div class=\"body\">
									<ul>
						<li id=\"t-whatlinkshere\"><a href=\"/emergent/index.php/Special:WhatLinksHere/LeabraTrain\" title=\"A list of all wiki pages that link here [j]\" accesskey=\"j\">What links here</a></li><li id=\"t-recentchangeslinked\"><a href=\"/emergent/index.php/Special:RecentChangesLinked/LeabraTrain\" title=\"Recent changes in pages linked from this page [k]\" accesskey=\"k\">Related changes</a></li><li id=\"t-upload\"><a href=\"/emergent/index.php/Special:Upload\" title=\"Upload files [u]\" accesskey=\"u\">Upload file</a></li><li id=\"t-specialpages\"><a href=\"/emergent/index.php/Special:SpecialPages\" title=\"A list of all special pages [q]\" accesskey=\"q\">Special pages</a></li><li id=\"t-permalink\"><a href=\"/emergent/index.php?title=LeabraTrain&amp;oldid=11266\" title=\"Permanent link to this revision of the page\">Permanent link</a></li><li id=\"t-info\"><a href=\"/emergent/index.php?title=LeabraTrain&amp;action=info\" title=\"More information about this page\">Page information</a></li><li id=\"t-smwbrowselink\"><a href=\"/emergent/index.php/Special:Browse/LeabraTrain\" rel=\"smw-browse\">Browse properties</a></li>					</ul>
							</div>
		</div>
			<div class=\"portal\" role=\"navigation\" id=\"p-coll-print_export\" aria-labelledby=\"p-coll-print_export-label\">
			<h3 id=\"p-coll-print_export-label\">Print/export</h3>

			<div class=\"body\">
									<ul>
						<li id=\"coll-create_a_book\"><a href=\"/emergent/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=LeabraTrain\">Create a book</a></li><li id=\"coll-download-as-rl\"><a href=\"/emergent/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=LeabraTrain&amp;oldid=11266&amp;writer=rl\">Download as PDF</a></li><li id=\"t-print\"><a href=\"/emergent/index.php?title=LeabraTrain&amp;printable=yes\" title=\"Printable version of this page [p]\" accesskey=\"p\">Printable version</a></li>					</ul>
							</div>
		</div>
				</div>
		</div>
		<div id=\"footer\" role=\"contentinfo\">
							<ul id=\"footer-info\">
											<li id=\"footer-info-lastmod\"> This page was last modified on 12 May 2016, at 01:07.</li>
									</ul>
							<ul id=\"footer-places\">
											<li id=\"footer-places-about\"><a href=\"/emergent/index.php/emergent:About\" title=\"emergent:About\">About emergent</a></li>
									</ul>
										<ul id=\"footer-icons\" class=\"noprint\">
											<li id=\"footer-poweredbyico\">
							<a href=\"//www.mediawiki.org/\"><img src=\"/emergent/resources/assets/poweredby_mediawiki_88x31.png\" alt=\"Powered by MediaWiki\" srcset=\"/emergent/resources/assets/poweredby_mediawiki_132x47.png 1.5x, /emergent/resources/assets/poweredby_mediawiki_176x62.png 2x\" width=\"88\" height=\"31\"></a><a href=\"https://www.semantic-mediawiki.org/wiki/Semantic_MediaWiki\"><img src=\"/emergent/extensions/SemanticMediaWiki/resources/images/smw_button.png\" alt=\"Powered by Semantic MediaWiki\" width=\"88\" height=\"31\"></a>						</li>
									</ul>
						<div style=\"clear:both\"></div>
		</div>
		<script>window.RLQ = window.RLQ || []; window.RLQ.push( function () {
mw.loader.state({\"user\":\"ready\",\"user.groups\":\"ready\"});mw.loader.load([\"mediawiki.action.view.postEdit\",\"site\",\"mediawiki.user\",\"mediawiki.hidpi\",\"mediawiki.page.ready\",\"mediawiki.searchSuggest\",\"mediawiki.page.watch.ajax\",\"ext.headertabs\"]);
} );</script><script>window.RLQ = window.RLQ || []; window.RLQ.push( function () {
mw.config.set({\"wgBackendResponseTime\":155});
} );</script>
	

</body></html>";
    };
   };
   Program @[2] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[0][2].doc$$: };
    };
    name="LeabraEpoch";
    short_nm="Epoch";
    tags="Leabra, Std";
    desc="iterates over all of the items in a data table and calls LeabraTrial process on them";
    version {
     major=8;
     minor=0;
     step=0;
    };
    author="Randall C. O'Reilly";
    email="emergent-users@grey.colorado.edu";
    flags=2;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="network to operate on";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[0][0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="table of patterns to present to the network, one row at a time";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="data_loop_order";
      var_type=T_HardEnum;
      int_val=1;
      object_scope=NULL;
      hard_enum_type=DataLoop::Order;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="controls the order in which events (rows of the input data datatable) are presented to the network
(SEQUENTIAL, PERMUTED, RANDOM)";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="trial";
      var_type=T_Int;
      int_val=0;
      object_scope=NULL;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="current trial (event) within the epoch -- increments automatically";
      init_from=NULL;
     };
     ProgVar @[2] {
      name="trial_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[1][0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="trial-level output data -- we reset it every epoch by default, so it just contains last epoch of data";
      init_from=NULL;
     };
     ProgVar @[3] {
      name="step_on_err";
      var_type=T_Bool;
      bool_val=0;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="when you step at the Epoch level, this will automatically step through to the next point at which an error was made -- you can use the netview history to replay what happend";
      init_from=NULL;
     };
     ProgVar @[4] {
      name="epoch_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=.networks[0].epoch_time$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="timer to record time required to perform one epoch of processing (object is on network -- this is a pointer to it)";
      init_from=NULL;
     };
     ProgVar @[5] {
      name="data_loop_index";
      var_type=T_Int;
      int_val=1;
      object_scope=NULL;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="index counter for the looping over items in the input_data datatable (not always the same as trial counter, depending on distributed memory computation)";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     NetCounterInit @[0] {
      name="NetCounterInit_NetCounterInittrial";
      desc="initialize trial counter (local variable and in the network)";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Counter Init: trial";
      network_var=.programs.gp[0][2].args[0]$$;
      local_ctr_var=.programs.gp[0][2].vars[1]$$;
      counter=Network::trial;
      update_after=0;
     };
     AssignExpr @[1] {
      name="AssignExpr_epochtimernetworkepochtime";
      desc="get pointer to epoch timer object on network";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer = network.epoch_time";
      result_var=.programs.gp[0][2].vars[4]$$;
      expr {
       expr="network.epoch_time";
      };
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     NetCounterInit @[0] {
      name="NetCounterInit_NetCounterInittrial";
      desc="initialize trial counter (local variable and in the network)";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Counter Init: trial";
      network_var=$.programs.gp[0][2].args[0]$;
      local_ctr_var=$.programs.gp[0][2].vars[1]$;
      counter=Network::trial;
      update_after=0;
     };
     AssignExpr @[1] {
      name="AssignExpr_epochtimernetworkepochtime";
      desc="get pointer to epoch timer object on network";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer = network.epoch_time";
      result_var=$.programs.gp[0][2].vars[4]$;
      expr {
       expr="network.epoch_time";
      };
     };
     MemberAssign @[2] {
      name="MemberAssign_networklayersOut_typeLayerTARGET";
      desc="just in case got reset by test";
      flags=NON_STD|CAN_REVERT_TO_CODE;
      code_string="network.layers.Output.layer_type = Layer::TARGET";
      obj=$.programs.gp[0][2].args[0]$;
      path="layers.Output.layer_type";
      expr {
       expr="Layer::TARGET";
      };
      update_after=0;
     };
     MemberAssign @[3] {
      name="MemberAssign_networktrainmodeNetworkTRAIN";
      desc="set back to training mode";
      flags=NEW_EL|CAN_REVERT_TO_CODE;
      code_string="network.train_mode = Network::TRAIN";
      obj=$.programs.gp[0][2].args[0]$;
      path="train_mode";
      expr {
       expr="Network::TRAIN";
      };
      update_after=0;
     };
     MethodCall @[4] {
      name="MethodCall_epochtimerStartTimertrue";
      desc="start the epoch timer to record computation time per epoch";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer->StartTimer(true)";
      result_var=NULL;
      obj=$.programs.gp[0][2].vars[4]$;
      method=TimeUsed::StartTimer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_used";
	required=0;
	def_val="true";
	prev_expr=;
	expr {
	 expr="true";
	};
       };
      };
      meth_sig="void StartTimer(bool reset_used = true)";
      meth_desc=" record the current time as the starting time, and optionally reset the time used information";
     };
     MethodCall @[5] {
      name="MethodCall_networkInitEpoch";
      desc="added in 8.0: essential for param_seqs";
      flags=NEW_EL|CAN_REVERT_TO_CODE;
      code_string="network->Init_Epoch()";
      result_var=NULL;
      obj=$.programs.gp[0][2].args[0]$;
      method=Network::Init_Epoch;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Init_Epoch()";
      meth_desc=" Initializes network state at the start of a new epoch -- updates parameters according to param_seq for example";
     };
     MethodCall @[6] {
      name="MethodCall_trialmondataResetData";
      desc="reset trial-level monitor data every epoch, so it reflects only the most recent epoch's worth of data (turn flags OFF to accumulate trial data across entire training run)";
      flags=OFF|CAN_REVERT_TO_CODE;
      code_string="trial_mon_data->ResetData()";
      result_var=NULL;
      obj=.programs.gp[0][2].vars[2]$$;
      method=DataTable::ResetData;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void ResetData()";
      meth_desc=" deletes all the data (rows), but keeps the column structure -- this cannot be undone!";
     };
     NetDataLoop @[7] {
      name="NetDataLoop_NetDataLoopPERMU_ardatalooporder";
      desc="iterates over the events/rows of input_data, according to data_loop_order variable";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Data Loop (PERMUTED):  table=input_data  index=data_loop_index  order_var=data_loop_order ";
      loop_code {
       name="loop_code";
       el_typ=ProgCode;
       el_def=0;
       ProgramCall @[0] {
	name="ProgramCall_LeabraTrialnetworkinputdata";
	desc="run the trial program, passing network and input_data";
	flags=CAN_REVERT_TO_CODE;
	code_string="LeabraTrial(network, input_data)";
	prog_args {
	 name="prog_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="network";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="input_data";
	  };
	 };
	};
	target=.programs.gp[0][3]$$;
	targ_ld_init="*LeabraTrial*";
       };
       If @[1] {
	name="If_ifsteponerrnetworksse00";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="if (step_on_err && network.sse > 0.0)";
	cond {
	 expr="step_on_err && network.sse > 0.0";
	};
	true_code {
	 name="true_code";
	 el_typ=ProgCode;
	 el_def=0;
	 StopStepPoint @[0] {
	  name="StopStepPoint_StopStepPoint";
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  code_string="Stop_Step Point";
	  cond {
	   expr=;
	  };
	 };
	};
       };
      };
      data_var=.programs.gp[0][2].args[1]$$;
      index_var=.programs.gp[0][2].vars[5]$$;
      order_var=.programs.gp[0][2].vars[0]$$;
      order=PERMUTED;
      update_after=0;
      dmem_nprocs=1;
      dmem_this_proc=0;
      grouped=0;
      group_col 9 0="Group";
      group_index_var=NULL;
      group_order_var=NULL;
      group_order=PERMUTED;
      group_idx_list{       };
     };
     If @[8] {
      name="If_ifnetworkwtupdateNetworkBATCH";
      desc="if full batch mode, update only at end of epoch";
      flags=CAN_REVERT_TO_CODE;
      code_string="if (network.wt_update == Network::BATCH)";
      cond {
       expr="network.wt_update == Network::BATCH";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	name="MethodCall_networkComputeWeights";
	desc="final update of weights based on accumulated changes";
	flags=CAN_REVERT_TO_CODE;
	code_string="network->Compute_Weights()";
	result_var=NULL;
	obj=$.programs.gp[0][2].args[0]$;
	method=Network::Compute_Weights;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	};
	meth_sig="void Compute_Weights()";
	meth_desc=" update weights for whole net: calls DMem_SumDWts before doing update if in dmem mode";
       };
      };
     };
     MethodCall @[9] {
      name="MethodCall_networkComputeEpochStats";
      desc="network accumulates some core statistics over the epoch -- this finalizes that process and computes summary stats";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->Compute_EpochStats()";
      result_var=NULL;
      obj=$.programs.gp[0][2].args[0]$;
      method=LeabraNetwork::Compute_EpochStats;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Compute_EpochStats()";
      meth_desc=" compute epoch-level statistics; calls DMem_ComputeAggs (if dmem) and EpochSSE -- specific algos may add more compute epoch-level statistics, including SSE, AvgExtRew and AvgCycles";
     };
     MethodCall @[10] {
      name="MethodCall_epochtimerEndTimer";
      desc="done with the computation in the epoch -- record time it took";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer->EndTimer()";
      result_var=NULL;
      obj=$.programs.gp[0][2].vars[4]$;
      method=TimeUsed::EndTimer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void EndTimer()";
      meth_desc=" record the current time as the ending time, and compute difference as the time used";
     };
     ProgramCall @[11] {
      name="ProgramCall_LeabraEpochMonitornetwork";
      desc="run program that records data from network and possibly other sources about the epoch";
      flags=CAN_REVERT_TO_CODE;
      code_string="LeabraEpochMonitor(network)";
      prog_args {
       name="prog_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=Network;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
      };
      target=.programs.gp[0][8]$$;
      targ_ld_init="*LeabraEpochMonitor*";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=1;
     wiki="emergent";
     url="LeabraEpoch";
     full_url="https://grey.colorado.edu/emergent/index.php/LeabraEpoch";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[3] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[0][3].doc$$: };
    };
    name="LeabraTrial";
    short_nm="Trial";
    tags="Leabra, Std";
    desc="Leabra processing of a single input/output event or external information, over a single alpha frequency cycle (100 msec / 10 Hz) -- iterates over gamma-frequency (25 msec / 40 Hz) quarter-trials";
    version {
     major=8;
     minor=0;
     step=0;
    };
    author="Randall C. O'Reilly";
    email="emergent-users@grey.colorado.edu";
    flags=0;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="network to operate on -- typically set by higher-level calling programs";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[0][0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="datatable containing training input/output patterns";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="update_net_view_0";
      var_type=T_Bool;
      bool_val=0;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc="determines whether to update any network view displays after trial is completed";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=0;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars1vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (1 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="qtr";
	var_type=T_Int;
	int_val=0;
	object_scope=NULL;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
     };
     If @[1] {
      name="If_ifnetworkCompute_stnetworktrial1";
      desc="test if it is time to update the weight values from delta weights (dWt) computed over trials";
      flags=CAN_REVERT_TO_CODE;
      code_string="if (network.Compute_Weights_Test(network.trial+1))";
      cond {
       expr="network.Compute_Weights_Test(network.trial+1)";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	name="MethodCall_networkComputeWeights";
	desc="update weights -- do this at start instead of end, so that dwt is valid";
	flags=CAN_REVERT_TO_CODE;
	code_string="network->Compute_Weights()";
	result_var=NULL;
	obj=.programs.gp[0][3].args[0]$$;
	method=Network::Compute_Weights;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	};
	meth_sig="void Compute_Weights()";
	meth_desc=" update weights for whole net: calls DMem_SumDWts before doing update if in dmem mode";
       };
      };
     };
     MethodCall @[2] {
      name="MethodCall_networkTrialInit";
      desc="initializes various counters at start of trial";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->Trial_Init()";
      result_var=NULL;
      obj=$.programs.gp[0][3].args[0]$;
      method=LeabraNetwork::Trial_Init;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Trial_Init()";
      meth_desc=" initialize at start of trial (init specs, Decay state)";
     };
     Comment @[3] {
      name="Comment_notecanapplyinpu_Quarterasneeded";
      desc="== note: can apply inputs once at start of trial, or at finer grain within LeabraQuarter, as needed";
      flags=CAN_REVERT_TO_CODE;
      code_string="// == note: can apply inputs once at start of trial, or at finer grain within LeabraQuarter, as needed";
     };
     MethodCall @[4] {
      name="MethodCall_networkInitInputData";
      desc="resets input data, before getting new external inputs data from apply inputs call";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->Init_InputData()";
      result_var=NULL;
      obj=$.programs.gp[0][3].args[0]$;
      method=Network::Init_InputData;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Init_InputData()";
      meth_desc=" Initializes external and target inputs";
     };
     ProgramCall @[5] {
      name="ProgramCall_ApplyInputsnetworkinputdata";
      desc="apply external input activations from the input_data table to the network
this program can be extended to do arbitrary things to generate data and apply it to network layers";
      flags=CAN_REVERT_TO_CODE;
      code_string="ApplyInputs(network, input_data)";
      prog_args {
       name="prog_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=Network;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
       ProgArg @[1] {
	arg_type=DataTable;
	type="DataTable*";
	name="input_data";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="input_data";
	};
       };
      };
      target=.programs.gp[0][6]$$;
      targ_ld_init="*ApplyInputs*";
     };
     ForLoop @[6] {
      name="ForLoop_forqtr0qtr4qtr";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="for (qtr = 0; qtr < 4; qtr++)";
      loop_code {
       name="loop_code";
       el_typ=ProgCode;
       el_def=0;
       ProgramCall @[0] {
	name="ProgramCall_LeabraQuarternetworkinputdata";
	desc="run the quarter program (which iterates over cyles of network activation updating) for each quarter";
	flags=CAN_REVERT_TO_CODE;
	code_string="LeabraQuarter(network, input_data)";
	prog_args {
	 name="prog_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="network";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="input_data";
	  };
	 };
	};
	target=.programs.gp[0][4]$$;
	targ_ld_init="*LeabraQuarter*";
       };
      };
      init {
       expr="qtr = 0";
      };
      test {
       expr="qtr < 4";
      };
      iter {
       expr="qtr++";
      };
     };
     MethodCall @[7] {
      name="MethodCall_networkTrialFinal";
      desc="after the trial is over, do final computations";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->Trial_Final()";
      result_var=NULL;
      obj=$.programs.gp[0][3].args[0]$;
      method=LeabraNetwork::Trial_Final;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Trial_Final()";
      meth_desc=" do final processing after trial: Compute_AbsRelNetin";
     };
     ProgramCall @[8] {
      name="ProgramCall_LeabraTrialMonitornetwork";
      desc="records data about the trial-level processing to a datatable for graphing/processing";
      flags=CAN_REVERT_TO_CODE;
      code_string="LeabraTrialMonitor(network)";
      prog_args {
       name="prog_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=Network;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
      };
      target=.programs.gp[0][7]$$;
      targ_ld_init="*LeabraTrialMonitor*";
     };
     NetUpdateView @[9] {
      name="NetUpdateView_NetUpdateView";
      desc="update the network view(s) (only if update_net_view is true)";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Update View";
      network_var=$.programs.gp[0][3].args[0]$;
      update_var=.programs.gp[0][3].vars[1]$$;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=1;
     wiki="emergent";
     url="LeabraTrial";
     full_url="https://grey.colorado.edu/emergent/index.php/LeabraTrial";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[4] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[0][4].doc$$: };
    };
    name="LeabraQuarter";
    short_nm="Quarter";
    tags="Leabra, Std";
    desc="iterates over cycles of activation updating for a gamma-frequency (25 msec / 40 Hz) quarter of an alpha frequency (100 msec / 10 Hz) trial";
    version {
     major=8;
     minor=0;
     step=0;
    };
    author="Randall C. O'Reilly";
    email="emergent-users@grey.colorado.edu";
    flags=0;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[0][0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="cycle";
      var_type=T_Int;
      int_val=100;
      object_scope=NULL;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="current cycle of settling (local loop counter)";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=1;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="if true, will update network views at end of settling";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     NetCounterInit @[0] {
      name="NetCounterInit_NetCounterInitcycle";
      desc="initialize local cycle counter and corresponding counter on network";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Counter Init: cycle";
      network_var=.programs.gp[0][4].args[0]$$;
      local_ctr_var=.programs.gp[0][4].vars[0]$$;
      counter=Network::cycle;
      update_after=0;
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars2vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (2 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="cycle_max";
	var_type=T_Int;
	int_val=0;
	object_scope=NULL;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[1] {
	name="cyc";
	var_type=T_Int;
	int_val=0;
	object_scope=NULL;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
     };
     Comment @[1] {
      name="Comment_notecanapplyinpu_Quarterasneeded";
      desc="== note: can apply inputs once at start of trial, or at finer grain within LeabraQuarter, as needed";
      flags=CAN_REVERT_TO_CODE;
      code_string="// == note: can apply inputs once at start of trial, or at finer grain within LeabraQuarter, as needed";
     };
     MethodCall @[2] {
      name="MethodCall_networkInitInputData";
      desc="resets input data, before getting new external inputs data from apply inputs call";
      flags=OFF|CAN_REVERT_TO_CODE;
      code_string="network->Init_InputData()";
      result_var=NULL;
      obj=$.programs.gp[0][4].args[0]$;
      method=Network::Init_InputData;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Init_InputData()";
      meth_desc=" Initializes external and target inputs";
     };
     ProgramCall @[3] {
      name="ProgramCall_ApplyInputsnetworkinputdata";
      desc="apply external input activations from the input_data table to the network
this program can be extended to do arbitrary things to generate data and apply it to network layers";
      flags=OFF|CAN_REVERT_TO_CODE;
      code_string="ApplyInputs(network, input_data)";
      prog_args {
       name="prog_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=Network;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
       ProgArg @[1] {
	arg_type=DataTable;
	type="DataTable*";
	name="input_data";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="input_data";
	};
       };
      };
      target=$.programs.gp[0][6]$;
      targ_ld_init="*ApplyInputs*";
     };
     MethodCall @[4] {
      name="MethodCall_networkQuarterInit";
      desc="initializes various counters at start of settling";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->Quarter_Init()";
      result_var=NULL;
      obj=$.programs.gp[0][4].args[0]$;
      method=LeabraNetwork::Quarter_Init;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Quarter_Init()";
      meth_desc=" initialize network for quarter-level processing (hard clamp, netscale)";
     };
     MethodCall @[5] {
      name="MethodCall_cyclemaxnetworkCycleRunMax";
      desc="will be 25 if network times.cycle_qtr is true, else 1";
      flags=CAN_REVERT_TO_CODE;
      code_string="cycle_max = network->CycleRunMax()";
      result_var=.programs.gp[0][4].prog_code[0].local_vars[0]$$;
      obj=$.programs.gp[0][4].args[0]$;
      method=LeabraNetwork::CycleRunMax;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="int CycleRunMax()";
      meth_desc=" max loop counter for running cycles in a gamma quarter of processing, taking into account the fact that threading can run multiple cycles per Cycle_Run call if quarter flag is set";
     };
     ForLoop @[6] {
      name="ForLoop_forcyc0cyccyclemaxcyc";
      desc="// the main loop over cycles of updating";
      flags=CAN_REVERT_TO_CODE;
      code_string="for (cyc=0; cyc<cycle_max; cyc++)";
      loop_code {
       name="loop_code";
       el_typ=ProgCode;
       el_def=0;
       ProgramCall @[0] {
	name="ProgramCall_LeabraCyclenetwork";
	desc="run the cycle program -- can run multiple cycles at a time due to threading";
	flags=CAN_REVERT_TO_CODE;
	code_string="LeabraCycle(network)";
	prog_args {
	 name="prog_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="network";
	  };
	 };
	};
	target=$.programs.gp[0][5]$;
	targ_ld_init="*LeabraCycle*";
       };
       ProgramCall @[1] {
	name="ProgramCall_LeabraCycleMonitornetwork";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="LeabraCycleMonitor(network)";
	prog_args {
	 name="prog_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=Network;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="network";
	  };
	 };
	};
	target=.programs.gp[0][10]$$;
	targ_ld_init="*LeabraCycleMonitor*";
       };
       AssignExpr @[2] {
	name="AssignExpr_cyclenetworkcycle";
	desc="grab the updated cycle count";
	flags=CAN_REVERT_TO_CODE;
	code_string="cycle = network.cycle";
	result_var=$.programs.gp[0][4].vars[0]$;
	expr {
	 expr="network.cycle";
	};
       };
      };
      init {
       expr="cyc=0";
      };
      test {
       expr="cyc<cycle_max";
      };
      iter {
       expr="cyc++";
      };
     };
     MethodCall @[7] {
      name="MethodCall_networkQuarterFinal";
      desc="perform final operations at end of settling (storing final activations, etc)";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->Quarter_Final()";
      result_var=NULL;
      obj=$.programs.gp[0][4].args[0]$;
      method=LeabraNetwork::Quarter_Final;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Quarter_Final()";
      meth_desc=" do final processing after each quarter: ";
     };
     MethodCall @[8] {
      name="MethodCall_networkComputePhaseStats";
      desc="compute appropriate stats for each phase (MinusStats, PlusStats)";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->Compute_PhaseStats()";
      result_var=NULL;
      obj=$.programs.gp[0][4].args[0]$;
      method=LeabraNetwork::Compute_PhaseStats;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Compute_PhaseStats()";
      meth_desc=" compute MinusStats at the end of the minus phase, and PlusStats at the end of the plus phase -- this is preferred over the previous implementation of calling TrialStats only at the end of the minus phase, which required targets to be present in the minus phase, which is not always the case";
     };
     NetUpdateView @[9] {
      name="NetUpdateView_NetUpdateView";
      desc="update network views, if update_net_view == true";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Update View";
      network_var=$.programs.gp[0][4].args[0]$;
      update_var=$.programs.gp[0][4].vars[1]$;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=1;
     wiki="emergent";
     url="LeabraQuarter";
     full_url="https://grey.colorado.edu/emergent/index.php/LeabraQuarter";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[5] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[0][5].doc$$: };
    };
    name="LeabraCycle";
    short_nm="Cycle";
    tags="Leabra, Std";
    desc="runs one cycle of leabra processing (updating net inputs and activations)";
    version {
     major=8;
     minor=0;
     step=0;
    };
    author="Randall C. O'Reilly";
    email="emergent-users@grey.colorado.edu";
    flags=0;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=0;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="determines whether network views will be updated on a cycle-by-cycle basis (slow, but often quite useful for seeing how processing is proceeding)";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_networkCycleRun";
      desc="this does all the standard leabra processing of activation updating -- either 1 cycle (1 msec) or 25 cycles if times.cycle_qtr is TRUE (default)";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->Cycle_Run()";
      result_var=NULL;
      obj=.programs.gp[0][5].args[0]$$;
      method=LeabraNetwork::Cycle_Run;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Cycle_Run()";
      meth_desc=" compute cycle(s) of updating: netinput, inhibition, activations -- multiple cycles can be run depending on lthreads.n_cycles setting and whether multiple threads are actually being used -- see lthreads.n_threads_act";
     };
     NetUpdateView @[1] {
      name="NetUpdateView_NetUpdateView";
      desc="update network views if update_net_view == true";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Update View";
      network_var=$.programs.gp[0][5].args[0]$;
      update_var=$.programs.gp[0][5].vars[0]$;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=1;
     wiki="emergent";
     url="LeabraCycle";
     full_url="https://grey.colorado.edu/emergent/index.php/LeabraCycle";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[6] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[0][6].doc$$: };
    };
    name="ApplyInputs";
    short_nm="AplyIn";
    tags="Network, InputData, Apply";
    desc="apply the current input data to the network as external input and target values";
    version {
     major=8;
     minor=0;
     step=0;
    };
    author="Randall C. O'Reilly";
    email="emergent-users@grey.colorado.edu";
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=LayerWriter;
     el_def=0;
     LayerWriter @[0] {
      name="LayerWriter_0";
      data=$.data.gp[0][0]$;
      network=$.networks[0]$;
      layer_data {
       name="layer_data";
       el_typ=LayerWriterEl;
       el_def=0;
       LayerWriterEl @[0] {
	col_name="Input";
	net_target=LAYER;
	layer_name="Input";
	offset {x=0: y=0: };
	use_layer_type=1;
	quiet=0;
	na_by_range=0;
	ext_flags=EXT;
	noise {name="RandomSpec_7": type=NONE: mean=0: var=0.5: par=1: };
       };
       LayerWriterEl @[1] {
	col_name="Name";
	net_target=TRIAL_NAME;
	layer_name="Name";
	offset {x=0: y=0: };
	use_layer_type=1;
	quiet=0;
	na_by_range=0;
	ext_flags=0;
	noise {name="RandomSpec_9": type=NONE: mean=0: var=0.5: par=1: };
       };
       LayerWriterEl @[2] {
	col_name="Output";
	net_target=LAYER;
	layer_name="Output";
	offset {x=0: y=0: };
	use_layer_type=1;
	quiet=0;
	na_by_range=0;
	ext_flags=TARG;
	noise {name="noise": type=NONE: mean=0: var=0.5: par=1: };
       };
      };
     };
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="layer_writer_0";
      var_type=T_Object;
      object_type=LayerWriter;
      object_val=.programs.gp[0][6].objs[0]$$;
      object_scope=NULL;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="this is a pointer to the LayerWriter object in objs -- edit that object to determine how information is presented to the network";
      init_from=NULL;
     };
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="network to apply inputs to -- typically set by calling program";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[0][0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="input datatable containing input/output patterns";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_layerwriter0SetD_nputdatanetwork";
      desc="sets the datatable and network for the layer writer, so it knows what to write to";
      flags=CAN_REVERT_TO_CODE;
      code_string="layer_writer_0->SetDataNetwork(input_data, network)";
      result_var=NULL;
      obj=.programs.gp[0][6].objs_vars[0]$$;
      method=LayerWriter::SetDataNetwork;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="db";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="input_data";
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
      };
      meth_sig="void SetDataNetwork(DataTable* db, Network* net)";
      meth_desc=" set the data table and network pointers -- convenience function for programs ";
     };
     MethodCall @[1] {
      name="MethodCall_layerwriter0AutoConfig";
      desc="configure to fit the network and input data -- this may cause spurious warning messages and problems in some cases so just turn it OFF if necessary";
      flags=CAN_REVERT_TO_CODE;
      code_string="layer_writer_0->AutoConfig()";
      result_var=NULL;
      obj=$.programs.gp[0][6].objs_vars[0]$;
      method=LayerWriter::AutoConfig;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="remove_unused";
	required=0;
	def_val="true";
	prev_expr=;
	expr {
	 expr=;
	};
       };
      };
      meth_sig="void AutoConfig(bool remove_unused = true)";
      meth_desc=" do a 'best guess' configuration of items by matching up like-named data Channels and network Layers -- if remove_unused is true, then layer writer elements that existed previously but were not found in input data and network are removed";
     };
     MethodCall @[2] {
      name="MethodCall_layerwriter0CheckConfigfalse";
      desc="check the configuration of the layer writer -- will emit warnings and errors for missing or misconfigured items";
      flags=CAN_REVERT_TO_CODE;
      code_string="layer_writer_0->CheckConfig(false)";
      result_var=NULL;
      obj=$.programs.gp[0][6].objs_vars[0]$;
      method=taList_impl::CheckConfig;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="false";
	};
       };
      };
      meth_sig="bool CheckConfig(bool quiet = false)";
      meth_desc=" check the configuration of this object and all its children (defaults to no confirm of success)";
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_layerwriter0SetD_nputdatanetwork";
      desc="sets the datatable and network for the layer writer, so it knows what to write to";
      flags=CAN_REVERT_TO_CODE;
      code_string="layer_writer_0->SetDataNetwork(input_data, network)";
      result_var=NULL;
      obj=$.programs.gp[0][6].objs_vars[0]$;
      method=LayerWriter::SetDataNetwork;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="db";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="input_data";
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
      };
      meth_sig="void SetDataNetwork(DataTable* db, Network* net)";
      meth_desc=" set the data table and network pointers -- convenience function for programs ";
     };
     MethodCall @[1] {
      name="MethodCall_layerwriter0ApplyInputData";
      desc="apply inputs to the network!  layer writer has all the key specs";
      flags=CAN_REVERT_TO_CODE;
      code_string="layer_writer_0->ApplyInputData()";
      result_var=NULL;
      obj=$.programs.gp[0][6].objs_vars[0]$;
      method=LayerWriter::ApplyInputData;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="bool ApplyInputData()";
      meth_desc=" apply data to the layers, using the network's current context settings (TEST,TRAIN,etc) -- returns success";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=1;
     wiki="emergent";
     url="ApplyInputs";
     full_url="https://grey.colorado.edu/emergent/index.php/ApplyInputs";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[7] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[0][7].doc$$: };
    };
    name="LeabraTrialMonitor";
    short_nm="TrlMon";
    tags="Leabra, Std, Monitor";
    desc="monitor trial-level data from the network (and potentially other sources) -- stores results in datatable (TrialOutputData typically) that can be used for graph/grid views and further analysis ";
    version {
     major=8;
     minor=0;
     step=0;
    };
    author="Randall C. O'Reilly";
    email="emergent-users@grey.colorado.edu";
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=NetMonitor;
     el_def=0;
     NetMonitor @[0] {
      name="trial_netmon";
      items {
       name="items";
       el_typ=NetMonItem;
       el_def=0;
       NetMonItem @[0] {
	name="trial_name";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="trial_name";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[1] {
	name="sse";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="sse";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[2] {
	name="act_m";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="act_m";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0.5: lw=0: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[3] {
	name="wts";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_VARIANT;
	matrix=1;
	matrix_geom{ 2;4;	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 2 0=0;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
      };
      network=$.networks[0]$;
      data=$.data.gp[1][0]$;
      rmv_orphan_cols=1;
     };
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="trial_netmon";
      var_type=T_Object;
      object_type=NetMonitor;
      object_val=.programs.gp[0][7].objs[0]$$;
      object_scope=NULL;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="pointer to the NetMonitor object in objs secton of this program that contains configuration for what to record and where to get it";
      init_from=NULL;
     };
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="network to record data from";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="trial_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[1][0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="data table to record trial-level data to (this program writes new data to this table!)";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_trialnetmonSetDa_lmondatanetwork";
      desc="set the network and datatable for the NetMonitor";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_netmon->SetDataNetwork(trial_mon_data, network)";
      result_var=NULL;
      obj=.programs.gp[0][7].objs_vars[0]$$;
      method=NetMonitor::SetDataNetwork;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="trial_mon_data";
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
      };
      meth_sig="void SetDataNetwork(DataTable* dt, Network* net)";
      meth_desc=" set both the data table and network -- convenient for programs -- calls ResetDataTableCols too -- don't call if columns are manually added or this is adding additional rows to a table";
     };
     MethodCall @[1] {
      name="MethodCall_trialnetmonCheckConfigfalse";
      desc="check the configuration of the network monitor -- will emit warnings and errors for misconfigurations";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_netmon->CheckConfig(false)";
      result_var=NULL;
      obj=$.programs.gp[0][7].objs_vars[0]$;
      method=taBase::CheckConfig;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="false";
	};
       };
      };
      meth_sig="bool CheckConfig(bool quiet = false)";
      meth_desc=" check the configuration of this object and all its children (defaults to no confirm of success)";
     };
     MethodCall @[2] {
      name="MethodCall_trialnetmonUpdateMonitorstrue";
      desc="update the monitor items and data schema based on current settings of the NetMonitor object";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_netmon->UpdateMonitors(true)";
      result_var=NULL;
      obj=$.programs.gp[0][7].objs_vars[0]$;
      method=NetMonitor::UpdateMonitors;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_first";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="true";
	};
       };
      };
      meth_sig="void UpdateMonitors(bool reset_first = false)";
      meth_desc=" old name for UpdateDataTable";
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars2vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (2 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="i";
	var_type=T_Int;
	int_val=0;
	object_scope=NULL;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[1] {
	name="j";
	var_type=T_Int;
	int_val=0;
	object_scope=NULL;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
     };
     MethodCall @[1] {
      name="MethodCall_trialmondataAddBlankRow";
      desc="add a new blank row to the data";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_mon_data->AddBlankRow()";
      result_var=NULL;
      obj=.programs.gp[0][7].vars[0]$$;
      method=DataTable::AddBlankRow;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="int AddBlankRow()";
      meth_desc=" add a new row to the data table, sets read (source) and write (sink) index to this last row (as in ReadItem or WriteItem), so that subsequent data routines refer to this new row, and returns row ";
     };
     MethodCall @[2] {
      name="MethodCall_trialnetmonGetMonVals";
      desc="get the new monitor data from the network and other sources -- this does the main work";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_netmon->GetMonVals()";
      result_var=NULL;
      obj=$.programs.gp[0][7].objs_vars[0]$;
      method=NetMonitor::GetMonVals;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void GetMonVals()";
      meth_desc=" get all the values and store in current row of data table -- call in program to get new data";
     };
     ForLoop @[3] {
      name="ForLoop_fori0inetworklay_sOutputungeomni";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="for (i = 0; i < network.layers[\"Output\"].un_geom.n; i++)";
      loop_code {
       name="loop_code";
       el_typ=ProgCode;
       el_def=0;
       ForLoop @[0] {
	name="ForLoop_forj0jnetworklayersInputungeomnj";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="for (j = 0; j < network.layers[\"Input\"].un_geom.n; j++)";
	loop_code {
	 name="loop_code";
	 el_typ=ProgCode;
	 el_def=0;
	 MemberMethodCall @[0] {
	  name="MemberMethodCall_networklayersOut_etCnValName0jwt";
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  code_string="network.layers[\"Output\"].units[i].GetCnValName(0, j, \"wt\")";
	  obj=.programs.gp[0][7].args[0]$$;
	  path="layers[\"Output\"].units[i]";
	  result_var=NULL;
	  method=Unit::GetCnValName;
	  meth_args {
	   name="meth_args";
	   el_typ=ProgArg;
	   el_def=0;
	   ProgArg @[0] {
	    arg_type=const_Variant_ref;
	    type="Variant&";
	    name="prjn";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="0";
	    };
	   };
	   ProgArg @[1] {
	    arg_type=int;
	    type="int";
	    name="cn_idx";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="j";
	    };
	   };
	   ProgArg @[2] {
	    arg_type=const_taString_ref;
	    type="taString&";
	    name="var_nm";
	    required=1;
	    def_val=;
	    prev_expr=;
	    expr {
	     expr="\"wt\"";
	    };
	   };
	  };
	  meth_sig="float GetCnValName(Variant& prjn, int cn_idx, taString& var_nm)";
	  meth_desc=" get recv connection variable value (specified by name, e.g., wt, dwt, pdw) in given projection (can be specified by name or index) at given connection index (cn_idx) -- for use by programs";
	 };
	 MemberAssign @[1] {
	  name="MemberAssign_trialmondatawtsi_etCnValName0jwt";
	  desc=;
	  flags=CAN_REVERT_TO_CODE;
	  code_string="trial_mon_data[\"wts\"][i,j,trial_mon_data.write_idx] = network.layers[\"Output\"].units[i].GetCnValName(0, j, \"wt\")";
	  obj=$.programs.gp[0][7].vars[0]$;
	  path="[\"wts\"][i,j,trial_mon_data.write_idx]";
	  expr {
	   expr="network.layers[\"Output\"].units[i].GetCnValName(0, j, \"wt\")";
	  };
	  update_after=0;
	 };
	};
	init {
	 expr="j = 0";
	};
	test {
	 expr="j < network.layers[\"Input\"].un_geom.n";
	};
	iter {
	 expr="j++";
	};
       };
       BlankLineEl @[1] {
	name="BlankLineEl_";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string=" ";
       };
      };
      init {
       expr="i = 0";
      };
      test {
       expr="i < network.layers[\"Output\"].un_geom.n";
      };
      iter {
       expr="i++";
      };
     };
     MethodCall @[4] {
      name="MethodCall_trialmondataWriteClose";
      desc="update views and other things after writing new data to monitor data table";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_mon_data->WriteClose()";
      result_var=NULL;
      obj=$.programs.gp[0][7].vars[0]$;
      method=DataTable::WriteClose;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void WriteClose()";
      meth_desc=" closes up a write operation -- call when done writing data -- performs any post-writing cleanup/closing of files, etc";
     };
     MethodCall @[5] {
      name="MethodCall_networkDMemShare_tatrialmondata1";
      desc="only functional for dmem projects: synchronizes trial data across processes so that all distributed memory processors have the same trial-level data, despite having run only a subset of them each";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->DMem_ShareTrialData(trial_mon_data, 1)";
      result_var=NULL;
      obj=$.programs.gp[0][7].args[0]$;
      method=Network::DMem_ShareTrialData;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="trial_mon_data";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="n_rows";
	required=0;
	def_val="1";
	prev_expr=;
	expr {
	 expr="1";
	};
       };
      };
      meth_sig="void DMem_ShareTrialData(DataTable* dt, int n_rows = 1)";
      meth_desc=" share trial data from given datatable across the trial-level dmem communicator (outer loop) -- each processor gets data from all other processors; if called every trial with n_rows = 1, data will be identical to non-dmem; if called at end of epoch with n_rows = -1 data will be grouped by processor but this is more efficient";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[8] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[0][8].doc$$: };
    };
    name="LeabraEpochMonitor";
    short_nm="EpcMon";
    tags="Leabra, Std, Monitor";
    desc="monitor epoch-level data from the network to a datatable (EpochOutputData typically) for use in graphing and viewing and further analysis";
    version {
     major=8;
     minor=0;
     step=0;
    };
    author="Randall C. O'Reilly";
    email="emergent-users@grey.colorado.edu";
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=NetMonitor;
     el_def=0;
     NetMonitor @[0] {
      name="epoch_netmon";
      items {
       name="items";
       el_typ=NetMonItem;
       el_def=0;
       NetMonItem @[0] {
	name="batch";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="batch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[1] {
	name="epoch";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="epoch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[2] {
	name="avg_sse";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="avg_sse";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[3] {
	name="cnt_err";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="cnt_err";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[4] {
	name="avg_ext_rew";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="avg_ext_rew";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[5] {
	name="avg_cycles";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="avg_cycles";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[6] {
	name="epoch_time_tot";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[7] {
	name="epoch_time_usr";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
      };
      network=$.networks[0]$;
      data=.data.gp[1][1]$$;
      rmv_orphan_cols=1;
     };
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="epoch_netmon";
      var_type=T_Object;
      object_type=NetMonitor;
      object_val=.programs.gp[0][8].objs[0]$$;
      object_scope=NULL;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="network monitor object that contains full specs for what to record and where to get it";
      init_from=NULL;
     };
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="network to get data from";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="epoch_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[1][1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="data table to write the epoch data to";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="epoch_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=$.networks[0].epoch_time$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="pointer to the network's epoch-level timer, to record how long it took to process an epoch";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     AssignExpr @[0] {
      name="AssignExpr_epochtimernetworkepochtime";
      desc="get the epoch timer from current network";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer = network.epoch_time";
      result_var=.programs.gp[0][8].vars[1]$$;
      expr {
       expr="network.epoch_time";
      };
     };
     MethodCall @[1] {
      name="MethodCall_epochnetmonSetDa_hmondatanetwork";
      desc="set data and network on NetMonitor object";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_netmon->SetDataNetwork(epoch_mon_data, network)";
      result_var=NULL;
      obj=.programs.gp[0][8].objs_vars[0]$$;
      method=NetMonitor::SetDataNetwork;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="epoch_mon_data";
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
      };
      meth_sig="void SetDataNetwork(DataTable* dt, Network* net)";
      meth_desc=" set both the data table and network -- convenient for programs -- calls ResetDataTableCols too -- don't call if columns are manually added or this is adding additional rows to a table";
     };
     MethodCall @[2] {
      name="MethodCall_epochnetmonCheckConfigfalse";
      desc="check configuration and emit errors/warnings for problems";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_netmon->CheckConfig(false)";
      result_var=NULL;
      obj=$.programs.gp[0][8].objs_vars[0]$;
      method=taBase::CheckConfig;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="false";
	};
       };
      };
      meth_sig="bool CheckConfig(bool quiet = false)";
      meth_desc=" check the configuration of this object and all its children (defaults to no confirm of success)";
     };
     MethodCall @[3] {
      name="MethodCall_epochnetmonUpdateMonitorstrue";
      desc="update the monitor items and data schema based on current settings of NetMonitor";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_netmon->UpdateMonitors(true)";
      result_var=NULL;
      obj=$.programs.gp[0][8].objs_vars[0]$;
      method=NetMonitor::UpdateMonitors;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_first";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="true";
	};
       };
      };
      meth_sig="void UpdateMonitors(bool reset_first = false)";
      meth_desc=" old name for UpdateDataTable";
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_epochmondataAddBlankRow";
      desc="add a new blank row to the data";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_mon_data->AddBlankRow()";
      result_var=NULL;
      obj=.programs.gp[0][8].vars[0]$$;
      method=DataTable::AddBlankRow;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="int AddBlankRow()";
      meth_desc=" add a new row to the data table, sets read (source) and write (sink) index to this last row (as in ReadItem or WriteItem), so that subsequent data routines refer to this new row, and returns row ";
     };
     MethodCall @[1] {
      name="MethodCall_epochnetmonGetMonVals";
      desc="get the new monitor data and stor it into the data table -- this does the main job here";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_netmon->GetMonVals()";
      result_var=NULL;
      obj=$.programs.gp[0][8].objs_vars[0]$;
      method=NetMonitor::GetMonVals;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void GetMonVals()";
      meth_desc=" get all the values and store in current row of data table -- call in program to get new data";
     };
     AssignExpr @[2] {
      name="AssignExpr_epochtimernetworkepochtime";
      desc="get the epoch timer from current network";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer = network.epoch_time";
      result_var=$.programs.gp[0][8].vars[1]$;
      expr {
       expr="network.epoch_time";
      };
     };
     MethodCall @[3] {
      name="MethodCall_epochmondataSetV_csepochtimetot1";
      desc="set the total time to compute the epoch (epoch_time_tot -- wall clock time) to time used data from network timer";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_mon_data->SetValColName(epoch_timer.used.GetTotSecs(), \"epoch_time_tot\", -1, )";
      result_var=NULL;
      obj=$.programs.gp[0][8].vars[0]$;
      method=DataTable::SetValColName;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="Variant&";
	name="val";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="epoch_timer.used.GetTotSecs()";
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="taString&";
	name="col_name";
	required=1;
	def_val="\"\"";
	prev_expr=;
	expr {
	 expr="\"epoch_time_tot\"";
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
       ProgArg @[3] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr=;
	};
       };
      };
      meth_sig="bool SetValColName(Variant& val, taString& col_name, int row, bool quiet = false)";
      meth_desc=" set data of scalar type, in Variant form (any data type, use for Programs), for given column name, row; returns 'true' if valid access and set is successful -- quiet = fail quietly";
     };
     MethodCall @[4] {
      name="MethodCall_epochmondataSetV_csepochtimeusr1";
      desc="set the user process time (cpu time for this process, epoch_time_usr) to time used data from network timer";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_mon_data->SetValColName(epoch_timer.used.GetUsrSecs(), \"epoch_time_usr\", -1, )";
      result_var=NULL;
      obj=$.programs.gp[0][8].vars[0]$;
      method=DataTable::SetValColName;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="Variant&";
	name="val";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="epoch_timer.used.GetUsrSecs()";
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="taString&";
	name="col_name";
	required=1;
	def_val="\"\"";
	prev_expr=;
	expr {
	 expr="\"epoch_time_usr\"";
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
       ProgArg @[3] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr=;
	};
       };
      };
      meth_sig="bool SetValColName(Variant& val, taString& col_name, int row, bool quiet = false)";
      meth_desc=" set data of scalar type, in Variant form (any data type, use for Programs), for given column name, row; returns 'true' if valid access and set is successful -- quiet = fail quietly";
     };
     MethodCall @[5] {
      name="MethodCall_epochmondataWriteClose";
      desc="update after writing new data to monitor data table";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_mon_data->WriteClose()";
      result_var=NULL;
      obj=$.programs.gp[0][8].vars[0]$;
      method=DataTable::WriteClose;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void WriteClose()";
      meth_desc=" closes up a write operation -- call when done writing data -- performs any post-writing cleanup/closing of files, etc";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[9] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[0][9].doc$$: };
    };
    name="SaveWeights";
    short_nm="SvWts";
    tags="Network, Weights";
    desc="save network's current weight values to file using WriteWeights function, with file name based on project name + batch + epoch values";
    version {
     major=8;
     minor=0;
     step=0;
    };
    author="Randall C. O'Reilly";
    email="emergent-users@grey.colorado.edu";
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="tag";
      var_type=T_String;
      string_val=;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="user-provided tag (startup script will set this!)";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="wts_subdir";
      var_type=T_String;
      string_val=;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="user-provided subdirectory to save weights in";
      init_from=NULL;
     };
     ProgVar @[2] {
      name="fname";
      var_type=T_String;
      string_val=;
      object_scope=NULL;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="final generated file name -- do not edit!";
      init_from=NULL;
     };
     ProgVar @[3] {
      name="epoch_str";
      var_type=T_String;
      string_val="0036";
      object_scope=NULL;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="string rep of epoch with leading zeros";
      init_from=NULL;
     };
     ProgVar @[4] {
      name="batch_str";
      var_type=T_String;
      string_val="03";
      object_scope=NULL;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="string rep of batch with leading zeros";
      init_from=NULL;
     };
     ProgVar @[5] {
      name="final_tag";
      var_type=T_String;
      string_val=".03_0036";
      object_scope=NULL;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="batch + epoch";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     If @[0] {
      name="If_iftaMiscdmemproc0";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="if (taMisc::dmem_proc > 0)";
      cond {
       expr="taMisc::dmem_proc > 0";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       ReturnExpr @[0] {
	name="ReturnExpr_return";
	desc=;
	flags=CAN_REVERT_TO_CODE;
	code_string="return ";
	expr {
	 expr=;
	};
       };
      };
     };
     MiscCall @[1] {
      name="MiscCall_batchstrtaMiscLe_osnetworkbatch2";
      desc="get current batch counter for file name, with leading zeros to length 3";
      flags=CAN_REVERT_TO_CODE;
      code_string="batch_str = taMisc::LeadingZeros(network.batch, 2)";
      result_var=.programs.gp[0][9].vars[4]$$;
      object_type=taMisc;
      method=taMisc::LeadingZeros;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="num";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network.batch";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="len";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="2";
	};
       };
      };
     };
     MiscCall @[2] {
      name="MiscCall_epochstrtaMiscLe_osnetworkepoch4";
      desc="get current epoch counter with leading zeros to length 4";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_str = taMisc::LeadingZeros(network.epoch, 4)";
      result_var=.programs.gp[0][9].vars[3]$$;
      object_type=taMisc;
      method=taMisc::LeadingZeros;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="num";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network.epoch";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="len";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="4";
	};
       };
      };
     };
     AssignExpr @[3] {
      name="AssignExpr_finaltagtagbatchstrepochstr";
      desc="string 'tag' to identify the batch, epoch, and other user id info for the weights";
      flags=CAN_REVERT_TO_CODE;
      code_string="final_tag = tag + \".\" + batch_str + \"_\" + epoch_str";
      result_var=.programs.gp[0][9].vars[5]$$;
      expr {
       expr="tag + \".\" + batch_str + \"_\" + epoch_str";
      };
     };
     MethodCall @[4] {
      name="MethodCall_fnamenetworkGetF_gwtssubdirfalse";
      desc="get a file name based on the project's current file name, for saving the weights";
      flags=CAN_REVERT_TO_CODE;
      code_string="fname = network->GetFileNameFmProject(\".wts.gz\", final_tag, wts_subdir, false)";
      result_var=.programs.gp[0][9].vars[2]$$;
      obj=.programs.gp[0][9].args[0]$$;
      method=taBase::GetFileNameFmProject;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_taString_ref;
	type="taString&";
	name="ext";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="\".wts.gz\"";
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="taString&";
	name="tag";
	required=0;
	def_val="\"\"";
	prev_expr=;
	expr {
	 expr="final_tag";
	};
       };
       ProgArg @[2] {
	arg_type=const_taString_ref;
	type="taString&";
	name="subdir";
	required=0;
	def_val="\"\"";
	prev_expr=;
	expr {
	 expr="wts_subdir";
	};
       };
       ProgArg @[3] {
	arg_type=bool;
	type="bool";
	name="dmem_proc_no";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="false";
	};
       };
      };
      meth_sig="taString GetFileNameFmProject(taString& ext, taString& tag, taString& subdir, bool dmem_proc_no = false)";
      meth_desc=" get file name from project file name -- useful for saving files associated with the project; ext = extension; tag = additional tag; subdir = additional directory after any existing in project name; fname = proj->base_name (subdir) + tag + ext; if dmem_proc_no, add dmem proc no to file name. empty if project not found";
     };
     MethodCall @[5] {
      name="MethodCall_networkSaveWeigh_meNetworkNETFMT";
      desc="save the weights to that file name";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->SaveWeights(fname, Network::NET_FMT)";
      result_var=NULL;
      obj=$.programs.gp[0][9].args[0]$;
      method=Network::SaveWeights;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_taString_ref;
	type="taString&";
	name="fname";
	required=0;
	def_val="\"\"";
	prev_expr=;
	expr {
	 expr="fname";
	};
       };
       ProgArg @[1] {
	arg_type=Network::WtSaveFormat;
	type="Network::WtSaveFormat";
	name="fmt";
	required=0;
	def_val="Network::NET_FMT";
	prev_expr=;
	expr {
	 expr="Network::NET_FMT";
	};
       };
      };
      meth_sig="void SaveWeights(taString& fname, Network::WtSaveFormat fmt = NET_FMT)";
      meth_desc=" write weight values out in a simple ordered list of weights (optionally in binary fmt) (leave fname empty to pull up file chooser)";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[10] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[0][10].doc$$: };
    };
    name="LeabraCycleMonitor";
    short_nm="CycMnt";
    tags="Leabra, Std, Monitor";
    desc="monitor trial-level data from the network (and potentially other sources) -- stores results in datatable (TrialOutputData typically) that can be used for graph/grid views and further analysis ";
    version {
     major=0;
     minor=0;
     step=0;
    };
    author="Randall C. O'Reilly";
    email="emergent-users@grey.colorado.edu";
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=NetMonitor;
     el_def=0;
     NetMonitor @[0] {
      name="trial_netmon";
      items {
       name="items";
       el_typ=NetMonItem;
       el_def=0;
       NetMonItem @[0] {
	name="cycle";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="cycle";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[1] {
	name="net";
	computed=0;
	object_type=LeabraLayer;
	object=.networks[0].layers[1]$$;
	variable="units[0].net";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[2] {
	name="I_net";
	computed=0;
	object_type=LeabraLayer;
	object=$.networks[0].layers[1]$;
	variable="units[0].I_net";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[3] {
	name="v_m";
	computed=0;
	object_type=LeabraLayer;
	object=$.networks[0].layers[1]$;
	variable="units[0].v_m";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[4] {
	name="act";
	computed=0;
	object_type=LeabraLayer;
	object=$.networks[0].layers[1]$;
	variable="units[0].act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[5] {
	name="act_eq";
	computed=0;
	object_type=LeabraLayer;
	object=$.networks[0].layers[1]$;
	variable="units[0].act_eq";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[6] {
	name="avg_ss";
	computed=0;
	object_type=LeabraLayer;
	object=$.networks[0].layers[1]$;
	variable="units[0].avg_ss";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[7] {
	name="avg_s";
	computed=0;
	object_type=LeabraLayer;
	object=$.networks[0].layers[1]$;
	variable="units[0].avg_s";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[8] {
	name="avg_m";
	computed=0;
	object_type=LeabraLayer;
	object=$.networks[0].layers[1]$;
	variable="units[0].avg_s";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[9] {
	name="avg_s_eff";
	computed=0;
	object_type=LeabraLayer;
	object=$.networks[0].layers[1]$;
	variable="units[0].avg_s";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[10] {
	name="avg_l";
	computed=0;
	object_type=LeabraLayer;
	object=$.networks[0].layers[1]$;
	variable="units[0].avg_s";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[11] {
	name="spike";
	computed=0;
	object_type=LeabraLayer;
	object=$.networks[0].layers[1]$;
	variable="units[0].spike";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[12] {
	name="adapt";
	computed=0;
	object_type=LeabraLayer;
	object=$.networks[0].layers[1]$;
	variable="units[0].adapt";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[13] {
	name="syn_tr";
	computed=0;
	object_type=LeabraLayer;
	object=$.networks[0].layers[1]$;
	variable="units[0].syn_tr";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[14] {
	name="syn_nr";
	computed=0;
	object_type=LeabraLayer;
	object=$.networks[0].layers[1]$;
	variable="units[0].syn_nr";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[15] {
	name="syn_pr";
	computed=0;
	object_type=LeabraLayer;
	object=$.networks[0].layers[1]$;
	variable="units[0].syn_pr";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[16] {
	name="syn_kre";
	computed=0;
	object_type=LeabraLayer;
	object=$.networks[0].layers[1]$;
	variable="units[0].syn_kre";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[17] {
	name="vm_eq";
	computed=0;
	object_type=LeabraLayer;
	object=$.networks[0].layers[1]$;
	variable="units[0].v_m_eq";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
      };
      network=$.networks[0]$;
      data=$.data.gp[1][3]$;
      rmv_orphan_cols=1;
     };
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="trial_netmon";
      var_type=T_Object;
      object_type=NetMonitor;
      object_val=.programs.gp[0][10].objs[0]$$;
      object_scope=NULL;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="pointer to the NetMonitor object in objs secton of this program that contains configuration for what to record and where to get it";
      init_from=NULL;
     };
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="network to record data from";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="trial_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[1][3]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="data table to record trial-level data to (this program writes new data to this table!)";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="unit_spec_0";
      var_type=T_Object;
      object_type=LeabraUnitSpec;
      object_val=.networks[0].specs[0]$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[2] {
      name="net";
      var_type=T_Real;
      real_val=1;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_trialnetmonSetDa_lmondatanetwork";
      desc="set the network and datatable for the NetMonitor";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_netmon->SetDataNetwork(trial_mon_data, network)";
      result_var=NULL;
      obj=.programs.gp[0][10].objs_vars[0]$$;
      method=NetMonitor::SetDataNetwork;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="trial_mon_data";
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
      };
      meth_sig="void SetDataNetwork(DataTable* dt, Network* net)";
      meth_desc=" set both the data table and network -- convenient for programs -- calls ResetDataTableCols too -- don't call if columns are manually added or this is adding additional rows to a table";
     };
     MethodCall @[1] {
      name="MethodCall_trialnetmonCheckConfigfalse";
      desc="check the configuration of the network monitor -- will emit warnings and errors for misconfigurations";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_netmon->CheckConfig(false)";
      result_var=NULL;
      obj=$.programs.gp[0][10].objs_vars[0]$;
      method=taBase::CheckConfig;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="false";
	};
       };
      };
      meth_sig="bool CheckConfig(bool quiet = false)";
      meth_desc=" check the configuration of this object and all its children (defaults to no confirm of success)";
     };
     MethodCall @[2] {
      name="MethodCall_trialnetmonUpdateMonitorstrue";
      desc="update the monitor items and data schema based on current settings of the NetMonitor object";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_netmon->UpdateMonitors(true)";
      result_var=NULL;
      obj=$.programs.gp[0][10].objs_vars[0]$;
      method=NetMonitor::UpdateMonitors;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_first";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="true";
	};
       };
      };
      meth_sig="void UpdateMonitors(bool reset_first = false)";
      meth_desc=" old name for UpdateDataTable";
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_trialmondataDataUpdatetrue";
      desc="add a new blank row to the data";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_mon_data->DataUpdate(true)";
      result_var=NULL;
      obj=.programs.gp[0][10].vars[0]$$;
      method=taBase::DataUpdate;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="begin";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="true";
	};
       };
      };
      meth_sig="void DataUpdate(bool begin)";
      meth_desc=" bracket data value changes with (nestable) true/false calls;";
     };
     MethodCall @[1] {
      name="MethodCall_trialmondataAddBlankRow";
      desc="add a new blank row to the data";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_mon_data->AddBlankRow()";
      result_var=NULL;
      obj=$.programs.gp[0][10].vars[0]$;
      method=DataTable::AddBlankRow;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="int AddBlankRow()";
      meth_desc=" add a new row to the data table, sets read (source) and write (sink) index to this last row (as in ReadItem or WriteItem), so that subsequent data routines refer to this new row, and returns row ";
     };
     MethodCall @[2] {
      name="MethodCall_trialnetmonGetMonVals";
      desc="get the new monitor data from the network and other sources -- this does the main work";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_netmon->GetMonVals()";
      result_var=NULL;
      obj=$.programs.gp[0][10].objs_vars[0]$;
      method=NetMonitor::GetMonVals;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void GetMonVals()";
      meth_desc=" get all the values and store in current row of data table -- call in program to get new data";
     };
     DataVarProg @[3] {
      name="DataVarProg_DataFromtabletri_netvar2var3var4";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="Data From:  table=trial_mon_data  row_spec=cur_row  set=from  all_matches=false  var_1=net  var_2=?  var_3=?  var_4=? ";
      data_var=$.programs.gp[0][10].vars[0]$;
      row_spec=CUR_ROW;
      row_var=NULL;
      set_data=0;
      all_matches=0;
      quiet=0;
      var_1=.programs.gp[0][10].vars[2]$$;
      var_2=NULL;
      var_3=NULL;
      var_4=NULL;
     };
     AssignExpr @[4] {
      name="AssignExpr_netnetunitspec0gbare";
      desc="net does not contain g_bar.e anymore";
      flags=CAN_REVERT_TO_CODE;
      code_string="net = net * unit_spec_0.g_bar.e";
      result_var=$.programs.gp[0][10].vars[2]$;
      expr {
       expr="net * unit_spec_0.g_bar.e";
      };
     };
     DataVarProg @[5] {
      name="DataVarProg_DataTotabletrial_netvar2var3var4";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="Data To:  table=trial_mon_data  row_spec=cur_row  set=to  all_matches=false  var_1=net  var_2=?  var_3=?  var_4=? ";
      data_var=$.programs.gp[0][10].vars[0]$;
      row_spec=CUR_ROW;
      row_var=NULL;
      set_data=1;
      all_matches=0;
      quiet=0;
      var_1=$.programs.gp[0][10].vars[2]$;
      var_2=NULL;
      var_3=NULL;
      var_4=NULL;
     };
     MethodCall @[6] {
      name="MethodCall_trialmondataWriteClose";
      desc="update views and other things after writing new data to monitor data table";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_mon_data->WriteClose()";
      result_var=NULL;
      obj=$.programs.gp[0][10].vars[0]$;
      method=DataTable::WriteClose;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void WriteClose()";
      meth_desc=" closes up a write operation -- call when done writing data -- performs any post-writing cleanup/closing of files, etc";
     };
     MethodCall @[7] {
      name="MethodCall_trialmondataDataUpdatefalse";
      desc="add a new blank row to the data";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_mon_data->DataUpdate(false)";
      result_var=NULL;
      obj=$.programs.gp[0][10].vars[0]$;
      method=taBase::DataUpdate;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="begin";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="false";
	};
       };
      };
      meth_sig="void DataUpdate(bool begin)";
      meth_desc=" bracket data value changes with (nestable) true/false calls;";
     };
     MethodCall @[8] {
      name="MethodCall_networkDMemShare_tatrialmondata1";
      desc="only functional for dmem projects: synchronizes trial data across processes so that all distributed memory processors have the same trial-level data, despite having run only a subset of them each";
      flags=OFF|CAN_REVERT_TO_CODE;
      code_string="network->DMem_ShareTrialData(trial_mon_data, 1)";
      result_var=NULL;
      obj=.programs.gp[0][10].args[0]$$;
      method=Network::DMem_ShareTrialData;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="trial_mon_data";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="n_rows";
	required=0;
	def_val="1";
	prev_expr=;
	expr {
	 expr="1";
	};
       };
      };
      meth_sig="void DMem_ShareTrialData(DataTable* dt, int n_rows = 1)";
      meth_desc=" share trial data from given datatable across the trial-level dmem communicator (outer loop) -- each processor gets data from all other processors; if called every trial with n_rows = 1, data will be identical to non-dmem; if called at end of epoch with n_rows = -1 data will be grouped by processor but this is more efficient";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
  };
  Program_Group @.gp[1] {
   name="LeabraAll_Test";
   el_typ=Program;
   el_def=0;
   tags="Leabra, Std, All, Test";
   desc="The full set of programs for testing a standard Leabra network (starting with Epoch)";
   debug_mode=0;
   Program @[0] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[1][0].doc$$: };
    };
    name="LeabraEpochTest";
    short_nm="EpcTest";
    tags="Leabra, Std, Test";
    desc="sets testing flag, iterates over all of the items in a data table and calls LeabraTestTrial process on them";
    version {
     major=8;
     minor=0;
     step=0;
    };
    author="Randall C. O'Reilly";
    email="emergent-users@grey.colorado.edu";
    flags=0;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="network to operate on";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.data.gp[0][1]$$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED;
      reference=0;
      desc="table of patterns to present to the network, one row at a time";
      init_from=$.programs.gp[0][1]$;
     };
     ProgVar @[1] {
      name="data_loop_order";
      var_type=T_HardEnum;
      int_val=0;
      object_scope=NULL;
      hard_enum_type=DataLoop::Order;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="controls the order in which events (rows of the input data datatable) are presented to the network
(SEQUENTIAL, PERMUTED, RANDOM)";
      init_from=NULL;
     };
     ProgVar @[2] {
      name="trial";
      var_type=T_Int;
      int_val=0;
      object_scope=NULL;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="current trial (event) within the epoch -- increments automatically";
      init_from=NULL;
     };
     ProgVar @[3] {
      name="trial_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[1][0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="trial-level output data -- we reset it every epoch by default, so it just contains last epoch of data";
      init_from=NULL;
     };
     ProgVar @[4] {
      name="epoch_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=$.networks[0].epoch_time$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="timer to record time required to perform one epoch of processing (object is on network -- this is a pointer to it)";
      init_from=NULL;
     };
     ProgVar @[5] {
      name="data_loop_index";
      var_type=T_Int;
      int_val=4;
      object_scope=NULL;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="index counter for the looping over items in the input_data datatable (not always the same as trial counter, depending on distributed memory computation)";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     NetCounterInit @[0] {
      name="NetCounterInit_NetCounterInittrial";
      desc="initialize trial counter (local variable and in the network)";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Counter Init: trial";
      network_var=.programs.gp[1][0].args[0]$$;
      local_ctr_var=.programs.gp[1][0].vars[2]$$;
      counter=Network::trial;
      update_after=0;
     };
     AssignExpr @[1] {
      name="AssignExpr_epochtimernetworkepochtime";
      desc="get pointer to epoch timer object on network";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer = network.epoch_time";
      result_var=.programs.gp[1][0].vars[4]$$;
      expr {
       expr="network.epoch_time";
      };
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     NetCounterInit @[0] {
      name="NetCounterInit_NetCounterInittrial";
      desc="initialize trial counter (local variable and in the network)";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Counter Init: trial";
      network_var=$.programs.gp[1][0].args[0]$;
      local_ctr_var=$.programs.gp[1][0].vars[2]$;
      counter=Network::trial;
      update_after=0;
     };
     MemberAssign @[1] {
      name="MemberAssign_networktrainmodeNetworkTEST";
      desc="set to testing mode";
      flags=NEW_EL|CAN_REVERT_TO_CODE;
      code_string="network.train_mode = Network::TEST";
      obj=$.programs.gp[1][0].args[0]$;
      path="train_mode";
      expr {
       expr="Network::TEST";
      };
      update_after=0;
     };
     MemberAssign @[2] {
      name="MemberAssign_networklayersOut_typeLayerOUTPUT";
      desc=;
      flags=NON_STD|CAN_REVERT_TO_CODE;
      code_string="network.layers.Output.layer_type = Layer::OUTPUT";
      obj=$.programs.gp[1][0].args[0]$;
      path="layers.Output.layer_type";
      expr {
       expr="Layer::OUTPUT";
      };
      update_after=0;
     };
     AssignExpr @[3] {
      name="AssignExpr_epochtimernetworkepochtime";
      desc="get pointer to epoch timer object on network";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer = network.epoch_time";
      result_var=$.programs.gp[1][0].vars[4]$;
      expr {
       expr="network.epoch_time";
      };
     };
     MethodCall @[4] {
      name="MethodCall_epochtimerStartTimertrue";
      desc="start the epoch timer to record computation time per epoch";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer->StartTimer(true)";
      result_var=NULL;
      obj=$.programs.gp[1][0].vars[4]$;
      method=TimeUsed::StartTimer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_used";
	required=0;
	def_val="true";
	prev_expr=;
	expr {
	 expr="true";
	};
       };
      };
      meth_sig="void StartTimer(bool reset_used = true)";
      meth_desc=" record the current time as the starting time, and optionally reset the time used information";
     };
     MethodCall @[5] {
      name="MethodCall_trialmondataResetData";
      desc="reset trial-level monitor data every epoch, so it reflects only the most recent epoch's worth of data (turn flags OFF to accumulate trial data across entire training run)";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_mon_data->ResetData()";
      result_var=NULL;
      obj=.programs.gp[1][0].vars[3]$$;
      method=DataTable::ResetData;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void ResetData()";
      meth_desc=" deletes all the data (rows), but keeps the column structure -- this cannot be undone!";
     };
     NetDataLoop @[6] {
      name="NetDataLoop_NetDataLoopSEQUE_ardatalooporder";
      desc="iterates over the events/rows of input_data, according to data_loop_order variable";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Data Loop (SEQUENTIAL):  table=input_data  index=data_loop_index  order_var=data_loop_order ";
      loop_code {
       name="loop_code";
       el_typ=ProgCode;
       el_def=0;
       ProgramCall @[0] {
	name="ProgramCall_LeabraTrialTestnetworkinputdata";
	desc="run the trial program, passing network and input_data";
	flags=CAN_REVERT_TO_CODE;
	code_string="LeabraTrialTest(network, input_data)";
	prog_args {
	 name="prog_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="network";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="input_data";
	  };
	 };
	};
	target=.programs.gp[1][1]$$;
	targ_ld_init="*LeabraTrial*";
       };
      };
      data_var=.programs.gp[1][0].vars[0]$$;
      index_var=.programs.gp[1][0].vars[5]$$;
      order_var=.programs.gp[1][0].vars[1]$$;
      order=SEQUENTIAL;
      update_after=0;
      dmem_nprocs=1;
      dmem_this_proc=0;
      grouped=0;
      group_col 9 0="Group";
      group_index_var=NULL;
      group_order_var=NULL;
      group_order=PERMUTED;
      group_idx_list{       };
     };
     If @[7] {
      name="If_ifnetworkwtupdateNetworkBATCH";
      desc="if full batch mode, update only at end of epoch";
      flags=CAN_REVERT_TO_CODE;
      code_string="if (network.wt_update == Network::BATCH)";
      cond {
       expr="network.wt_update == Network::BATCH";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	name="MethodCall_networkComputeWeights";
	desc="final update of weights based on accumulated changes";
	flags=CAN_REVERT_TO_CODE;
	code_string="network->Compute_Weights()";
	result_var=NULL;
	obj=$.programs.gp[1][0].args[0]$;
	method=Network::Compute_Weights;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	};
	meth_sig="void Compute_Weights()";
	meth_desc=" update weights for whole net: calls DMem_SumDWts before doing update if in dmem mode";
       };
      };
     };
     MethodCall @[8] {
      name="MethodCall_networkComputeEpochStats";
      desc="network accumulates some core statistics over the epoch -- this finalizes that process and computes summary stats";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->Compute_EpochStats()";
      result_var=NULL;
      obj=$.programs.gp[1][0].args[0]$;
      method=LeabraNetwork::Compute_EpochStats;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Compute_EpochStats()";
      meth_desc=" compute epoch-level statistics; calls DMem_ComputeAggs (if dmem) and EpochSSE -- specific algos may add more compute epoch-level statistics, including SSE, AvgExtRew and AvgCycles";
     };
     MethodCall @[9] {
      name="MethodCall_epochtimerEndTimer";
      desc="done with the computation in the epoch -- record time it took";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer->EndTimer()";
      result_var=NULL;
      obj=$.programs.gp[1][0].vars[4]$;
      method=TimeUsed::EndTimer;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void EndTimer()";
      meth_desc=" record the current time as the ending time, and compute difference as the time used";
     };
     ProgramCall @[10] {
      name="ProgramCall_LeabraEpochMonitorTestnetwork";
      desc="run program that records data from network and possibly other sources about the epoch";
      flags=CAN_REVERT_TO_CODE;
      code_string="LeabraEpochMonitorTest(network)";
      prog_args {
       name="prog_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=Network;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
      };
      target=.programs.gp[1][6]$$;
      targ_ld_init="*LeabraEpochMonitor*";
     };
     MemberAssign @[11] {
      name="MemberAssign_networklayersOut_typeLayerTARGET";
      desc=;
      flags=NON_STD|CAN_REVERT_TO_CODE;
      code_string="network.layers.Output.layer_type = Layer::TARGET";
      obj=$.programs.gp[1][0].args[0]$;
      path="layers.Output.layer_type";
      expr {
       expr="Layer::TARGET";
      };
      update_after=0;
     };
     MemberAssign @[12] {
      name="MemberAssign_networktrainmodeNetworkTRAIN";
      desc="set back to training mode";
      flags=NEW_EL|CAN_REVERT_TO_CODE;
      code_string="network.train_mode = Network::TRAIN";
      obj=$.programs.gp[1][0].args[0]$;
      path="train_mode";
      expr {
       expr="Network::TRAIN";
      };
      update_after=0;
     };
    };
    step_prog=$.programs.gp[1][1]$;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=1;
     wiki="emergent";
     url="LeabraEpoch";
     full_url="https://grey.colorado.edu/emergent/index.php/LeabraEpoch";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[1] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[1][1].doc$$: };
    };
    name="LeabraTrialTest";
    short_nm="TrlTst";
    tags="Leabra, Std";
    desc="Leabra processing of a single input/output event or external information, over a single alpha frequency cycle (100 msec / 10 Hz) -- iterates over gamma-frequency (25 msec / 40 Hz) quarter-trials";
    version {
     major=8;
     minor=0;
     step=0;
    };
    author="Randall C. O'Reilly";
    email="emergent-users@grey.colorado.edu";
    flags=0;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="network to operate on -- typically set by higher-level calling programs";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[0][1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="datatable containing training input/output patterns";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=0;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="determines whether to update any network view displays after trial is completed";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars1vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (1 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="qtr";
	var_type=T_Int;
	int_val=0;
	object_scope=NULL;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
     };
     If @[1] {
      name="If_ifnetworkCompute_stnetworktrial1";
      desc="test if it is time to update the weight values from delta weights (dWt) computed over trials";
      flags=CAN_REVERT_TO_CODE;
      code_string="if (network.Compute_Weights_Test(network.trial+1))";
      cond {
       expr="network.Compute_Weights_Test(network.trial+1)";
      };
      true_code {
       name="true_code";
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	name="MethodCall_networkComputeWeights";
	desc="update weights -- do this at start instead of end, so that dwt is valid";
	flags=CAN_REVERT_TO_CODE;
	code_string="network->Compute_Weights()";
	result_var=NULL;
	obj=.programs.gp[1][1].args[0]$$;
	method=Network::Compute_Weights;
	meth_args {
	 name="meth_args";
	 el_typ=ProgArg;
	 el_def=0;
	};
	meth_sig="void Compute_Weights()";
	meth_desc=" update weights for whole net: calls DMem_SumDWts before doing update if in dmem mode";
       };
      };
     };
     MethodCall @[2] {
      name="MethodCall_networkTrialInit";
      desc="initializes various counters at start of trial";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->Trial_Init()";
      result_var=NULL;
      obj=$.programs.gp[1][1].args[0]$;
      method=LeabraNetwork::Trial_Init;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Trial_Init()";
      meth_desc=" initialize at start of trial (init specs, Decay state)";
     };
     Comment @[3] {
      name="Comment_notecanapplyinpu_Quarterasneeded";
      desc="== note: can apply inputs once at start of trial, or at finer grain within LeabraQuarter, as needed";
      flags=CAN_REVERT_TO_CODE;
      code_string="// == note: can apply inputs once at start of trial, or at finer grain within LeabraQuarter, as needed";
     };
     MethodCall @[4] {
      name="MethodCall_networkInitInputData";
      desc="resets input data, before getting new external inputs data from apply inputs call";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->Init_InputData()";
      result_var=NULL;
      obj=$.programs.gp[1][1].args[0]$;
      method=Network::Init_InputData;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Init_InputData()";
      meth_desc=" Initializes external and target inputs";
     };
     ProgramCall @[5] {
      name="ProgramCall_ApplyInputsTestnetworkinputdata";
      desc="apply external input activations from the input_data table to the network
this program can be extended to do arbitrary things to generate data and apply it to network layers";
      flags=CAN_REVERT_TO_CODE;
      code_string="ApplyInputsTest(network, input_data)";
      prog_args {
       name="prog_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=Network;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	prev_expr="network";
	expr {
	 expr="network";
	};
       };
       ProgArg @[1] {
	arg_type=DataTable;
	type="DataTable*";
	name="input_data";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="input_data";
	};
       };
      };
      target=.programs.gp[1][4]$$;
      targ_ld_init="*ApplyInputs*";
     };
     ForLoop @[6] {
      name="ForLoop_forqtr0qtr4qtr";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="for (qtr = 0; qtr < 4; qtr++)";
      loop_code {
       name="loop_code";
       el_typ=ProgCode;
       el_def=0;
       ProgramCall @[0] {
	name="ProgramCall_LeabraQuarterTes_etworkinputdata";
	desc="run the quarter program (which iterates over cyles of network activation updating) for each quarter";
	flags=CAN_REVERT_TO_CODE;
	code_string="LeabraQuarterTest(network, input_data)";
	prog_args {
	 name="prog_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="network";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="input_data";
	  };
	 };
	};
	target=.programs.gp[1][2]$$;
	targ_ld_init="*LeabraQuarter*";
       };
      };
      init {
       expr="qtr = 0";
      };
      test {
       expr="qtr < 4";
      };
      iter {
       expr="qtr++";
      };
     };
     MethodCall @[7] {
      name="MethodCall_networkTrialFinal";
      desc="after the trial is over, do final computations";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->Trial_Final()";
      result_var=NULL;
      obj=$.programs.gp[1][1].args[0]$;
      method=LeabraNetwork::Trial_Final;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Trial_Final()";
      meth_desc=" do final processing after trial: Compute_AbsRelNetin";
     };
     ProgramCall @[8] {
      name="ProgramCall_LeabraTrialMonitorTestnetwork";
      desc="records data about the trial-level processing to a datatable for graphing/processing";
      flags=CAN_REVERT_TO_CODE;
      code_string="LeabraTrialMonitorTest(network)";
      prog_args {
       name="prog_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=Network;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
      };
      target=.programs.gp[1][5]$$;
      targ_ld_init="*LeabraTrialMonitor*";
     };
     NetUpdateView @[9] {
      name="NetUpdateView_NetUpdateView";
      desc="update the network view(s) (only if update_net_view is true)";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Update View";
      network_var=$.programs.gp[1][1].args[0]$;
      update_var=.programs.gp[1][1].vars[0]$$;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=1;
     wiki="emergent";
     url="LeabraTrial";
     full_url="https://grey.colorado.edu/emergent/index.php/LeabraTrial";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[2] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[1][2].doc$$: };
    };
    name="LeabraQuarterTest";
    short_nm="QrtTst";
    tags="Leabra, Std";
    desc="iterates over cycles of activation updating for a gamma-frequency (25 msec / 40 Hz) quarter of an alpha frequency (100 msec / 10 Hz) trial";
    version {
     major=8;
     minor=0;
     step=0;
    };
    author="Randall C. O'Reilly";
    email="emergent-users@grey.colorado.edu";
    flags=0;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[0][1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="cycle";
      var_type=T_Int;
      int_val=0;
      object_scope=NULL;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="current cycle of settling (local loop counter)";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=1;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="if true, will update network views at end of settling";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     NetCounterInit @[0] {
      name="NetCounterInit_NetCounterInitcycle";
      desc="initialize local cycle counter and corresponding counter on network";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Counter Init: cycle";
      network_var=.programs.gp[1][2].args[0]$$;
      local_ctr_var=.programs.gp[1][2].vars[0]$$;
      counter=Network::cycle;
      update_after=0;
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     LocalVars @[0] {
      name="LocalVars_LocalVars2vars";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="LocalVars (2 vars)";
      local_vars {
       name="local_vars";
       el_typ=ProgVar;
       el_def=0;
       ProgVar @[0] {
	name="cycle_max";
	var_type=T_Int;
	int_val=0;
	object_scope=NULL;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
       ProgVar @[1] {
	name="cyc";
	var_type=T_Int;
	int_val=0;
	object_scope=NULL;
	flags=LOCAL_VAR|USED|EDIT_VAL;
	reference=0;
	desc=;
	init_from=NULL;
       };
      };
     };
     Comment @[1] {
      name="Comment_notecanapplyinpu_Quarterasneeded";
      desc="== note: can apply inputs once at start of trial, or at finer grain within LeabraQuarter, as needed";
      flags=CAN_REVERT_TO_CODE;
      code_string="// == note: can apply inputs once at start of trial, or at finer grain within LeabraQuarter, as needed";
     };
     MethodCall @[2] {
      name="MethodCall_networkInitInputData";
      desc="resets input data, before getting new external inputs data from apply inputs call";
      flags=OFF|CAN_REVERT_TO_CODE;
      code_string="network->Init_InputData()";
      result_var=NULL;
      obj=$.programs.gp[1][2].args[0]$;
      method=Network::Init_InputData;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Init_InputData()";
      meth_desc=" Initializes external and target inputs";
     };
     ProgramCall @[3] {
      name="ProgramCall_programname";
      desc="apply external input activations from the input_data table to the network
this program can be extended to do arbitrary things to generate data and apply it to network layers";
      flags=OFF|CAN_REVERT_TO_CODE;
      code_string="program_name()";
      prog_args {
       name="prog_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=LeabraNetwork;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	prev_expr="network";
	expr {
	 expr="network";
	};
       };
       ProgArg @[1] {
	arg_type=bool;
	type="bool";
	name="grab_camera_img";
	required=1;
	def_val=;
	prev_expr="input_data";
	expr {
	 expr=;
	};
       };
      };
      target=NULL;
      targ_ld_init="*ApplyInputs*";
     };
     MethodCall @[4] {
      name="MethodCall_networkQuarterInit";
      desc="initializes various counters at start of settling";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->Quarter_Init()";
      result_var=NULL;
      obj=$.programs.gp[1][2].args[0]$;
      method=LeabraNetwork::Quarter_Init;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Quarter_Init()";
      meth_desc=" initialize network for quarter-level processing (hard clamp, netscale)";
     };
     MethodCall @[5] {
      name="MethodCall_cyclemaxnetworkCycleRunMax";
      desc=;
      flags=CAN_REVERT_TO_CODE;
      code_string="cycle_max = network->CycleRunMax()";
      result_var=.programs.gp[1][2].prog_code[0].local_vars[0]$$;
      obj=$.programs.gp[1][2].args[0]$;
      method=LeabraNetwork::CycleRunMax;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="int CycleRunMax()";
      meth_desc=" max loop counter for running cycles in a gamma quarter of processing, taking into account the fact that threading can run multiple cycles per Cycle_Run call if quarter flag is set";
     };
     ForLoop @[6] {
      name="ForLoop_forcyc0cyccyclemaxcyc";
      desc="// the main loop over cycles of updating";
      flags=CAN_REVERT_TO_CODE;
      code_string="for (cyc=0; cyc<cycle_max; cyc++)";
      loop_code {
       name="loop_code";
       el_typ=ProgCode;
       el_def=0;
       ProgramCall @[0] {
	name="ProgramCall_LeabraCycleTestnetwork";
	desc="run the cycle program -- can run multiple cycles at a time due to threading";
	flags=CAN_REVERT_TO_CODE;
	code_string="LeabraCycleTest(network)";
	prog_args {
	 name="prog_args";
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  prev_expr=;
	  expr {
	   expr="network";
	  };
	 };
	};
	target=.programs.gp[1][3]$$;
	targ_ld_init="*LeabraCycle*";
       };
       AssignExpr @[1] {
	name="AssignExpr_cyclenetworkcycle";
	desc="grab the updated cycle count";
	flags=CAN_REVERT_TO_CODE;
	code_string="cycle = network.cycle";
	result_var=$.programs.gp[1][2].vars[0]$;
	expr {
	 expr="network.cycle";
	};
       };
      };
      init {
       expr="cyc=0";
      };
      test {
       expr="cyc<cycle_max";
      };
      iter {
       expr="cyc++";
      };
     };
     MethodCall @[7] {
      name="MethodCall_networkQuarterFinal";
      desc="perform final operations at end of settling (storing final activations, etc)";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->Quarter_Final()";
      result_var=NULL;
      obj=$.programs.gp[1][2].args[0]$;
      method=LeabraNetwork::Quarter_Final;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Quarter_Final()";
      meth_desc=" do final processing after each quarter: ";
     };
     MethodCall @[8] {
      name="MethodCall_networkComputePhaseStats";
      desc="compute appropriate stats for each phase (MinusStats, PlusStats)";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->Compute_PhaseStats()";
      result_var=NULL;
      obj=$.programs.gp[1][2].args[0]$;
      method=LeabraNetwork::Compute_PhaseStats;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Compute_PhaseStats()";
      meth_desc=" compute MinusStats at the end of the minus phase, and PlusStats at the end of the plus phase -- this is preferred over the previous implementation of calling TrialStats only at the end of the minus phase, which required targets to be present in the minus phase, which is not always the case";
     };
     NetUpdateView @[9] {
      name="NetUpdateView_NetUpdateView";
      desc="update network views, if update_net_view == true";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Update View";
      network_var=$.programs.gp[1][2].args[0]$;
      update_var=.programs.gp[1][2].vars[1]$$;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=1;
     wiki="emergent";
     url="LeabraQuarter";
     full_url="https://grey.colorado.edu/emergent/index.php/LeabraQuarter";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[3] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[1][3].doc$$: };
    };
    name="LeabraCycleTest";
    short_nm="CycTest";
    tags="Leabra, Std";
    desc="runs one cycle of leabra processing (updating net inputs and activations)";
    version {
     major=8;
     minor=0;
     step=0;
    };
    author="Randall C. O'Reilly";
    email="emergent-users@grey.colorado.edu";
    flags=0;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=0;
      object_scope=NULL;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="determines whether network views will be updated on a cycle-by-cycle basis (slow, but often quite useful for seeing how processing is proceeding)";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_networkCycleRun";
      desc="this does all the standard leabra processing for one cycle of activation updating";
      flags=CAN_REVERT_TO_CODE|BREAKPOINT_ENABLED;
      code_string="network->Cycle_Run()";
      result_var=NULL;
      obj=.programs.gp[1][3].args[0]$$;
      method=LeabraNetwork::Cycle_Run;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void Cycle_Run()";
      meth_desc=" compute cycle(s) of updating: netinput, inhibition, activations -- multiple cycles can be run depending on lthreads.n_cycles setting and whether multiple threads are actually being used -- see lthreads.n_threads_act";
     };
     NetUpdateView @[1] {
      name="NetUpdateView_NetUpdateView";
      desc="update network views if update_net_view == true";
      flags=CAN_REVERT_TO_CODE;
      code_string="Net Update View";
      network_var=$.programs.gp[1][3].args[0]$;
      update_var=.programs.gp[1][3].vars[0]$$;
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=1;
     wiki="emergent";
     url="LeabraCycle";
     full_url="https://grey.colorado.edu/emergent/index.php/LeabraCycle";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[4] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[1][4].doc$$: };
    };
    name="ApplyInputsTest";
    short_nm="InTest";
    tags="Network, InputData, Apply";
    desc="apply the current input data to the network as external input and target values";
    version {
     major=8;
     minor=0;
     step=0;
    };
    author="Randall C. O'Reilly";
    email="emergent-users@grey.colorado.edu";
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=LayerWriter;
     el_def=0;
     LayerWriter @[0] {
      name="LayerWriter_0";
      data=$.data.gp[0][1]$;
      network=$.networks[0]$;
      layer_data {
       name="layer_data";
       el_typ=LayerWriterEl;
       el_def=0;
       LayerWriterEl @[0] {
	col_name="Output";
	net_target=LAYER;
	layer_name="Output";
	offset {x=0: y=0: };
	use_layer_type=1;
	quiet=0;
	na_by_range=0;
	ext_flags=0;
	noise {name="noise": type=NONE: mean=0: var=0.5: par=1: };
       };
       LayerWriterEl @[1] {
	col_name="Name";
	net_target=TRIAL_NAME;
	layer_name="Name";
	offset {x=0: y=0: };
	use_layer_type=1;
	quiet=0;
	na_by_range=0;
	ext_flags=0;
	noise {name="noise": type=NONE: mean=0: var=0.5: par=1: };
       };
       LayerWriterEl @[2] {
	col_name="Input";
	net_target=LAYER;
	layer_name="Input";
	offset {x=0: y=0: };
	use_layer_type=1;
	quiet=0;
	na_by_range=0;
	ext_flags=0;
	noise {name="noise": type=NONE: mean=0: var=0.5: par=1: };
       };
      };
     };
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="network to apply inputs to -- typically set by calling program";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[0][1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="input datatable containing input/output patterns";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="LayerWriter_0";
      var_type=T_Object;
      object_type=LayerWriter;
      object_val=.programs.gp[1][4].objs[0]$$;
      object_scope=NULL;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="this is a pointer to the LayerWriter object in objs -- edit that object to determine how information is presented to the network";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_LayerWriter0SetD_nputdatanetwork";
      desc="sets the datatable and network for the layer writer, so it knows what to write to";
      flags=CAN_REVERT_TO_CODE;
      code_string="LayerWriter_0->SetDataNetwork(input_data, network)";
      result_var=NULL;
      obj=.programs.gp[1][4].vars[0]$$;
      method=LayerWriter::SetDataNetwork;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="db";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="input_data";
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
      };
      meth_sig="void SetDataNetwork(DataTable* db, Network* net)";
      meth_desc=" set the data table and network pointers -- convenience function for programs ";
     };
     MethodCall @[1] {
      name="MethodCall_LayerWriter0AutoConfigtrue";
      desc="configure to fit the network and input data -- this may cause spurious warning messages and problems in some cases so just turn it OFF if necessary";
      flags=CAN_REVERT_TO_CODE;
      code_string="LayerWriter_0->AutoConfig(true)";
      result_var=NULL;
      obj=$.programs.gp[1][4].vars[0]$;
      method=LayerWriter::AutoConfig;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="remove_unused";
	required=0;
	def_val="true";
	prev_expr="true";
	expr {
	 expr="true";
	};
       };
      };
      meth_sig="void AutoConfig(bool remove_unused = true)";
      meth_desc=" do a 'best guess' configuration of items by matching up like-named data Channels and network Layers -- if remove_unused is true, then layer writer elements that existed previously but were not found in input data and network are removed";
     };
     MethodCall @[2] {
      name="MethodCall_LayerWriter0CheckConfigfalse";
      desc="check the configuration of the layer writer -- will emit warnings and errors for missing or misconfigured items";
      flags=CAN_REVERT_TO_CODE;
      code_string="LayerWriter_0->CheckConfig(false)";
      result_var=NULL;
      obj=$.programs.gp[1][4].vars[0]$;
      method=taList_impl::CheckConfig;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="false";
	};
       };
      };
      meth_sig="bool CheckConfig(bool quiet = false)";
      meth_desc=" check the configuration of this object and all its children (defaults to no confirm of success)";
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_LayerWriter0SetD_nputdatanetwork";
      desc="sets the datatable and network for the layer writer, so it knows what to write to";
      flags=CAN_REVERT_TO_CODE;
      code_string="LayerWriter_0->SetDataNetwork(input_data, network)";
      result_var=NULL;
      obj=$.programs.gp[1][4].vars[0]$;
      method=LayerWriter::SetDataNetwork;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="db";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="input_data";
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
      };
      meth_sig="void SetDataNetwork(DataTable* db, Network* net)";
      meth_desc=" set the data table and network pointers -- convenience function for programs ";
     };
     MethodCall @[1] {
      name="MethodCall_LayerWriter0ApplyInputData";
      desc="apply inputs to the network!  layer writer has all the key specs";
      flags=CAN_REVERT_TO_CODE;
      code_string="LayerWriter_0->ApplyInputData()";
      result_var=NULL;
      obj=$.programs.gp[1][4].vars[0]$;
      method=LayerWriter::ApplyInputData;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="bool ApplyInputData()";
      meth_desc=" apply data to the layers, using the network's current context settings (TEST,TRAIN,etc) -- returns success";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=1;
     wiki="emergent";
     url="ApplyInputs";
     full_url="https://grey.colorado.edu/emergent/index.php/ApplyInputs";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[5] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[1][5].doc$$: };
    };
    name="LeabraTrialMonitorTest";
    short_nm="TrlMonTst";
    tags="Leabra, Std, Monitor";
    desc="monitor trial-level data from the network (and potentially other sources) -- stores results in datatable (TrialOutputData typically) that can be used for graph/grid views and further analysis ";
    version {
     major=8;
     minor=0;
     step=0;
    };
    author="Randall C. O'Reilly";
    email="emergent-users@grey.colorado.edu";
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=NetMonitor;
     el_def=0;
     NetMonitor @[0] {
      name="trial_netmon";
      items {
       name="items";
       el_typ=NetMonItem;
       el_def=0;
       NetMonItem @[0] {
	name="trial_name";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="trial_name";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[1] {
	name="sse";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="sse";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[2] {
	name="act_m";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="act_m";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=INPUT_LAYERS|HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0.5: lw=0: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
      };
      network=$.networks[0]$;
      data=$.data.gp[1][0]$;
      rmv_orphan_cols=1;
     };
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="network to record data from";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="trial_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[1][0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="data table to record trial-level data to (this program writes new data to this table!)";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="trial_netmon";
      var_type=T_Object;
      object_type=NetMonitor;
      object_val=.programs.gp[1][5].objs[0]$$;
      object_scope=NULL;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="pointer to the NetMonitor object in objs secton of this program that contains configuration for what to record and where to get it";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_trialnetmonSetDa_lmondatanetwork";
      desc="set the network and datatable for the NetMonitor";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_netmon->SetDataNetwork(trial_mon_data, network)";
      result_var=NULL;
      obj=.programs.gp[1][5].vars[1]$$;
      method=NetMonitor::SetDataNetwork;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="trial_mon_data";
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
      };
      meth_sig="void SetDataNetwork(DataTable* dt, Network* net)";
      meth_desc=" set both the data table and network -- convenient for programs -- calls ResetDataTableCols too -- don't call if columns are manually added or this is adding additional rows to a table";
     };
     MethodCall @[1] {
      name="MethodCall_trialnetmonCheckConfigfalse";
      desc="check the configuration of the network monitor -- will emit warnings and errors for misconfigurations";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_netmon->CheckConfig(false)";
      result_var=NULL;
      obj=$.programs.gp[1][5].vars[1]$;
      method=taBase::CheckConfig;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="false";
	};
       };
      };
      meth_sig="bool CheckConfig(bool quiet = false)";
      meth_desc=" check the configuration of this object and all its children (defaults to no confirm of success)";
     };
     MethodCall @[2] {
      name="MethodCall_trialnetmonUpdateMonitorstrue";
      desc="update the monitor items and data schema based on current settings of the NetMonitor object";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_netmon->UpdateMonitors(true)";
      result_var=NULL;
      obj=$.programs.gp[1][5].vars[1]$;
      method=NetMonitor::UpdateMonitors;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_first";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="true";
	};
       };
      };
      meth_sig="void UpdateMonitors(bool reset_first = false)";
      meth_desc=" old name for UpdateDataTable";
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_trialmondataAddBlankRow";
      desc="add a new blank row to the data";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_mon_data->AddBlankRow()";
      result_var=NULL;
      obj=.programs.gp[1][5].vars[0]$$;
      method=DataTable::AddBlankRow;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="int AddBlankRow()";
      meth_desc=" add a new row to the data table, sets read (source) and write (sink) index to this last row (as in ReadItem or WriteItem), so that subsequent data routines refer to this new row, and returns row ";
     };
     MethodCall @[1] {
      name="MethodCall_trialnetmonGetMonVals";
      desc="get the new monitor data from the network and other sources -- this does the main work";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_netmon->GetMonVals()";
      result_var=NULL;
      obj=$.programs.gp[1][5].vars[1]$;
      method=NetMonitor::GetMonVals;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void GetMonVals()";
      meth_desc=" get all the values and store in current row of data table -- call in program to get new data";
     };
     MethodCall @[2] {
      name="MethodCall_trialmondataWriteClose";
      desc="update views and other things after writing new data to monitor data table";
      flags=CAN_REVERT_TO_CODE;
      code_string="trial_mon_data->WriteClose()";
      result_var=NULL;
      obj=$.programs.gp[1][5].vars[0]$;
      method=DataTable::WriteClose;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void WriteClose()";
      meth_desc=" closes up a write operation -- call when done writing data -- performs any post-writing cleanup/closing of files, etc";
     };
     MethodCall @[3] {
      name="MethodCall_networkDMemShare_tatrialmondata1";
      desc="only functional for dmem projects: synchronizes trial data across processes so that all distributed memory processors have the same trial-level data, despite having run only a subset of them each";
      flags=CAN_REVERT_TO_CODE;
      code_string="network->DMem_ShareTrialData(trial_mon_data, 1)";
      result_var=NULL;
      obj=.programs.gp[1][5].args[0]$$;
      method=Network::DMem_ShareTrialData;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="trial_mon_data";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="n_rows";
	required=0;
	def_val="1";
	prev_expr=;
	expr {
	 expr="1";
	};
       };
      };
      meth_sig="void DMem_ShareTrialData(DataTable* dt, int n_rows = 1)";
      meth_desc=" share trial data from given datatable across the trial-level dmem communicator (outer loop) -- each processor gets data from all other processors; if called every trial with n_rows = 1, data will be identical to non-dmem; if called at end of epoch with n_rows = -1 data will be grouped by processor but this is more efficient";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
   Program @[6] {
    UserDataItem_List @*(.user_data_) {
     name=;
     el_typ=UserData_DocLink;
     el_def=0;
     UserData_DocLink @[0] {name="DocLink": doc=.programs.gp[1][6].doc$$: };
    };
    name="LeabraEpochMonitorTest";
    short_nm="EpcMonTst";
    tags="Leabra, Std, Monitor";
    desc="monitor epoch-level data from the network to a datatable (EpochOutputData typically) for use in graphing and viewing and further analysis";
    version {
     major=8;
     minor=0;
     step=0;
    };
    author="Randall C. O'Reilly";
    email="emergent-users@grey.colorado.edu";
    flags=NO_STOP_STEP;
    stop_step_cond {
     expr=;
    };
    objs {
     name="objs";
     el_typ=NetMonitor;
     el_def=0;
     NetMonitor @[0] {
      name="epoch_netmon";
      items {
       name="items";
       el_typ=NetMonItem;
       el_def=0;
       NetMonItem @[0] {
	name="batch";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="batch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[1] {
	name="epoch";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="epoch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[2] {
	name="avg_sse";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="avg_sse";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[3] {
	name="cnt_err";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="cnt_err";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[4] {
	name="avg_ext_rew";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="avg_ext_rew";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[5] {
	name="avg_cycles";
	computed=0;
	object_type=LeabraNetwork;
	object=$.networks[0]$;
	variable="avg_cycles";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[6] {
	name="epoch_time_tot";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[7] {
	name="epoch_time_usr";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	options=HIDDEN_LAYERS|OUTPUT_LAYERS|TARGET_LAYERS;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: val_string="": use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
      };
      network=$.networks[0]$;
      data=$.data.gp[1][1]$;
      rmv_orphan_cols=1;
     };
    };
    objs_vars {
     name="objs_vars";
     el_typ=ProgVar;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$.networks[0]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL|PGRM_ARG;
      reference=0;
      desc="network to get data from";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="epoch_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.data.gp[1][1]$;
      object_scope=NULL;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="data table to write the epoch data to";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="epoch_netmon";
      var_type=T_Object;
      object_type=NetMonitor;
      object_val=.programs.gp[1][6].objs[0]$$;
      object_scope=NULL;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="network monitor object that contains full specs for what to record and where to get it";
      init_from=NULL;
     };
     ProgVar @[2] {
      name="epoch_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=$.networks[0].epoch_time$;
      object_scope=NULL;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="pointer to the network's epoch-level timer, to record how long it took to process an epoch";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     AssignExpr @[0] {
      name="AssignExpr_epochtimernetworkepochtime";
      desc="get the epoch timer from current network";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer = network.epoch_time";
      result_var=.programs.gp[1][6].vars[2]$$;
      expr {
       expr="network.epoch_time";
      };
     };
     MethodCall @[1] {
      name="MethodCall_epochnetmonSetDa_hmondatanetwork";
      desc="set data and network on NetMonitor object";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_netmon->SetDataNetwork(epoch_mon_data, network)";
      result_var=NULL;
      obj=.programs.gp[1][6].vars[1]$$;
      method=NetMonitor::SetDataNetwork;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="epoch_mon_data";
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="network";
	};
       };
      };
      meth_sig="void SetDataNetwork(DataTable* dt, Network* net)";
      meth_desc=" set both the data table and network -- convenient for programs -- calls ResetDataTableCols too -- don't call if columns are manually added or this is adding additional rows to a table";
     };
     MethodCall @[2] {
      name="MethodCall_epochnetmonCheckConfigfalse";
      desc="check configuration and emit errors/warnings for problems";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_netmon->CheckConfig(false)";
      result_var=NULL;
      obj=$.programs.gp[1][6].vars[1]$;
      method=taBase::CheckConfig;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="false";
	};
       };
      };
      meth_sig="bool CheckConfig(bool quiet = false)";
      meth_desc=" check the configuration of this object and all its children (defaults to no confirm of success)";
     };
     MethodCall @[3] {
      name="MethodCall_epochnetmonUpdateMonitorstrue";
      desc="update the monitor items and data schema based on current settings of NetMonitor";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_netmon->UpdateMonitors(true)";
      result_var=NULL;
      obj=$.programs.gp[1][6].vars[1]$;
      method=NetMonitor::UpdateMonitors;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_first";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr="true";
	};
       };
      };
      meth_sig="void UpdateMonitors(bool reset_first = false)";
      meth_desc=" old name for UpdateDataTable";
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      name="MethodCall_epochmondataAddBlankRow";
      desc="add a new blank row to the data";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_mon_data->AddBlankRow()";
      result_var=NULL;
      obj=.programs.gp[1][6].vars[0]$$;
      method=DataTable::AddBlankRow;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="int AddBlankRow()";
      meth_desc=" add a new row to the data table, sets read (source) and write (sink) index to this last row (as in ReadItem or WriteItem), so that subsequent data routines refer to this new row, and returns row ";
     };
     MethodCall @[1] {
      name="MethodCall_epochnetmonGetMonVals";
      desc="get the new monitor data and stor it into the data table -- this does the main job here";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_netmon->GetMonVals()";
      result_var=NULL;
      obj=$.programs.gp[1][6].vars[1]$;
      method=NetMonitor::GetMonVals;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void GetMonVals()";
      meth_desc=" get all the values and store in current row of data table -- call in program to get new data";
     };
     AssignExpr @[2] {
      name="AssignExpr_epochtimernetworkepochtime";
      desc="get the epoch timer from current network";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_timer = network.epoch_time";
      result_var=$.programs.gp[1][6].vars[2]$;
      expr {
       expr="network.epoch_time";
      };
     };
     MethodCall @[3] {
      name="MethodCall_epochmondataSetV_csepochtimetot1";
      desc="set the total time to compute the epoch (epoch_time_tot -- wall clock time) to time used data from network timer";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_mon_data->SetValColName(epoch_timer.used.GetTotSecs(), \"epoch_time_tot\", -1, )";
      result_var=NULL;
      obj=$.programs.gp[1][6].vars[0]$;
      method=DataTable::SetValColName;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="Variant&";
	name="val";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="epoch_timer.used.GetTotSecs()";
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="taString&";
	name="col_name";
	required=1;
	def_val="\"\"";
	prev_expr=;
	expr {
	 expr="\"epoch_time_tot\"";
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
       ProgArg @[3] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr=;
	};
       };
      };
      meth_sig="bool SetValColName(Variant& val, taString& col_name, int row, bool quiet = false)";
      meth_desc=" set data of scalar type, in Variant form (any data type, use for Programs), for given column name, row; returns 'true' if valid access and set is successful -- quiet = fail quietly";
     };
     MethodCall @[4] {
      name="MethodCall_epochmondataSetV_csepochtimeusr1";
      desc="set the user process time (cpu time for this process, epoch_time_usr) to time used data from network timer";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_mon_data->SetValColName(epoch_timer.used.GetUsrSecs(), \"epoch_time_usr\", -1, )";
      result_var=NULL;
      obj=$.programs.gp[1][6].vars[0]$;
      method=DataTable::SetValColName;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="Variant&";
	name="val";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="epoch_timer.used.GetUsrSecs()";
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="taString&";
	name="col_name";
	required=1;
	def_val="\"\"";
	prev_expr=;
	expr {
	 expr="\"epoch_time_usr\"";
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=1;
	def_val=;
	prev_expr=;
	expr {
	 expr="-1";
	};
       };
       ProgArg @[3] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	prev_expr=;
	expr {
	 expr=;
	};
       };
      };
      meth_sig="bool SetValColName(Variant& val, taString& col_name, int row, bool quiet = false)";
      meth_desc=" set data of scalar type, in Variant form (any data type, use for Programs), for given column name, row; returns 'true' if valid access and set is successful -- quiet = fail quietly";
     };
     MethodCall @[5] {
      name="MethodCall_epochmondataWriteClose";
      desc="update after writing new data to monitor data table";
      flags=CAN_REVERT_TO_CODE;
      code_string="epoch_mon_data->WriteClose()";
      result_var=NULL;
      obj=$.programs.gp[1][6].vars[0]$;
      method=DataTable::WriteClose;
      meth_args {
       name="meth_args";
       el_typ=ProgArg;
       el_def=0;
      };
      meth_sig="void WriteClose()";
      meth_desc=" closes up a write operation -- call when done writing data -- performs any post-writing cleanup/closing of files, etc";
     };
    };
    step_prog=NULL;
    step_n=1;
    doc {
     name="doc";
     desc=;
     web_doc=0;
     wiki=;
     url="local";
     full_url="local";
     text_size=1;
     text=;
     html_text=;
    };
   };
  };
 };
 viewers {
  name="viewers";
  el_typ=MainWindowViewer;
  el_def=0;
  MainWindowViewer @[0] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {name="view_win_lft": value=0: val_type_fixed=0: };
    UserDataItem @[1] {name="view_win_top": value=0.04218928: val_type_fixed=0: };
    UserDataItem @[2] {name="view_win_wd": value=1: val_type_fixed=0: };
    UserDataItem @[3] {name="view_win_ht": value=0.7958951: val_type_fixed=0: };
    UserDataItem @[4] {name="view_win_iconified": value=0: val_type_fixed=0: };
    UserDataItem @[5] {name="view_splitter_state": value=AAAA/wAAAAEAAAADAAABgAAAAogAAAGIAQAAAAYBAAAAAQE=: val_type_fixed=0: };
   };
   name="Browser3";
   m_data=.$$;
   cur_font_size=12;
   visible=1;
   win_name=".projects[\"neuron_pair\"] - neuron_pair.proj";
   m_is_root=0;
   m_is_viewer_xor_browser=0;
   m_is_proj_viewer=1;
   m_is_dialog=0;
   revert_to_tab_no=-1;
   toolbars {
    name="toolbars";
    el_typ=ToolBar;
    el_def=0;
    ToolBar @[0] {
     UserDataItem_List @*(.user_data_) {
      name=;
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {name="view_win_visible": value=1: val_type_fixed=0: };
     };
     name="Application";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
     lft=0;
     top=0;
     o=Horizontal;
    };
   };
   frames {
    name="frames";
    el_typ=BrowseViewerTaBase;
    el_def=0;
    BrowseViewerTaBase @[0] {
     name="Navigator";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
     root_typ=LeabraProject;
     root_md=NULL;
     m_root=$.$;
    };
    PanelViewer @[1] {
     name="Editor";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
    };
    T3PanelViewer @[2] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_52";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {name="view_panel_selected": value=1: val_type_fixed=0: };
     };
     name="Visualizer";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
     panels {
      name="panels";
      el_typ=T3Panel;
      el_def=0;
      T3Panel @[0] {
       name="PatAssocNet";
       m_data=NULL;
       cur_font_size=12;
       visible=1;
       root_view {
	name="root_view";
	m_data=NULL;
	cur_font_size=12;
	m_transform=NULL;
	children {
	 name="children";
	 el_typ=NetView;
	 el_def=0;
	 NetView @[0] {
	  name="projects_Project_0_viewers_Browser3_frames_T3Frames_frames_PatAssocNet_root_view_children_0";
	  m_data=$.networks[0]$;
	  cur_font_size=12;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=1: y=0: z=0: rot=0.35: }: translate={x=0: y=0: z=0: }: };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=1: y=0: z=0: rot=0.35: }: translate={x=0: y=0: z=0: }: };
	  annotations {
	   name="annotations";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="annote_children";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  display=1;
	  lay_layout=THREE_D;
	  lay_mv=0;
	  net_text=1;
	  show_iconified=0;
	  net_text_xform {scale={x=0.8250865: y=0.8250865: z=0.8250862: }: rotate={x=1: y=1.052842e-9: z=1.052839e-9: rot=1.588617: }: translate={x=1.086288: y=-0.2642187: z=-0.2385031: }: };
	  net_text_rot=-90;
	  cur_unit_vals{ act;	  };
	  hot_vars{ targ;ext;act;net;bias_wt;bias_dwt;act_eq;act_nd;act_m;act_p;act_dif;avg_m;avg_l;act_avg;r.wt;r.wt*act;s.wt;r.dwt;s.dwt;act_q1;act_q2;act_q3;act_q4;avg_ss;avg_s;avg_s_eff;avg_l_lrn;v_m_eq;v_m;gc_i;	  };
	  unit_src_path=".layers[1].units[0]";
	  con_type=ANY_CON;
	  hist_idx=0;
	  hist_save=1;
	  hist_max=100;
	  hist_ff=5;
	  movie_size {x=720: y=720: };
	  unit_disp_mode=UDM_BLOCK;
	  unit_text_disp=UTD_VALUES;
	  max_size {x=2: y=1: z=1.5: };
	  max_size2d {x=1: y=4: z=1: };
	  eff_max_size {x=2: y=1: z=1.5: };
	  font_sizes {net_name=0.05: net_vals=0.05: layer=0.04: layer_min=0.01: layer_vals=0.03: prjn=0.01: unit=0.06: un_nm_len=3: };
	  view_params {xy_square=0: unit_spacing=0.05: prjn_disp=L_R_F: prjn_name=0: prjn_width=0.002: prjn_trans=0.5: lay_trans=0.4: unit_trans=0.4: laygp_width=1: show_laygp=1: };
	  wt_line_disp=0;
	  wt_line_width=4;
	  wt_line_thr=0.5;
	  wt_line_swt=0;
	  wt_prjn_k_un=4;
	  wt_prjn_k_gp=1;
	  wt_prjn_lay=NULL;
	  snap_bord_disp=0;
	  snap_bord_width=4;
	  scale {
	   name="scale";
	   chunks=133;
	   min=-1;
	   max=1;
	   last_min=-1;
	   last_max=1;
	   range=1;
	   zero=0;
	   spec=.colorspecs["C_ColdHot"]$$<ColorScaleSpec,C_ColdHot>;
	   auto_scale=0;
	  };
	  scale_ranges {
	   name="scale_ranges";
	   el_typ=ScaleRange;
	   el_def=0;
	   ScaleRange @[0] {
	    var_name="act";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[1] {
	    var_name="r.wt";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[2] {
	    var_name="net";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[3] {
	    var_name="targ";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[4] {
	    var_name="act_m";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[5] {
	    var_name="act_p";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[6] {
	    var_name="ext";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[7] {
	    var_name="vcb.hyst";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[8] {
	    var_name="r.pdw";
	    auto_scale=1;
	    min=-0.005462845;
	    max=0.005462845;
	   };
	   ScaleRange @[9] {
	    var_name="s.pdw";
	    auto_scale=1;
	    min=-0;
	    max=0;
	   };
	   ScaleRange @[10] {
	    var_name="avg_l";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[11] {
	    var_name="bias.wt";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[12] {
	    var_name="bias_wt";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[13] {
	    var_name="r.dwt";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[14] {
	    var_name="s.dwt";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[15] {
	    var_name="s.wt";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[16] {
	    var_name="act_dif";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[17] {
	    var_name="r.wt*act";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[18] {
	    var_name="act_eq";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[19] {
	    var_name="v_m_eq";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[20] {
	    var_name="v_m";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[21] {
	    var_name="gc_i";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[22] {
	    var_name="avg_s_eff";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[23] {
	    var_name="avg_s";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[24] {
	    var_name="avg_ss";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[25] {
	    var_name="act_avg";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[26] {
	    var_name="avg_l_lrn";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[27] {
	    var_name="avg_m";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	  };
	  lay_disp_modes{ Input=0;Output=0;	  };
	 };
	 GraphTableView @[1] {
	  name="EpochOutputData_Graph";
	  m_data=$.data.gp[1][1]$;
	  cur_font_size=12;
taTransform @*(.m_transform) {scale={x=0.8552477: y=0.855247: z=0.8552454: }: rotate={x=0.2380116: y=-0.965614: z=-0.1045715: rot=0.1286655: }: translate={x=1.062504: y=0.9084767: z=-0.04464364: }: };
	  children {
	   name="children";
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    name="batch";
	    m_data=.data.gp[1][1].data[0]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    name="epoch";
	    m_data=.data.gp[1][1].data[1]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    name="avg_sse";
	    m_data=.data.gp[1][1].data[2]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    name="cnt_err";
	    m_data=.data.gp[1][1].data[3]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[4] {
	    name="avg_ext_rew";
	    m_data=.data.gp[1][1].data[4]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[5] {
	    name="avg_cycles";
	    m_data=.data.gp[1][1].data[5]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[6] {
	    name="epoch_time_tot";
	    m_data=.data.gp[1][1].data[6]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[7] {
	    name="epoch_time_usr";
	    m_data=.data.gp[1][1].data[7]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=0.8552477: y=0.855247: z=0.8552454: }: rotate={x=0.2380116: y=-0.965614: z=-0.1045715: rot=0.1286655: }: translate={x=1.062504: y=0.9084767: z=-0.04464364: }: };
	  annotations {
	   name="annotations";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="annote_children";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=10000;
	  view_range {min=0: max=49: };
	  page_rows=4;
	  display_on=1;
	  manip_ctrl_on=0;
	  graph_type=XY;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=2;
	  point_size=0.01;
	  point_spacing=1;
	  solid_lines=0;
	  bar_space=0.2;
	  bar_depth=0.01;
	  label_spacing=-1;
	  string_spacing=1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis_label_rot=0;
	  x_axis {
	   name="x_axis";
	   m_data=NULL;
	   cur_font_size=12;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="epoch";
	   col_name_good=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=49: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   flip=0;
	   n_ticks=10;
	   axis_length=1;
	   labels_on=0;
	   labels_col_name=;
	   row_num=0;
	   axis_label=;
	  };
	  z_axis {
	   name="z_axis";
	   m_data=NULL;
	   cur_font_size=12;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name="batch";
	   col_name_good=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   flip=0;
	   n_ticks=10;
	   axis_length=1;
	   labels_on=0;
	   labels_col_name=;
	   row_num=0;
	   axis_label=;
	  };
	  tot_plots=16;
	  plots {
	   name="plots";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @[0] {
	    name="EpochOutputData_Graph_plot_1";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="avg_sse";
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=1: min=0: fix_max=0: max=1: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[1] {
	    name="EpochOutputData_Graph_plot_2";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="red": r=1: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=SQUARE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[2] {
	    name="EpochOutputData_Graph_plot_3";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=DIAMOND;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[3] {
	    name="EpochOutputData_Graph_plot_4";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[4] {
	    name="EpochOutputData_Graph_plot_5";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=PLUS;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[5] {
	    name="EpochOutputData_Graph_plot_6";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CROSS;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[6] {
	    name="EpochOutputData_Graph_plot_7";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="brown": r=0.6470588: g=0.1647059: b=0.1647059: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=STAR;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[7] {
	    name="EpochOutputData_Graph_plot_8";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="chartreuse": r=0.4980392: g=1: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[8] {
	    name="EpochOutputData_Graph_plot_9";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[9] {
	    name="EpochOutputData_Graph_plot_10";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="red": r=1: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=SQUARE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[10] {
	    name="EpochOutputData_Graph_plot_11";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=DIAMOND;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[11] {
	    name="EpochOutputData_Graph_plot_12";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[12] {
	    name="EpochOutputData_Graph_plot_13";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[13] {
	    name="EpochOutputData_Graph_plot_14";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=PLUS;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[14] {
	    name="EpochOutputData_Graph_plot_15";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="brown": r=0.6470588: g=0.1647059: b=0.1647059: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=CROSS;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[15] {
	    name="EpochOutputData_Graph_plot_16";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="chartreuse": r=0.4980392: g=1: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=STAR;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	  };
	  errbars {
	   name="errbars";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @[0] {
	    name="EpochOutputData_Graph_err_1";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[1] {
	    name="EpochOutputData_Graph_err_2";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[2] {
	    name="EpochOutputData_Graph_err_3";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[3] {
	    name="EpochOutputData_Graph_err_4";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[4] {
	    name="EpochOutputData_Graph_err_5";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[5] {
	    name="EpochOutputData_Graph_err_6";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[6] {
	    name="EpochOutputData_Graph_err_7";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[7] {
	    name="EpochOutputData_Graph_err_8";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[8] {
	    name="EpochOutputData_Graph_err_9";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[9] {
	    name="EpochOutputData_Graph_err_10";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[10] {
	    name="EpochOutputData_Graph_err_11";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[11] {
	    name="EpochOutputData_Graph_err_12";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[12] {
	    name="EpochOutputData_Graph_err_13";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[13] {
	    name="EpochOutputData_Graph_err_14";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[14] {
	    name="EpochOutputData_Graph_err_15";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[15] {
	    name="EpochOutputData_Graph_err_16";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	  };
	  x_axis_label=;
	  y_axis_label=;
	  alt_y_axis_label=;
	  z_axis_label=;
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=FIXED;
	  color_gp_use_y=0;
	  color_axis {
	   name="color_axis";
	   m_data=NULL;
	   cur_font_size=12;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   col_name_good=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   flip=0;
	   n_ticks=10;
	   axis_length=1;
	   labels_on=0;
	   labels_col_name=;
	   row_num=0;
	   axis_label=;
	  };
	  colorscale {
	   name="colorscale";
	   chunks=133;
	   min=-1;
	   max=1;
	   last_min=-1;
	   last_max=1;
	   range=0;
	   zero=0;
	   spec=$.colorspecs["C_ColdHot"]$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name="raster_axis";
	   m_data=NULL;
	   cur_font_size=12;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   col_name_good=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   flip=0;
	   n_ticks=10;
	   axis_length=1;
	   labels_on=0;
	   labels_col_name=;
	   row_num=0;
	   axis_label=;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       headlight_intensity=1;
       ambient_light=0;
       camera_params {field_of_view=45: near_distance=0.1: focal=5: far_distance=1000: };
       stereo_view=STEREO_NONE;
       saved_views {
	name="saved_views";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=0.9369999: y=0.8885967: z=2.505562: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=2.854151;
	};
	T3SavedView @[1] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[6] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[7] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[8] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[9] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3Panel @[1] {
       name="EasyEnv";
       m_data=NULL;
       cur_font_size=12;
       visible=1;
       root_view {
	name="root_view";
	m_data=NULL;
	cur_font_size=12;
	m_transform=NULL;
	children {
	 name="children";
	 el_typ=GridTableView;
	 el_def=0;
	 GridTableView @[0] {
	  name="projects_Project_0_viewers_Browser3_frames_T3Frames_frames_EasyEnv_root_view_children_0";
	  m_data=$.data.gp[0][0]$;
	  cur_font_size=12;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name="children";
	   el_typ=GridColView;
	   el_def=0;
	   GridColView @[0] {
	    name="Name";
	    m_data=.data.gp[0][0].data[0]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    text_width=8;
	    scale_on=1;
	    scale_min=4.580985e-41;
	    scale_max=-2.039298e+29;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[1] {
	    name="Input";
	    m_data=.data.gp[0][0].data[1]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    text_width=8;
	    scale_on=1;
	    scale_min=2.862853e-42;
	    scale_max=2.522337e-44;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[2] {
	    name="Output";
	    m_data=.data.gp[0][0].data[2]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    text_width=8;
	    scale_on=1;
	    scale_min=nan;
	    scale_max=nan;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  annotations {
	   name="annotations";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="annote_children";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=6;
	  view_range {min=0: max=0: };
	  page_rows=10;
	  display_on=1;
	  manip_ctrl_on=1;
	  view_cols=5;
	  page_cols=5;
	  col_range {min=0: max=2: };
	  need_scale_update=1;
	  width=1;
	  grid_on=1;
	  header_on=1;
	  row_num_on=0;
	  two_d_font=0;
	  two_d_font_scale=350;
	  mat_val_text=0;
	  colorscale {
	   name="colorscale";
	   chunks=133;
	   min=-1;
	   max=1;
	   last_min=-1;
	   last_max=1;
	   range=1;
	   zero=0;
	   spec=$.colorspecs["C_ColdHot"]$;
	   auto_scale=0;
	  };
	  scale_per_column=0;
	  grid_margin=0.01;
	  grid_line_size=0.005;
	  row_num_width=4;
	  mat_block_spc=0.1;
	  mat_block_height=0;
	  mat_rot=0;
	  mat_trans=0.4;
	  mat_size_range {min=4: max=16: };
	  text_size_range {min=0.02: max=0.05: };
	  click_vals=0;
	  lmb_val=1;
	  mmb_val=0;
	  use_custom_paging=0;
	 };
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       headlight_intensity=1;
       ambient_light=0;
       camera_params {field_of_view=45: near_distance=0.1: focal=5: far_distance=1000: };
       stereo_view=STEREO_NONE;
       saved_views {
	name="saved_views";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=1.5325: y=0.5174999: z=1.443747: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.453747;
	};
	T3SavedView @[1] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[6] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[7] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[8] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[9] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3Panel @[2] {
       name="HardEnv";
       m_data=NULL;
       cur_font_size=12;
       visible=1;
       root_view {
	name="root_view";
	m_data=NULL;
	cur_font_size=12;
	m_transform=NULL;
	children {
	 name="children";
	 el_typ=GridTableView;
	 el_def=0;
	 GridTableView @[0] {
	  name="projects_Project_0_viewers_Browser3_frames_T3Frames_frames_HardEnv_root_view_children_0";
	  m_data=$.data.gp[0][1]$;
	  cur_font_size=12;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name="children";
	   el_typ=GridColView;
	   el_def=0;
	   GridColView @[0] {
	    name="Name";
	    m_data=.data.gp[0][1].data[0]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    text_width=8;
	    scale_on=1;
	    scale_min=-3.689349e+19;
	    scale_max=1.933168e+31;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[1] {
	    name="Input";
	    m_data=.data.gp[0][1].data[1]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    text_width=4;
	    scale_on=1;
	    scale_min=4.580985e-41;
	    scale_max=-2.040881e+29;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[2] {
	    name="Output";
	    m_data=.data.gp[0][1].data[2]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    text_width=2;
	    scale_on=1;
	    scale_min=4.580985e-41;
	    scale_max=-2.041026e+29;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  annotations {
	   name="annotations";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="annote_children";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=6;
	  view_range {min=0: max=3: };
	  page_rows=10;
	  display_on=1;
	  manip_ctrl_on=1;
	  view_cols=5;
	  page_cols=5;
	  col_range {min=0: max=2: };
	  need_scale_update=1;
	  width=1;
	  grid_on=1;
	  header_on=1;
	  row_num_on=0;
	  two_d_font=0;
	  two_d_font_scale=350;
	  mat_val_text=0;
	  colorscale {
	   name="colorscale";
	   chunks=133;
	   min=-1;
	   max=1;
	   last_min=-1;
	   last_max=1;
	   range=1;
	   zero=0;
	   spec=$.colorspecs["C_ColdHot"]$;
	   auto_scale=0;
	  };
	  scale_per_column=0;
	  grid_margin=0.01;
	  grid_line_size=0.005;
	  row_num_width=4;
	  mat_block_spc=0.1;
	  mat_block_height=0;
	  mat_rot=0;
	  mat_trans=0.4;
	  mat_size_range {min=4: max=16: };
	  text_size_range {min=0.02: max=0.05: };
	  click_vals=0;
	  lmb_val=1;
	  mmb_val=0;
	  use_custom_paging=0;
	 };
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       headlight_intensity=1;
       ambient_light=0;
       camera_params {field_of_view=45: near_distance=0.1: focal=5: far_distance=1000: };
       stereo_view=STEREO_NONE;
       saved_views {
	name="saved_views";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=1.5325: y=0.5174999: z=1.443747: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.453747;
	};
	T3SavedView @[1] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[6] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[7] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[8] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[9] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3Panel @[3] {
       name="ImpossibleEnv";
       m_data=NULL;
       cur_font_size=12;
       visible=1;
       root_view {
	name="root_view";
	m_data=NULL;
	cur_font_size=12;
	m_transform=NULL;
	children {
	 name="children";
	 el_typ=GridTableView;
	 el_def=0;
	 GridTableView @[0] {
	  name="projects_Project_0_viewers_Browser3_frames_T3Frames_frames_ImpossibleEnv_root_view_children_0";
	  m_data=.data.gp[0][2]$$;
	  cur_font_size=12;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name="children";
	   el_typ=GridColView;
	   el_def=0;
	   GridColView @[0] {
	    name="Name";
	    m_data=.data.gp[0][2].data[0]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    text_width=8;
	    scale_on=1;
	    scale_min=1.786042e+25;
	    scale_max=3.285084e-18;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[1] {
	    name="Input";
	    m_data=.data.gp[0][2].data[1]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    text_width=4;
	    scale_on=1;
	    scale_min=6.976836e+22;
	    scale_max=1.775721e+19;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[2] {
	    name="Output";
	    m_data=.data.gp[0][2].data[2]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    text_width=2;
	    scale_on=1;
	    scale_min=4.580985e-41;
	    scale_max=-2.198504e+29;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  annotations {
	   name="annotations";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="annote_children";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=6;
	  view_range {min=0: max=3: };
	  page_rows=10;
	  display_on=1;
	  manip_ctrl_on=1;
	  view_cols=5;
	  page_cols=5;
	  col_range {min=0: max=2: };
	  need_scale_update=1;
	  width=1;
	  grid_on=1;
	  header_on=1;
	  row_num_on=0;
	  two_d_font=0;
	  two_d_font_scale=350;
	  mat_val_text=0;
	  colorscale {
	   name="colorscale";
	   chunks=133;
	   min=-1;
	   max=1;
	   last_min=-1;
	   last_max=1;
	   range=1;
	   zero=0;
	   spec=$.colorspecs["C_ColdHot"]$;
	   auto_scale=0;
	  };
	  scale_per_column=0;
	  grid_margin=0.01;
	  grid_line_size=0.005;
	  row_num_width=4;
	  mat_block_spc=0.1;
	  mat_block_height=0;
	  mat_rot=0;
	  mat_trans=0.4;
	  mat_size_range {min=4: max=16: };
	  text_size_range {min=0.02: max=0.05: };
	  click_vals=0;
	  lmb_val=1;
	  mmb_val=0;
	  use_custom_paging=0;
	 };
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       headlight_intensity=1;
       ambient_light=0;
       camera_params {field_of_view=45: near_distance=0.1: focal=5: far_distance=1000: };
       stereo_view=STEREO_NONE;
       saved_views {
	name="saved_views";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=1.5325: y=0.5174999: z=1.443747: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.453747;
	};
	T3SavedView @[1] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[6] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[7] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[8] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[9] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3Panel @[4] {
       name="TrialOutputData";
       m_data=NULL;
       cur_font_size=12;
       visible=1;
       root_view {
	name="root_view";
	m_data=NULL;
	cur_font_size=12;
	m_transform=NULL;
	children {
	 name="children";
	 el_typ=GridTableView;
	 el_def=0;
	 GridTableView @[0] {
	  name="TrialOutputData_Grid";
	  m_data=$.data.gp[1][0]$;
	  cur_font_size=12;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name="children";
	   el_typ=GridColView;
	   el_def=0;
	   GridColView @[0] {
	    name="trial_name";
	    m_data=.data.gp[1][0].data[0]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    text_width=16;
	    scale_on=1;
	    scale_min=3.048128e+32;
	    scale_max=1.830609e+25;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[1] {
	    name="sse";
	    m_data=.data.gp[1][0].data[1]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    text_width=8;
	    scale_on=1;
	    scale_min=4.580985e-41;
	    scale_max=-2.199864e+29;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[2] {
	    name="Input_act_m";
	    m_data=.data.gp[1][0].data[2]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    text_width=8;
	    scale_on=1;
	    scale_min=4.580985e-41;
	    scale_max=-2.200033e+29;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[3] {
	    name="Output_act_m";
	    m_data=.data.gp[1][0].data[3]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    text_width=8;
	    scale_on=1;
	    scale_min=1.83671e-40;
	    scale_max=0;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[4] {
	    name="wts";
	    m_data=.data.gp[1][0].data[4]$$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    text_width=8;
	    scale_on=1;
	    scale_min=nan;
	    scale_max=3.513266e-30;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  annotations {
	   name="annotations";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="annote_children";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=6;
	  view_range {min=0: max=3: };
	  page_rows=10;
	  display_on=1;
	  manip_ctrl_on=1;
	  view_cols=5;
	  page_cols=5;
	  col_range {min=0: max=2: };
	  need_scale_update=1;
	  width=1;
	  grid_on=1;
	  header_on=1;
	  row_num_on=0;
	  two_d_font=0;
	  two_d_font_scale=350;
	  mat_val_text=0;
	  colorscale {
	   name="colorscale";
	   chunks=133;
	   min=-1;
	   max=1;
	   last_min=-1;
	   last_max=1;
	   range=1;
	   zero=0;
	   spec=$.colorspecs["C_ColdHot"]$;
	   auto_scale=0;
	  };
	  scale_per_column=0;
	  grid_margin=0.01;
	  grid_line_size=0.005;
	  row_num_width=4;
	  mat_block_spc=0.1;
	  mat_block_height=0;
	  mat_rot=0;
	  mat_trans=0.4;
	  mat_size_range {min=4: max=16: };
	  text_size_range {min=0.02: max=0.05: };
	  click_vals=0;
	  lmb_val=1;
	  mmb_val=0;
	  use_custom_paging=0;
	 };
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       headlight_intensity=1;
       ambient_light=0;
       camera_params {field_of_view=45: near_distance=0.1: focal=5: far_distance=1000: };
       stereo_view=STEREO_NONE;
       saved_views {
	name="saved_views";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=1.5325: y=0.5174999: z=1.443747: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.453747;
	};
	T3SavedView @[1] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[6] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[7] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[8] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[9] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3Panel @[5] {
       name="EpochOutputData";
       m_data=NULL;
       cur_font_size=12;
       visible=1;
       root_view {
	name="root_view";
	m_data=NULL;
	cur_font_size=12;
	m_transform=NULL;
	children {
	 name="children";
	 el_typ=GraphTableView;
	 el_def=0;
	 GraphTableView @[0] {
	  name="EpochOutputData_Graph";
	  m_data=$.data.gp[1][1]$;
	  cur_font_size=12;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name="children";
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    name="batch";
	    m_data=$.data.gp[1][1].data[0]$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    name="epoch";
	    m_data=$.data.gp[1][1].data[1]$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    name="avg_sse";
	    m_data=$.data.gp[1][1].data[2]$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    name="cnt_err";
	    m_data=$.data.gp[1][1].data[3]$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[4] {
	    name="avg_ext_rew";
	    m_data=$.data.gp[1][1].data[4]$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[5] {
	    name="avg_cycles";
	    m_data=$.data.gp[1][1].data[5]$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[6] {
	    name="epoch_time_tot";
	    m_data=$.data.gp[1][1].data[6]$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[7] {
	    name="epoch_time_usr";
	    m_data=$.data.gp[1][1].data[7]$;
	    cur_font_size=12;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  annotations {
	   name="annotations";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="annote_children";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=10000;
	  view_range {min=0: max=-1: };
	  page_rows=20;
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=2;
	  point_size=0.01;
	  point_spacing=1;
	  solid_lines=0;
	  bar_space=0.2;
	  bar_depth=0.01;
	  label_spacing=-1;
	  string_spacing=1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis_label_rot=0;
	  x_axis {
	   name="x_axis";
	   m_data=NULL;
	   cur_font_size=12;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="epoch";
	   col_name_good=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   flip=0;
	   n_ticks=10;
	   axis_length=1;
	   labels_on=0;
	   labels_col_name=;
	   row_num=0;
	   axis_label=;
	  };
	  z_axis {
	   name="z_axis";
	   m_data=NULL;
	   cur_font_size=12;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name="batch";
	   col_name_good=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   flip=0;
	   n_ticks=10;
	   axis_length=1;
	   labels_on=0;
	   labels_col_name=;
	   row_num=0;
	   axis_label=;
	  };
	  tot_plots=16;
	  plots {
	   name="plots";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @[0] {
	    name="EpochOutputData_Graph_plot_1";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="avg_sse";
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=1: min=0: fix_max=0: max=1: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[1] {
	    name="EpochOutputData_Graph_plot_2";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="red": r=1: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=SQUARE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[2] {
	    name="EpochOutputData_Graph_plot_3";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=DIAMOND;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[3] {
	    name="EpochOutputData_Graph_plot_4";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[4] {
	    name="EpochOutputData_Graph_plot_5";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=PLUS;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[5] {
	    name="EpochOutputData_Graph_plot_6";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CROSS;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[6] {
	    name="EpochOutputData_Graph_plot_7";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="brown": r=0.6470588: g=0.1647059: b=0.1647059: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=STAR;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[7] {
	    name="EpochOutputData_Graph_plot_8";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="chartreuse": r=0.4980392: g=1: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[8] {
	    name="EpochOutputData_Graph_plot_9";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[9] {
	    name="EpochOutputData_Graph_plot_10";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="red": r=1: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=SQUARE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[10] {
	    name="EpochOutputData_Graph_plot_11";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=DIAMOND;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[11] {
	    name="EpochOutputData_Graph_plot_12";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[12] {
	    name="EpochOutputData_Graph_plot_13";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[13] {
	    name="EpochOutputData_Graph_plot_14";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=PLUS;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[14] {
	    name="EpochOutputData_Graph_plot_15";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="brown": r=0.6470588: g=0.1647059: b=0.1647059: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=CROSS;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[15] {
	    name="EpochOutputData_Graph_plot_16";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="chartreuse": r=0.4980392: g=1: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=STAR;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	  };
	  errbars {
	   name="errbars";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @[0] {
	    name="EpochOutputData_Graph_err_1";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[1] {
	    name="EpochOutputData_Graph_err_2";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[2] {
	    name="EpochOutputData_Graph_err_3";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[3] {
	    name="EpochOutputData_Graph_err_4";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[4] {
	    name="EpochOutputData_Graph_err_5";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[5] {
	    name="EpochOutputData_Graph_err_6";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[6] {
	    name="EpochOutputData_Graph_err_7";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[7] {
	    name="EpochOutputData_Graph_err_8";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[8] {
	    name="EpochOutputData_Graph_err_9";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[9] {
	    name="EpochOutputData_Graph_err_10";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[10] {
	    name="EpochOutputData_Graph_err_11";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[11] {
	    name="EpochOutputData_Graph_err_12";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[12] {
	    name="EpochOutputData_Graph_err_13";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[13] {
	    name="EpochOutputData_Graph_err_14";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[14] {
	    name="EpochOutputData_Graph_err_15";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[15] {
	    name="EpochOutputData_Graph_err_16";
	    m_data=NULL;
	    cur_font_size=12;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	  };
	  x_axis_label=;
	  y_axis_label=;
	  alt_y_axis_label=;
	  z_axis_label=;
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=FIXED;
	  color_gp_use_y=0;
	  color_axis {
	   name="color_axis";
	   m_data=NULL;
	   cur_font_size=12;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   col_name_good=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   flip=0;
	   n_ticks=10;
	   axis_length=1;
	   labels_on=0;
	   labels_col_name=;
	   row_num=0;
	   axis_label=;
	  };
	  colorscale {
	   name="colorscale";
	   chunks=133;
	   min=-1;
	   max=1;
	   last_min=-1;
	   last_max=1;
	   range=0;
	   zero=0;
	   spec=$.colorspecs["C_ColdHot"]$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name="raster_axis";
	   m_data=NULL;
	   cur_font_size=12;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   col_name_good=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   flip=0;
	   n_ticks=10;
	   axis_length=1;
	   labels_on=0;
	   labels_col_name=;
	   row_num=0;
	   axis_label=;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       headlight_intensity=1;
       ambient_light=0;
       camera_params {field_of_view=45: near_distance=0.1: focal=5: far_distance=1000: };
       stereo_view=STEREO_NONE;
       saved_views {
	name="saved_views";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=1.429511: y=0.4889999: z=1.600235: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=2.110235;
	};
	T3SavedView @[1] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[6] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[7] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[8] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[9] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
     };
    };
   };
   docks {
    name="docks";
    el_typ=ToolBoxDockViewer;
    el_def=0;
    ToolBoxDockViewer @[0] {
     UserDataItem_List @*(.user_data_) {
      name=;
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {name="view_win_lft": value=-0.002785515: val_type_fixed=0: };
      UserDataItem @[1] {name="view_win_top": value=0.03078677: val_type_fixed=0: };
      UserDataItem @[2] {name="view_win_wd": value=0.05710306: val_type_fixed=0: };
      UserDataItem @[3] {name="view_win_ht": value=0.690992: val_type_fixed=0: };
      UserDataItem @[4] {name="view_win_iconified": value=0: val_type_fixed=0: };
      UserDataItem @[5] {name="view_visible": value=0: val_type_fixed=0: };
     };
     name="Tools";
     m_data=NULL;
     cur_font_size=12;
     visible=0;
     win_name=;
     dock_flags=DV_MOVABLE|DV_FLOATABLE;
     dock_area=1;
    };
   };
  };
 };
 save_view=1;
 save_as_only=0;
 auto_name=1;
 last_change_desc="Project updated on wiki: CCN changes: updt to current";
 tree_state{ .;.docs;.ctrl_panels;.ctrl_panels[0];.ctrl_panels[0].mbrs;.data;.data.gp[0];.data.gp[0][2];.data.gp[1];.data.gp[1][0];.data.gp[1][1];.data.gp[1][3];.data.gp[2];.programs;.programs.break_points;.programs[1].args;.programs[1].functions;.programs[2];.programs[2].objs;.programs[2].objs_vars;.programs[2].types;.programs[2].args;.programs[2].vars;.programs[2].functions;.programs[2].init_code;.programs[2].prog_code;.programs[2].prog_code[0];.programs[2].prog_code[3];.programs[2].prog_code[4];.programs[3];.programs[3].objs;.programs[3].objs_vars;.programs[3].types;.programs[3].args;.programs[3].vars;.programs[3].functions;.programs[3].init_code;.programs[3].prog_code;.programs[3].prog_code[0];.programs.gp[0];.programs.gp[0][4];.programs.gp[0][4].vars;.programs.gp[0][4].init_code;.programs.gp[0][4].prog_code;.programs.gp[0][4].prog_code[0];.programs.gp[0][4].prog_code[6];.programs.gp[0][5];.programs.gp[0][5].prog_code;.programs.gp[0][8];.programs.gp[0][8].objs;.programs.gp[0][8].objs[0];.programs.gp[0][10];.programs.gp[0][10].objs;.programs.gp[0][10].objs[0];.programs.gp[0][10].vars;.programs.gp[1][2];.programs.gp[1][2].vars;.programs.gp[1][2].init_code;.programs.gp[1][2].prog_code;.programs.gp[1][2].prog_code[0];.programs.gp[1][2].prog_code[6];.programs.gp[1][3];.programs.gp[1][3].prog_code;.programs.gp[1][6];.programs.gp[1][6].objs;.programs.gp[1][6].objs[0];.viewers[0];.viewers[0].frames[2];.viewers[0].frames[2].panels[0].root_view;.viewers[0].frames[2].panels[0].root_view.children[1];.viewers[0].frames[2].panels[5].root_view;.viewers[0].frames[2].panels[5].root_view.children[0];.networks;.networks[0];.networks[0].specs;.networks[0].specs[2];.networks[0].layers;.networks[0].layers[0];.networks[0].weights; };
 networks {
  name="networks";
  el_typ=LeabraNetwork;
  el_def=0;
  LeabraNetwork @[0] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItemBase;
    el_def=0;
    UserDataItem @[0] {name="cos_err": value=1: val_type_fixed=1: };
    UserDataItem @[1] {name="norm_err": value=0: val_type_fixed=1: };
    UserDataItem @[2] {name="ext_rew": value=0: val_type_fixed=1: };
    UserDataItem @[3] {name="minus_output_name": value=0: val_type_fixed=1: };
    UserDataItem @[4] {name="rt_cycles": value=1: val_type_fixed=1: };
    UserDataItem @[5] {name="tot_cycle": value=1: val_type_fixed=1: };
    UserDataItem @[6] {name="phase": value=1: val_type_fixed=1: };
    UserDataItem @[7] {name="quarter": value=1: val_type_fixed=1: };
    UserDataItem @[8] {name="sse": value=1: val_type_fixed=1: };
    UserDataItem @[9] {name="output_name": value=0: val_type_fixed=1: };
    UserDataItem @[10] {name="trial_name": value=1: val_type_fixed=1: };
    UserDataItem @[11] {name="group_name": value=0: val_type_fixed=1: };
    UserDataItem @[12] {name="total_trials": value=1: val_type_fixed=1: };
    UserDataItem @[13] {name="time": value=0: val_type_fixed=1: };
    UserDataItem @[14] {name="cycle": value=1: val_type_fixed=1: };
    UserDataItem @[15] {name="tick": value=0: val_type_fixed=1: };
    UserDataItem @[16] {name="trial": value=1: val_type_fixed=1: };
    UserDataItem @[17] {name="group": value=0: val_type_fixed=1: };
    UserDataItem @[18] {name="epoch": value=1: val_type_fixed=1: };
    UserDataItem @[19] {name="batch": value=1: val_type_fixed=1: };
    UserDataItem @[20] {name="trial_cos_diff": value=1: val_type_fixed=1: };
    UserDataItem @[21] {name="avg_act_diff": value=1: val_type_fixed=1: };
    UserDataItem @[22] {name="cos_diff": value=1: val_type_fixed=1: };
    UserDataItem @[23] {name="maxda": value=0: val_type_fixed=1: };
    UserDataItem @[24] {name="minus_cycles": value=1: val_type_fixed=1: };
    UserDataItem @[25] {name="ct_cycle": value=0: val_type_fixed=1: };
    UserDataItem @[26] {name="phase_no": value=1: val_type_fixed=1: };
   };
   name="PatAssocNet";
   desc="pattern associator network";
   specs {
    name="specs";
    el_typ=LeabraUnitSpec;
    el_def=0;
    LeabraUnitSpec @[0] {
     name="UnitSpec_0";
     is_used=1;
     used_status=USED;
     desc=;
     unique{      };
     saved{      };
     children {
      name="children";
      el_typ=LeabraUnitSpec;
      el_def=0;
     };
     act_range {min=0: max=1: range=1: scale=1: };
     bias_spec {type=LeabraBiasSpec: spec=$.networks[0].specs[1].children[0]$: };
     sse_tol=0;
     act_fun=NOISY_XX1;
     act {thr=0.5: gain=100: nvar=0.005: };
     act_misc {rec_nd=1: avg_nd=1: dif_avg=0: net_gain=1: act_max_hz=100: avg_trace=0: lambda=0: avg_tau=200: avg_init=0.15: avg_dt=0.005: };
     spike {rise=0: decay=5: g_gain=9: window=3: eq_gain=8: eq_tau=50: eq_dt=0.02: };
     spike_misc {ex=0: exp_slope=0.02: spk_thr=1.2: vm_r=0.3: t_r=3: clamp_max_p=0.12: clamp_type=REGULAR: eff_spk_thr=0.5: };
     opt_thresh {send=0: delta=0.005: xcal_lrn=0.01: };
     clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
     vm_range {min=0: max=2: range=2: scale=0.5: };
     init {v_m=0.4: act=0: netin=0: };
     dt {integ=1: vm_tau=3.3: net_tau=1.4: fast_cyc=0: vm_dt=0.3030303: net_dt=0.7142857: };
     act_avg {ss_tau=2: s_tau=2: m_tau=10: m_in_s=0.1: ss_dt=0.5: s_dt=0.5: m_dt=0.1: s_in_s=0.9: };
     avg_l {init=0.4: gain=2.5: min=0.2: tau=10: lrn_max=0.5: lrn_min=0.0001: dt=0.1: lrn_fact=0.2173478: };
     avg_l_2 {err_mod=1: err_min=0.01: lay_act_thr=0.01: };
     g_bar {e=1: l=0.1: i=1: };
     e_rev {e=1: l=0.3: i=0.25: };
     adapt {on=0: tau=144: vm_gain=0.04: spike_gain=0.00805: Ei_dyn=1: Ei_gain=0.001: Ei_tau=50: dt=0.006944444: Ei_dt=0.02: };
     stp {on=0: algorithm=CYCLES: f_r_ratio=0.02: rec_tau=200: p0=0.2: p0_norm=0.2: kre_tau=100: kre=0.002: fac_tau=4: fac=0.3: thresh=0.5: n_trials=1: rec_prob=0.1: rec_dt=0.005: fac_dt=0.25: kre_dt=0.01: oneo_p0_norm=5: };
     syn_delay {on=0: delay=4: };
     deep_raw_qtr=Q4;
     deep {on=0: role=SUPER: raw_thr_rel=0.1: raw_thr_abs=0.1: mod_min=0.8: mod_thr=0.1: ctxt_prv=0: tick_updt=-1: else_prv=0.9: mod_range=0.2: ctxt_new=1: else_new=0.1: };
     trc {p_only_m=0: thal_gate=0: avg_clamp=0: deep_gain=0.2: clip=0: clip_max=0.4: std_gain=0.8: };
     da_mod {on=0: minus=0: plus=0.1: };
     noise_type=NO_NOISE;
     noise {name="noise": type=GAUSSIAN: mean=0: var=0.001: par=1: };
     noise_adapt {trial_fixed=1: mode=FIXED_NOISE: };
     noise_sched {
      name="noise_sched";
      el_typ=SchedItem;
      el_def=0;
      default_val=1;
      interpolate=1;
     };
    };
    LeabraConSpec @[1] {
     name="ConSpec_0";
     is_used=1;
     used_status=USED;
     desc=;
     unique{ xcal;wt_limits;     };
     saved{      };
     children {
      name="children";
      el_typ=LeabraConSpec;
      el_def=0;
      LeabraBiasSpec @[0] {
       name="BiasSpec_0";
       is_used=1;
       used_status=USED;
       desc=;
       unique{ rnd;wt_limits;wt_scale;wt_scale_init;lrate;xcal;       };
       saved{        };
       children {
	name="children";
	el_typ=LeabraBiasSpec;
	el_def=0;
       };
       rnd {name="rnd": type=UNIFORM: mean=0: var=0: par=1: };
       wt_limits {type=NONE: min=-1: max=5: sym=0: sym_fm_top=0: };
       inhib=0;
       wt_scale {abs=1: rel=0.02: no_plus_net=0: };
       learn=1;
       learn_qtr=Q4;
       lrate=0;
       use_lrate_sched=1;
       cur_lrate=0;
       lrs_mult=1;
       lrate_sched {
	name="lrate_sched";
	el_typ=SchedItem;
	el_def=0;
	default_val=1;
	interpolate=0;
       };
       use_unlearnable=1;
       xcal {m_lrn=1: set_l_lrn=0: l_lrn=0: d_rev=0.1: d_thr=0.0001: d_rev_ratio=-9: };
       wt_sig {gain=6: off=1: soft_bound=1: };
       dynlr {dwt_norm=NO_NORM: norm_tau=1000: norm_min=0.001: moment=NO_MOMENT: m_tau=10: s_tau=50: l_tau=2: xx1=1: gain=2: lrate_comp=0.01: norm_dt=0.001: norm_dt_c=0.999: m_dt=0.1: m_dt_c=0.9: s_dt=0.02: l_dt=0.5: };
       wt_bal {on=0: hi_thr=0.4: hi_gain=4: lo_thr=0.2: lo_gain=4: };
       adapt_scale {on=0: tau=5000: lo_thr=0.25: hi_thr=0.75: lo_scale=0.01: hi_scale=2: dt=0.0002: };
       slow_wts {on=0: swt_pct=0.8: slow_tau=100: wt_tau=1: fwt_pct=0.2: slow_dt=0.01: wt_dt=1: };
       deep {on=0: bg_lrate=1: fg_lrate=0: };
       margin {lrate_mod=0: stable_lrate=0.5: sign_dwt=0: sign_lrn=0.5: };
       dwt_thresh=0.1;
      };
     };
     rnd {name="rnd": type=UNIFORM: mean=0.5: var=0: par=1: };
     wt_limits {type=MIN_MAX: min=0: max=1: sym=0: sym_fm_top=0: };
     inhib=0;
     wt_scale {abs=1: rel=1: no_plus_net=0: };
     learn=1;
     learn_qtr=Q4;
     lrate=0.04;
     use_lrate_sched=1;
     cur_lrate=0.04;
     lrs_mult=1;
     lrate_sched {
      name="lrate_sched";
      el_typ=SchedItem;
      el_def=0;
      default_val=1;
      interpolate=0;
     };
     use_unlearnable=1;
     xcal {m_lrn=0: set_l_lrn=1: l_lrn=1: d_rev=0.1: d_thr=0.0001: d_rev_ratio=-9: };
     wt_sig {gain=6: off=1: soft_bound=1: };
     dynlr {dwt_norm=NO_NORM: norm_tau=1000: norm_min=0.001: moment=NO_MOMENT: m_tau=10: s_tau=50: l_tau=2: xx1=1: gain=2: lrate_comp=0.01: norm_dt=0.001: norm_dt_c=0.999: m_dt=0.1: m_dt_c=0.9: s_dt=0.02: l_dt=0.5: };
     wt_bal {on=0: hi_thr=0.4: hi_gain=4: lo_thr=0.2: lo_gain=4: };
     adapt_scale {on=0: tau=5000: lo_thr=0.25: hi_thr=0.75: lo_scale=0.01: hi_scale=2: dt=0.0002: };
     slow_wts {on=0: swt_pct=0.8: slow_tau=100: wt_tau=1: fwt_pct=0.2: slow_dt=0.01: wt_dt=1: };
     deep {on=0: bg_lrate=1: fg_lrate=0: };
     margin {lrate_mod=0: stable_lrate=0.5: sign_dwt=0: sign_lrn=0.5: };
    };
    LeabraLayerSpec @[2] {
     name="InputLayer";
     is_used=1;
     used_status=USED;
     desc=;
     unique{ lay_inhib;     };
     saved{      };
     children {
      name="children";
      el_typ=LeabraLayerSpec;
      el_def=0;
      LeabraLayerSpec @[0] {
       name="OutputLayer";
       is_used=1;
       used_status=USED;
       desc=;
       unique{ kwta;       };
       saved{        };
       children {
	name="children";
	el_typ=LeabraLayerSpec;
	el_def=0;
       };
       lay_inhib {on=1: gi=1.5: ff=0: fb=0.5: fb_tau=1.4: max_vs_avg=0: ff0=0.1: fb_dt=0.7142857: };
       unit_gp_inhib {on=0: gi=2: ff=1: fb=1: fb_tau=1.4: max_vs_avg=0: ff0=0.1: fb_dt=0.7142857: };
       multi_gp_inhib {on=0: gi=1.8: ff=1: fb=1: fb_tau=1.4: max_vs_avg=0: ff0=0.1: fb_dt=0.7142857: };
       multi_gp_geom {size={x=3: y=3: }: st_off={x=-1: y=-1: }: sub_size={x=1: y=1: }: wrap=1: };
       lay_gp_inhib {on=0: gi=2: ff=1: fb=1: fb_tau=1.4: max_vs_avg=0: ff0=0.1: fb_dt=0.7142857: };
       avg_act {targ_init=0.5: fixed=1: use_ext_act=0: use_first=1: tau=100: adjust=1: dt=0.01: };
       inhib_adapt {on=0: tol_pct=0.25: trial_interval=100: tau=200: dt=0.005: };
       inhib_misc {net_thr=0: thr_rel=1: self_fb=0: self_tau=1.4: fb_up_immed=0: self_dt=0.7142857: };
       clamp {hard=1: gain=0.2: avg=0: avg_gain=0.2: };
       decay {trial=1: };
       del_inhib {on=0: prv_trl=0: prv_q=0: };
       margin {pct_marg=0.3: avg_tau=100: adapt_tau=500: tol_pct=0.25: avg_act=0.8: low_thr=0.501: med_thr=0.506: hi_thr=0.508: avg_dt=0.01: adapt_dt=0.002: };
       lay_lrate=1;
       cos_diff {avg_tau=100: lrate_mod=0: lrmod_fm_trc=0: lrmod_z_thr=-1.5: set_net_unlrn=0: avg_dt=0.01: avg_dt_c=0.99: };
       lstats {hog_thr=0.3: dead_thr=0.01: };
      };
     };
     lay_inhib {on=1: gi=1.5: ff=0: fb=0.5: fb_tau=1.4: max_vs_avg=0: ff0=0.1: fb_dt=0.7142857: };
     unit_gp_inhib {on=0: gi=2: ff=1: fb=1: fb_tau=1.4: max_vs_avg=0: ff0=0.1: fb_dt=0.7142857: };
     multi_gp_inhib {on=0: gi=1.8: ff=1: fb=1: fb_tau=1.4: max_vs_avg=0: ff0=0.1: fb_dt=0.7142857: };
     multi_gp_geom {size={x=3: y=3: }: st_off={x=-1: y=-1: }: sub_size={x=1: y=1: }: wrap=1: };
     lay_gp_inhib {on=0: gi=2: ff=1: fb=1: fb_tau=1.4: max_vs_avg=0: ff0=0.1: fb_dt=0.7142857: };
     avg_act {targ_init=0.5: fixed=1: use_ext_act=0: use_first=1: tau=100: adjust=1: dt=0.01: };
     inhib_adapt {on=0: tol_pct=0.25: trial_interval=100: tau=200: dt=0.005: };
     inhib_misc {net_thr=0: thr_rel=1: self_fb=0: self_tau=1.4: fb_up_immed=0: self_dt=0.7142857: };
     clamp {hard=1: gain=0.2: avg=0: avg_gain=0.2: };
     decay {trial=1: };
     del_inhib {on=0: prv_trl=0: prv_q=0: };
     margin {pct_marg=0.3: avg_tau=100: adapt_tau=500: tol_pct=0.25: avg_act=0.8: low_thr=0.501: med_thr=0.506: hi_thr=0.508: avg_dt=0.01: adapt_dt=0.002: };
     lay_lrate=1;
     cos_diff {avg_tau=100: lrate_mod=0: lrmod_fm_trc=0: lrmod_z_thr=-1.5: set_net_unlrn=0: avg_dt=0.01: avg_dt_c=0.99: };
     lstats {hog_thr=0.3: dead_thr=0.01: };
    };
    FullPrjnSpec @[3] {
     name="FullPrjn";
     is_used=1;
     used_status=USED;
     desc=;
     unique{      };
     saved{      };
     children {
      name="children";
      el_typ=FullPrjnSpec;
      el_def=0;
     };
     self_con=0;
     init_wts=0;
     set_scale=0;
     init_wt_val=1;
     add_rnd_var=0;
     renorm_wts {on=0: mult_norm=1: avg_wt=0.5: };
    };
   };
   param_seqs {
    name="param_seqs";
    el_typ=ParamSeq;
    el_def=0;
   };
   layers {
    name="layers";
    el_typ=LeabraLayer;
    el_def=0;
    pos {x=0: y=0: z=0: };
    pos2d {x=0: y=0: };
    max_disp_size {x=2: y=1: z=2: };
    max_disp_size2d {x=1: y=4: };
    LeabraLayer @[0] {
     name="Input";
     desc=;
     flags=0;
     layer_type=INPUT;
     pos_rel {rel=ABS_POS: other=NULL: x_align=LEFT: x_off=0: y_align=FRONT: y_off=0: space=2: };
     pos {x=0: y=0: z=0: };
     pos_abs {x=0: y=0: z=0: };
     pos2d {x=0: y=0: };
     pos2d_abs {x=0: y=0: };
     disp_scale=1;
     un_geom {x=1: y=1: n_not_xy=0: n=1: };
     unit_groups=0;
     virt_groups=1;
     gp_geom {x=1: y=1: n_not_xy=0: n=1: };
     gp_spc {x=0: y=0: };
     flat_geom {x=1: y=1: n_not_xy=0: n=1: };
     disp_geom {x=1: y=1: n_not_xy=0: n=1: };
     scaled_disp_geom {x=1: y=1: n_not_xy=0: n=1: };
     n_recv_prjns=0;
     n_send_prjns=1;
     projections {
      name="projections";
      el_typ=LeabraPrjn;
      el_def=0;
     };
     send_prjns {
      name="send_prjns";
      el_typ=LeabraPrjn;
      el_def=0;
      Projection_Group @. = [0] = LeabraPrjn .networks[0].layers[1].projections[0];
     };
     units {
      name="units";
      el_typ=LeabraUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      output_name=;
     };
     unit_spec {type=LeabraUnitSpec: spec=$.networks[0].specs[0]$: };
     dist {fm_input=0: fm_output=1: };
     units_lesioned=0;
     gp_unit_names_4d=0;
     brain_area=;
     voxel_fill_pct=1;
     acts_m_avg=0.8124986;
     acts_p_avg=0.8124986;
     acts_p_avg_eff=0.5;
     spec {type=LeabraLayerSpec: spec=$.networks[0].specs[2]$: };
     adapt_gi=1;
     margin_low_thr=0.501;
     margin_med_thr=0.506;
     margin_hi_thr=0.508;
     margin_low_avg=0.625;
     margin_med_avg=0.09375;
     margin_hi_avg=0.4375;
     twod_vals {
      name="twod_vals";
     };
    };
    LeabraLayer @[1] {
     name="Output";
     desc=;
     flags=0;
     layer_type=TARGET;
     pos_rel {rel=ABS_POS: other=NULL: x_align=LEFT: x_off=0: y_align=FRONT: y_off=0: space=2: };
     pos {x=1: y=0: z=1: };
     pos_abs {x=1: y=0: z=1: };
     pos2d {x=0: y=3: };
     pos2d_abs {x=0: y=3: };
     disp_scale=1;
     un_geom {x=1: y=1: n_not_xy=0: n=1: };
     unit_groups=0;
     virt_groups=1;
     gp_geom {x=1: y=1: n_not_xy=0: n=1: };
     gp_spc {x=0: y=0: };
     flat_geom {x=1: y=1: n_not_xy=0: n=1: };
     disp_geom {x=1: y=1: n_not_xy=0: n=1: };
     scaled_disp_geom {x=1: y=1: n_not_xy=0: n=1: };
     n_recv_prjns=1;
     n_send_prjns=0;
     projections {
      name="projections";
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_Input";
       off=0;
       disp=1;
       notes=;
       from_type=CUSTOM;
       from=.networks[0].layers[0]$$;
       spec {type=FullPrjnSpec: spec=.networks[0].specs[3]$$: };
       con_type=LeabraCon;
       con_spec {type=LeabraConSpec: spec=$.networks[0].specs[1]$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       dir_fixed=0;
       direction=FM_INPUT;
       prjn_clr {r=1: g=0.9: b=0.5: a=1: };
      };
     };
     send_prjns {
      name="send_prjns";
      el_typ=LeabraPrjn;
      el_def=0;
     };
     units {
      name="units";
      el_typ=LeabraUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      output_name=;
     };
     unit_spec {type=LeabraUnitSpec: spec=$.networks[0].specs[0]$: };
     dist {fm_input=1: fm_output=0: };
     units_lesioned=0;
     gp_unit_names_4d=0;
     brain_area=;
     voxel_fill_pct=1;
     acts_m_avg=0.492976;
     acts_p_avg=0.8124986;
     acts_p_avg_eff=0.5;
     spec {type=LeabraLayerSpec: spec=.networks[0].specs[2].children[0]$$: };
     adapt_gi=1;
     margin_low_thr=0.501;
     margin_med_thr=0.506;
     margin_hi_thr=0.508;
     margin_low_avg=0.625;
     margin_med_avg=0.09375;
     margin_hi_avg=0.4375;
     twod_vals {
      name="twod_vals";
     };
    };
   };
   weights {
    name="weights";
    el_typ=Weights;
    el_def=0;
   };
   flags=BUILD_INIT_WTS;
   unit_vars_type=LeabraUnitVars;
   con_group_type=LeabraConGroup;
   auto_build=AUTO_BUILD;
   auto_load_wts=NO_AUTO_LOAD;
   auto_load_file=;
   brain_atlas_name=;
   train_mode=TRAIN;
   wt_update=ON_LINE;
   small_batch_n=10;
   stats {sse_unit_avg=0: sse_sqrt=0: cnt_err_tol=0: prerr=0: };
   threads {run_time={name="": s_used=0: n_used=0: avg_used={avg=0: sum=0: n=0: }: }: sync_time={name="": s_used=0: n_used=0: avg_used={avg=0: sum=0: n=0: }: }: total_time={name="": s_used=0: n_used=0: avg_used={avg=0: sum=0: n=0: }: }: n_wake_in_sync=0: run_time_pct=0: sync_time_pct=0: wake_in_sync_pct=0.006861665278624369: };
   cuda {sync_units=0: sync_cons=0: min_threads=32: max_threads=1024: cons_per_thread=2: timers_on=0: n_threads=32: };
   usr1_save_fmt=FULL_NET;
   wt_save_fmt=TEXT;
   n_units=3;
   n_cons=1;
   max_prjns=1;
   max_disp_size {x=2: y=1: z=2: };
   max_disp_size2d {x=1: y=4: };
   times {quarter=25: deep_cyc=5: time_inc=0.001: wt_bal_int=10: minus=75: plus=25: total_cycles=100: thal_gate_cycle=-2: };
   lstats {trg_max_act_crit=0.5: off_errs=1: on_errs=1: agg_unlearnable=0: wt_bal=0: };
   net_misc {spike=0: deep=0: bias_learn=1: trial_decay=1: diff_scale_p=0: diff_scale_q1=0: wt_bal=0: lay_gp_inhib=0: inhib_cons=0: };
   deep {on=0: ctxt=0: raw_net=0: mod_net=0: raw_qtr=0: };
   rel_netin {on=1: trl_skip=10: epc_skip=10: };
  };
 };
};
